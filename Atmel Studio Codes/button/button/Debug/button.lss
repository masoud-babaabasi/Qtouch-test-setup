
button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00804000  00001c1c  00001cb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  00804094  00804094  00001d44  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001d44  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  00001db8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000064ff  00000000  00000000  00002070  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003e7d  00000000  00000000  0000856f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017d9  00000000  00000000  0000c3ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004a0  00000000  00000000  0000dbc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002e1f  00000000  00000000  0000e068  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000932  00000000  00000000  00010e87  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  000117b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__vector_3>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 ab 02 	jmp	0x556	; 0x556 <__vector_27>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e8 <__ctors_end>:
      e8:	11 24       	eor	r1, r1
      ea:	1f be       	out	0x3f, r1	; 63
      ec:	cf ef       	ldi	r28, 0xFF	; 255
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	df e7       	ldi	r29, 0x7F	; 127
      f2:	de bf       	out	0x3e, r29	; 62

000000f4 <__do_copy_data>:
      f4:	10 e4       	ldi	r17, 0x40	; 64
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e4       	ldi	r27, 0x40	; 64
      fa:	ec e1       	ldi	r30, 0x1C	; 28
      fc:	fc e1       	ldi	r31, 0x1C	; 28
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 39       	cpi	r26, 0x94	; 148
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	20 e4       	ldi	r18, 0x40	; 64
     110:	a4 e9       	ldi	r26, 0x94	; 148
     112:	b0 e4       	ldi	r27, 0x40	; 64
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ac 3b       	cpi	r26, 0xBC	; 188
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 04 01 	call	0x208	; 0x208 <main>
     122:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     12a:	0e 94 24 03 	call	0x648	; 0x648 <system_init>

	touch_init();
     12e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <touch_init>
     132:	08 95       	ret

00000134 <__vector_3>:

#include <driver_init.h>
#include <compiler.h>

ISR(RTC_CNT_vect)
{
     134:	1f 92       	push	r1
     136:	0f 92       	push	r0
     138:	0f b6       	in	r0, 0x3f	; 63
     13a:	0f 92       	push	r0
     13c:	11 24       	eor	r1, r1
     13e:	0b b6       	in	r0, 0x3b	; 59
     140:	0f 92       	push	r0
     142:	2f 93       	push	r18
     144:	3f 93       	push	r19
     146:	4f 93       	push	r20
     148:	5f 93       	push	r21
     14a:	6f 93       	push	r22
     14c:	7f 93       	push	r23
     14e:	8f 93       	push	r24
     150:	9f 93       	push	r25
     152:	af 93       	push	r26
     154:	bf 93       	push	r27
     156:	ef 93       	push	r30
     158:	ff 93       	push	r31

	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
     15a:	0e 94 63 02 	call	0x4c6	; 0x4c6 <touch_timer_handler>

	/* Compare interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_CMP_bm;
     15e:	82 e0       	ldi	r24, 0x02	; 2
     160:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x7e0143>
}
     164:	ff 91       	pop	r31
     166:	ef 91       	pop	r30
     168:	bf 91       	pop	r27
     16a:	af 91       	pop	r26
     16c:	9f 91       	pop	r25
     16e:	8f 91       	pop	r24
     170:	7f 91       	pop	r23
     172:	6f 91       	pop	r22
     174:	5f 91       	pop	r21
     176:	4f 91       	pop	r20
     178:	3f 91       	pop	r19
     17a:	2f 91       	pop	r18
     17c:	0f 90       	pop	r0
     17e:	0b be       	out	0x3b, r0	; 59
     180:	0f 90       	pop	r0
     182:	0f be       	out	0x3f, r0	; 63
     184:	0f 90       	pop	r0
     186:	1f 90       	pop	r1
     188:	18 95       	reti

0000018a <shiftOut>:
		pre_key_statuse = key_status;
	}
	}
}

void shiftOut(uint32_t data){
     18a:	cf 92       	push	r12
     18c:	df 92       	push	r13
     18e:	ef 92       	push	r14
     190:	ff 92       	push	r15
	PORTC.OUTCLR = ( 1 << 5 ) | ( 1 << 6 ) | ( 1 << 7 );
     192:	20 ee       	ldi	r18, 0xE0	; 224
     194:	20 93 46 04 	sts	0x0446, r18	; 0x800446 <__TEXT_REGION_LENGTH__+0x7e0446>
	data &= (0x00ffffff);
     198:	6b 01       	movw	r12, r22
     19a:	7c 01       	movw	r14, r24
     19c:	ff 24       	eor	r15, r15
     19e:	87 e1       	ldi	r24, 0x17	; 23
     1a0:	90 e0       	ldi	r25, 0x00	; 0
	for(int8_t i=23 ; i >= 0 ; i--){
		if( data & ( (uint32_t)1 << i) ) PORTC.OUTSET = ( 1 << 5);
		else PORTC.OUTCLR = ( 1 << 5);
     1a2:	e0 e4       	ldi	r30, 0x40	; 64
     1a4:	f4 e0       	ldi	r31, 0x04	; 4
     1a6:	30 e2       	ldi	r19, 0x20	; 32
		PORTC.OUTSET = (1 << 7 );
     1a8:	20 e8       	ldi	r18, 0x80	; 128

void shiftOut(uint32_t data){
	PORTC.OUTCLR = ( 1 << 5 ) | ( 1 << 6 ) | ( 1 << 7 );
	data &= (0x00ffffff);
	for(int8_t i=23 ; i >= 0 ; i--){
		if( data & ( (uint32_t)1 << i) ) PORTC.OUTSET = ( 1 << 5);
     1aa:	b7 01       	movw	r22, r14
     1ac:	a6 01       	movw	r20, r12
     1ae:	08 2e       	mov	r0, r24
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <shiftOut+0x30>
     1b2:	76 95       	lsr	r23
     1b4:	67 95       	ror	r22
     1b6:	57 95       	ror	r21
     1b8:	47 95       	ror	r20
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <shiftOut+0x28>
     1be:	40 ff       	sbrs	r20, 0
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <shiftOut+0x3c>
     1c2:	35 83       	std	Z+5, r19	; 0x05
     1c4:	01 c0       	rjmp	.+2      	; 0x1c8 <shiftOut+0x3e>
		else PORTC.OUTCLR = ( 1 << 5);
     1c6:	36 83       	std	Z+6, r19	; 0x06
		PORTC.OUTSET = (1 << 7 );
     1c8:	25 83       	std	Z+5, r18	; 0x05
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1ca:	ab e2       	ldi	r26, 0x2B	; 43
     1cc:	b1 e0       	ldi	r27, 0x01	; 1
     1ce:	11 97       	sbiw	r26, 0x01	; 1
     1d0:	f1 f7       	brne	.-4      	; 0x1ce <shiftOut+0x44>
     1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <shiftOut+0x4a>
     1d4:	00 00       	nop
		_delay_us(50);
		PORTC.OUTCLR = (1 << 7 );
     1d6:	26 83       	std	Z+6, r18	; 0x06
     1d8:	ab e2       	ldi	r26, 0x2B	; 43
     1da:	b1 e0       	ldi	r27, 0x01	; 1
     1dc:	11 97       	sbiw	r26, 0x01	; 1
     1de:	f1 f7       	brne	.-4      	; 0x1dc <shiftOut+0x52>
     1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <shiftOut+0x58>
     1e2:	00 00       	nop
     1e4:	01 97       	sbiw	r24, 0x01	; 1
     1e6:	08 f7       	brcc	.-62     	; 0x1aa <shiftOut+0x20>
		_delay_us(50);
	}
	PORTC.OUTSET = (1 << 6 );
     1e8:	e0 e4       	ldi	r30, 0x40	; 64
     1ea:	f4 e0       	ldi	r31, 0x04	; 4
     1ec:	80 e4       	ldi	r24, 0x40	; 64
     1ee:	85 83       	std	Z+5, r24	; 0x05
     1f0:	ab e2       	ldi	r26, 0x2B	; 43
     1f2:	b1 e0       	ldi	r27, 0x01	; 1
     1f4:	11 97       	sbiw	r26, 0x01	; 1
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <shiftOut+0x6a>
     1f8:	00 c0       	rjmp	.+0      	; 0x1fa <shiftOut+0x70>
     1fa:	00 00       	nop
	_delay_us(50);
	PORTC.OUTCLR = (1 << 6 );
     1fc:	86 83       	std	Z+6, r24	; 0x06
}
     1fe:	ff 90       	pop	r15
     200:	ef 90       	pop	r14
     202:	df 90       	pop	r13
     204:	cf 90       	pop	r12
     206:	08 95       	ret

00000208 <main>:
void shiftOut(uint32_t data);

int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     208:	0e 94 95 00 	call	0x12a	; 0x12a <atmel_start_init>
	//USART_test_usart_basic();
	PORTF.DIR = ( 1 << 2 );
     20c:	84 e0       	ldi	r24, 0x04	; 4
     20e:	80 93 a0 04 	sts	0x04A0, r24	; 0x8004a0 <__TEXT_REGION_LENGTH__+0x7e04a0>
	PORTC.DIR |= ( 1 << 5 ) | ( 1 << 6 ) | ( 1 << 7 );
     212:	e0 e4       	ldi	r30, 0x40	; 64
     214:	f4 e0       	ldi	r31, 0x04	; 4
     216:	80 81       	ld	r24, Z
     218:	80 6e       	ori	r24, 0xE0	; 224
     21a:	80 83       	st	Z, r24
     21c:	00 e0       	ldi	r16, 0x00	; 0
     21e:	10 e0       	ldi	r17, 0x00	; 0
	/* Replace with your application code */
	for(uint32_t i=0 ; i < 24 ; i++ ){
		shiftOut( (uint32_t)1 << i );
     220:	c1 2c       	mov	r12, r1
     222:	d1 2c       	mov	r13, r1
     224:	76 01       	movw	r14, r12
     226:	c3 94       	inc	r12
     228:	c7 01       	movw	r24, r14
     22a:	b6 01       	movw	r22, r12
     22c:	00 2e       	mov	r0, r16
     22e:	04 c0       	rjmp	.+8      	; 0x238 <main+0x30>
     230:	66 0f       	add	r22, r22
     232:	77 1f       	adc	r23, r23
     234:	88 1f       	adc	r24, r24
     236:	99 1f       	adc	r25, r25
     238:	0a 94       	dec	r0
     23a:	d2 f7       	brpl	.-12     	; 0x230 <main+0x28>
     23c:	0e 94 c5 00 	call	0x18a	; 0x18a <shiftOut>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     240:	2f ef       	ldi	r18, 0xFF	; 255
     242:	82 e5       	ldi	r24, 0x52	; 82
     244:	97 e0       	ldi	r25, 0x07	; 7
     246:	21 50       	subi	r18, 0x01	; 1
     248:	80 40       	sbci	r24, 0x00	; 0
     24a:	90 40       	sbci	r25, 0x00	; 0
     24c:	e1 f7       	brne	.-8      	; 0x246 <main+0x3e>
     24e:	00 c0       	rjmp	.+0      	; 0x250 <main+0x48>
     250:	00 00       	nop
     252:	0f 5f       	subi	r16, 0xFF	; 255
     254:	1f 4f       	sbci	r17, 0xFF	; 255
	atmel_start_init();
	//USART_test_usart_basic();
	PORTF.DIR = ( 1 << 2 );
	PORTC.DIR |= ( 1 << 5 ) | ( 1 << 6 ) | ( 1 << 7 );
	/* Replace with your application code */
	for(uint32_t i=0 ; i < 24 ; i++ ){
     256:	08 31       	cpi	r16, 0x18	; 24
     258:	11 05       	cpc	r17, r1
     25a:	31 f7       	brne	.-52     	; 0x228 <main+0x20>
		}
		if (0u != key_status) {
			PORTF.OUTSET = ( 1 << 2 );
			} else {
			// LED_OFF
			PORTF.OUTCLR = ( 1 << 2 );
     25c:	00 ea       	ldi	r16, 0xA0	; 160
     25e:	14 e0       	ldi	r17, 0x04	; 4
     260:	c4 e0       	ldi	r28, 0x04	; 4
	for(uint32_t i=0 ; i < 24 ; i++ ){
		shiftOut( (uint32_t)1 << i );
		_delay_ms(100);
	}
	while (1) {
	touch_process();
     262:	0e 94 29 02 	call	0x452	; 0x452 <touch_process>
	if (measurement_done_touch == 1) {
     266:	80 91 98 40 	lds	r24, 0x4098	; 0x804098 <measurement_done_touch>
     26a:	81 30       	cpi	r24, 0x01	; 1
     26c:	d1 f7       	brne	.-12     	; 0x262 <main+0x5a>
		measurement_done_touch = 0;
     26e:	10 92 98 40 	sts	0x4098, r1	; 0x804098 <measurement_done_touch>
		key_status = get_sensor_state(0) & KEY_TOUCHED_MASK;
     272:	80 e0       	ldi	r24, 0x00	; 0
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	0e 94 9c 02 	call	0x538	; 0x538 <get_sensor_state>
     27a:	80 78       	andi	r24, 0x80	; 128
     27c:	80 93 94 40 	sts	0x4094, r24	; 0x804094 <__data_end>
		if( pre_key_statuse != key_status ){
			
		}
		if (0u != key_status) {
     280:	88 23       	and	r24, r24
     282:	19 f0       	breq	.+6      	; 0x28a <main+0x82>
			PORTF.OUTSET = ( 1 << 2 );
     284:	f8 01       	movw	r30, r16
     286:	c5 83       	std	Z+5, r28	; 0x05
     288:	02 c0       	rjmp	.+4      	; 0x28e <main+0x86>
			} else {
			// LED_OFF
			PORTF.OUTCLR = ( 1 << 2 );
     28a:	f8 01       	movw	r30, r16
     28c:	c6 83       	std	Z+6, r28	; 0x06
		}
		pre_key_statuse = key_status;
     28e:	80 93 95 40 	sts	0x4095, r24	; 0x804095 <pre_key_statuse>
     292:	e7 cf       	rjmp	.-50     	; 0x262 <main+0x5a>

00000294 <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     294:	08 95       	ret

00000296 <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     296:	cf 93       	push	r28
     298:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     29a:	0e 94 52 03 	call	0x6a4	; 0x6a4 <USART_is_tx_ready>
     29e:	88 23       	and	r24, r24
     2a0:	e1 f3       	breq	.-8      	; 0x29a <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     2a2:	8c 2f       	mov	r24, r28
     2a4:	0e 94 60 03 	call	0x6c0	; 0x6c0 <USART_write>

	while (USART_is_tx_busy())
     2a8:	0e 94 58 03 	call	0x6b0	; 0x6b0 <USART_is_tx_busy>
     2ac:	81 11       	cpse	r24, r1
     2ae:	fc cf       	rjmp	.-8      	; 0x2a8 <datastreamer_transmit+0x12>
		;
}
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     2b4:	ef 92       	push	r14
     2b6:	ff 92       	push	r15
     2b8:	0f 93       	push	r16
     2ba:	1f 93       	push	r17
     2bc:	cf 93       	push	r28
     2be:	df 93       	push	r29
     2c0:	00 d0       	rcall	.+0      	; 0x2c2 <datastreamer_output+0xe>
     2c2:	cd b7       	in	r28, 0x3d	; 61
     2c4:	de b7       	in	r29, 0x3e	; 62
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
     2c6:	80 91 96 40 	lds	r24, 0x4096	; 0x804096 <sequence.4816>
     2ca:	8f 70       	andi	r24, 0x0F	; 15
     2cc:	81 f4       	brne	.+32     	; 0x2ee <datastreamer_output+0x3a>
     2ce:	00 e0       	ldi	r16, 0x00	; 0
     2d0:	10 e4       	ldi	r17, 0x40	; 64
     2d2:	0f 2e       	mov	r0, r31
     2d4:	f3 e1       	ldi	r31, 0x13	; 19
     2d6:	ef 2e       	mov	r14, r31
     2d8:	f0 e4       	ldi	r31, 0x40	; 64
     2da:	ff 2e       	mov	r15, r31
     2dc:	f0 2d       	mov	r31, r0
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     2de:	f8 01       	movw	r30, r16
     2e0:	81 91       	ld	r24, Z+
     2e2:	8f 01       	movw	r16, r30
     2e4:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     2e8:	e0 16       	cp	r14, r16
     2ea:	f1 06       	cpc	r15, r17
     2ec:	c1 f7       	brne	.-16     	; 0x2de <datastreamer_output+0x2a>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     2ee:	85 e5       	ldi	r24, 0x55	; 85
     2f0:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     2f4:	80 91 96 40 	lds	r24, 0x4096	; 0x804096 <sequence.4816>
     2f8:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     2fc:	19 82       	std	Y+1, r1	; 0x01
     2fe:	1a 82       	std	Y+2, r1	; 0x02
     300:	89 81       	ldd	r24, Y+1	; 0x01
     302:	9a 81       	ldd	r25, Y+2	; 0x02
     304:	89 2b       	or	r24, r25
     306:	09 f0       	breq	.+2      	; 0x30a <datastreamer_output+0x56>
     308:	53 c0       	rjmp	.+166    	; 0x3b0 <datastreamer_output+0xfc>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     30a:	89 81       	ldd	r24, Y+1	; 0x01
     30c:	9a 81       	ldd	r25, Y+2	; 0x02
     30e:	0e 94 75 02 	call	0x4ea	; 0x4ea <get_sensor_node_signal>
     312:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     314:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     318:	81 2f       	mov	r24, r17
     31a:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     31e:	89 81       	ldd	r24, Y+1	; 0x01
     320:	9a 81       	ldd	r25, Y+2	; 0x02
     322:	0e 94 82 02 	call	0x504	; 0x504 <get_sensor_node_reference>
     326:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     328:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     32c:	81 2f       	mov	r24, r17
     32e:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     332:	89 81       	ldd	r24, Y+1	; 0x01
     334:	9a 81       	ldd	r25, Y+2	; 0x02
     336:	0e 94 75 02 	call	0x4ea	; 0x4ea <get_sensor_node_signal>
     33a:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     33c:	89 81       	ldd	r24, Y+1	; 0x01
     33e:	9a 81       	ldd	r25, Y+2	; 0x02
     340:	0e 94 82 02 	call	0x504	; 0x504 <get_sensor_node_reference>
     344:	08 1b       	sub	r16, r24
     346:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     348:	80 2f       	mov	r24, r16
     34a:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     34e:	81 2f       	mov	r24, r17
     350:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     354:	89 81       	ldd	r24, Y+1	; 0x01
     356:	9a 81       	ldd	r25, Y+2	; 0x02
     358:	0e 94 8f 02 	call	0x51e	; 0x51e <get_sensor_cc_val>
     35c:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     35e:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     362:	81 2f       	mov	r24, r17
     364:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	9a 81       	ldd	r25, Y+2	; 0x02
     36c:	0e 94 9c 02 	call	0x538	; 0x538 <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     370:	88 23       	and	r24, r24
     372:	24 f4       	brge	.+8      	; 0x37c <datastreamer_output+0xc8>
			datastreamer_transmit(0x01);
     374:	81 e0       	ldi	r24, 0x01	; 1
     376:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
     37a:	03 c0       	rjmp	.+6      	; 0x382 <datastreamer_output+0xce>
		} else {
			datastreamer_transmit(0x00);
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     382:	89 81       	ldd	r24, Y+1	; 0x01
     384:	9a 81       	ldd	r25, Y+2	; 0x02
     386:	fc 01       	movw	r30, r24
     388:	ee 0f       	add	r30, r30
     38a:	ff 1f       	adc	r31, r31
     38c:	8e 0f       	add	r24, r30
     38e:	9f 1f       	adc	r25, r31
     390:	fc 01       	movw	r30, r24
     392:	e5 5e       	subi	r30, 0xE5	; 229
     394:	ff 4b       	sbci	r31, 0xBF	; 191
     396:	80 81       	ld	r24, Z
     398:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     39c:	89 81       	ldd	r24, Y+1	; 0x01
     39e:	9a 81       	ldd	r25, Y+2	; 0x02
     3a0:	01 96       	adiw	r24, 0x01	; 1
     3a2:	89 83       	std	Y+1, r24	; 0x01
     3a4:	9a 83       	std	Y+2, r25	; 0x02
     3a6:	89 81       	ldd	r24, Y+1	; 0x01
     3a8:	9a 81       	ldd	r25, Y+2	; 0x02
     3aa:	89 2b       	or	r24, r25
     3ac:	09 f4       	brne	.+2      	; 0x3b0 <datastreamer_output+0xfc>
     3ae:	ad cf       	rjmp	.-166    	; 0x30a <datastreamer_output+0x56>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     3b0:	80 91 97 40 	lds	r24, 0x4097	; 0x804097 <module_error_code>
     3b4:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     3b8:	80 91 96 40 	lds	r24, 0x4096	; 0x804096 <sequence.4816>
     3bc:	91 e0       	ldi	r25, 0x01	; 1
     3be:	98 0f       	add	r25, r24
     3c0:	90 93 96 40 	sts	0x4096, r25	; 0x804096 <sequence.4816>
     3c4:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     3c8:	8a ea       	ldi	r24, 0xAA	; 170
     3ca:	0e 94 4b 01 	call	0x296	; 0x296 <datastreamer_transmit>
}
     3ce:	0f 90       	pop	r0
     3d0:	0f 90       	pop	r0
     3d2:	df 91       	pop	r29
     3d4:	cf 91       	pop	r28
     3d6:	1f 91       	pop	r17
     3d8:	0f 91       	pop	r16
     3da:	ff 90       	pop	r15
     3dc:	ef 90       	pop	r14
     3de:	08 95       	ret

000003e0 <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	80 93 99 40 	sts	0x4099, r24	; 0x804099 <touch_postprocess_request>
     3e6:	08 95       	ret

000003e8 <Timer_set_period>:
     3e8:	e0 e4       	ldi	r30, 0x40	; 64
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	91 81       	ldd	r25, Z+1	; 0x01
     3ee:	92 fd       	sbrc	r25, 2
     3f0:	fd cf       	rjmp	.-6      	; 0x3ec <Timer_set_period+0x4>
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__TEXT_REGION_LENGTH__+0x7e014a>
     3f8:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__TEXT_REGION_LENGTH__+0x7e014b>
     3fc:	08 95       	ret

000003fe <touch_init>:
     3fe:	80 e2       	ldi	r24, 0x20	; 32
     400:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <Timer_set_period>
     404:	e6 e1       	ldi	r30, 0x16	; 22
     406:	f4 e0       	ldi	r31, 0x04	; 4
     408:	80 81       	ld	r24, Z
     40a:	87 7f       	andi	r24, 0xF7	; 247
     40c:	80 83       	st	Z, r24
     40e:	80 81       	ld	r24, Z
     410:	88 7f       	andi	r24, 0xF8	; 248
     412:	84 60       	ori	r24, 0x04	; 4
     414:	80 83       	st	Z, r24
     416:	88 e2       	ldi	r24, 0x28	; 40
     418:	90 e4       	ldi	r25, 0x40	; 64
     41a:	0e 94 b4 0b 	call	0x1768	; 0x1768 <qtm_ptc_init_acquisition_module>
     41e:	80 eb       	ldi	r24, 0xB0	; 176
     420:	90 e4       	ldi	r25, 0x40	; 64
     422:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <qtm_ptc_qtlib_assign_signal_memory>
     426:	60 e0       	ldi	r22, 0x00	; 0
     428:	70 e0       	ldi	r23, 0x00	; 0
     42a:	88 e2       	ldi	r24, 0x28	; 40
     42c:	90 e4       	ldi	r25, 0x40	; 64
     42e:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <qtm_enable_sensor_node>
     432:	60 e0       	ldi	r22, 0x00	; 0
     434:	70 e0       	ldi	r23, 0x00	; 0
     436:	88 e2       	ldi	r24, 0x28	; 40
     438:	90 e4       	ldi	r25, 0x40	; 64
     43a:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <qtm_calibrate_sensor_node>
     43e:	4b ea       	ldi	r20, 0xAB	; 171
     440:	50 e4       	ldi	r21, 0x40	; 64
     442:	60 e0       	ldi	r22, 0x00	; 0
     444:	83 e1       	ldi	r24, 0x13	; 19
     446:	90 e4       	ldi	r25, 0x40	; 64
     448:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <qtm_init_sensor_key>
     44c:	0e 94 4a 01 	call	0x294	; 0x294 <datastreamer_init>
     450:	08 95       	ret

00000452 <touch_process>:
     452:	80 91 9a 40 	lds	r24, 0x409A	; 0x80409a <time_to_measure_touch_flag>
     456:	81 30       	cpi	r24, 0x01	; 1
     458:	51 f4       	brne	.+20     	; 0x46e <touch_process+0x1c>
     45a:	60 ef       	ldi	r22, 0xF0	; 240
     45c:	71 e0       	ldi	r23, 0x01	; 1
     45e:	88 e2       	ldi	r24, 0x28	; 40
     460:	90 e4       	ldi	r25, 0x40	; 64
     462:	0e 94 75 0c 	call	0x18ea	; 0x18ea <qtm_ptc_start_measurement_seq>
     466:	81 11       	cpse	r24, r1
     468:	02 c0       	rjmp	.+4      	; 0x46e <touch_process+0x1c>
     46a:	10 92 9a 40 	sts	0x409A, r1	; 0x80409a <time_to_measure_touch_flag>
     46e:	80 91 99 40 	lds	r24, 0x4099	; 0x804099 <touch_postprocess_request>
     472:	81 30       	cpi	r24, 0x01	; 1
     474:	39 f5       	brne	.+78     	; 0x4c4 <touch_process+0x72>
     476:	10 92 99 40 	sts	0x4099, r1	; 0x804099 <touch_postprocess_request>
     47a:	0e 94 32 09 	call	0x1264	; 0x1264 <qtm_acquisition_process>
     47e:	81 11       	cpse	r24, r1
     480:	0c c0       	rjmp	.+24     	; 0x49a <touch_process+0x48>
     482:	83 e1       	ldi	r24, 0x13	; 19
     484:	90 e4       	ldi	r25, 0x40	; 64
     486:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <qtm_key_sensors_process>
     48a:	88 23       	and	r24, r24
     48c:	59 f0       	breq	.+22     	; 0x4a4 <touch_process+0x52>
     48e:	82 e0       	ldi	r24, 0x02	; 2
     490:	80 93 97 40 	sts	0x4097, r24	; 0x804097 <module_error_code>
     494:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <datastreamer_output>
     498:	05 c0       	rjmp	.+10     	; 0x4a4 <touch_process+0x52>
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	80 93 97 40 	sts	0x4097, r24	; 0x804097 <module_error_code>
     4a0:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <datastreamer_output>
     4a4:	e0 91 13 40 	lds	r30, 0x4013	; 0x804013 <qtlib_key_set1>
     4a8:	f0 91 14 40 	lds	r31, 0x4014	; 0x804014 <qtlib_key_set1+0x1>
     4ac:	80 81       	ld	r24, Z
     4ae:	88 23       	and	r24, r24
     4b0:	24 f4       	brge	.+8      	; 0x4ba <touch_process+0x68>
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	80 93 9a 40 	sts	0x409A, r24	; 0x80409a <time_to_measure_touch_flag>
     4b8:	03 c0       	rjmp	.+6      	; 0x4c0 <touch_process+0x6e>
     4ba:	81 e0       	ldi	r24, 0x01	; 1
     4bc:	80 93 98 40 	sts	0x4098, r24	; 0x804098 <measurement_done_touch>
     4c0:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <datastreamer_output>
     4c4:	08 95       	ret

000004c6 <touch_timer_handler>:
     4c6:	80 91 aa 40 	lds	r24, 0x40AA	; 0x8040aa <interrupt_cnt>
     4ca:	8f 5f       	subi	r24, 0xFF	; 255
     4cc:	84 31       	cpi	r24, 0x14	; 20
     4ce:	18 f4       	brcc	.+6      	; 0x4d6 <touch_timer_handler+0x10>
     4d0:	80 93 aa 40 	sts	0x40AA, r24	; 0x8040aa <interrupt_cnt>
     4d4:	08 95       	ret
     4d6:	10 92 aa 40 	sts	0x40AA, r1	; 0x8040aa <interrupt_cnt>
     4da:	81 e0       	ldi	r24, 0x01	; 1
     4dc:	80 93 9a 40 	sts	0x409A, r24	; 0x80409a <time_to_measure_touch_flag>
     4e0:	84 e1       	ldi	r24, 0x14	; 20
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <qtm_update_qtlib_timer>
     4e8:	08 95       	ret

000004ea <get_sensor_node_signal>:
     4ea:	9c 01       	movw	r18, r24
     4ec:	22 0f       	add	r18, r18
     4ee:	33 1f       	adc	r19, r19
     4f0:	22 0f       	add	r18, r18
     4f2:	33 1f       	adc	r19, r19
     4f4:	82 0f       	add	r24, r18
     4f6:	93 1f       	adc	r25, r19
     4f8:	fc 01       	movw	r30, r24
     4fa:	e5 55       	subi	r30, 0x55	; 85
     4fc:	ff 4b       	sbci	r31, 0xBF	; 191
     4fe:	81 81       	ldd	r24, Z+1	; 0x01
     500:	92 81       	ldd	r25, Z+2	; 0x02
     502:	08 95       	ret

00000504 <get_sensor_node_reference>:
     504:	9c 01       	movw	r18, r24
     506:	22 0f       	add	r18, r18
     508:	33 1f       	adc	r19, r19
     50a:	82 0f       	add	r24, r18
     50c:	93 1f       	adc	r25, r19
     50e:	fc 01       	movw	r30, r24
     510:	ee 0f       	add	r30, r30
     512:	ff 1f       	adc	r31, r31
     514:	ee 54       	subi	r30, 0x4E	; 78
     516:	ff 4b       	sbci	r31, 0xBF	; 191
     518:	84 81       	ldd	r24, Z+4	; 0x04
     51a:	95 81       	ldd	r25, Z+5	; 0x05
     51c:	08 95       	ret

0000051e <get_sensor_cc_val>:
     51e:	9c 01       	movw	r18, r24
     520:	22 0f       	add	r18, r18
     522:	33 1f       	adc	r19, r19
     524:	22 0f       	add	r18, r18
     526:	33 1f       	adc	r19, r19
     528:	82 0f       	add	r24, r18
     52a:	93 1f       	adc	r25, r19
     52c:	fc 01       	movw	r30, r24
     52e:	e5 55       	subi	r30, 0x55	; 85
     530:	ff 4b       	sbci	r31, 0xBF	; 191
     532:	83 81       	ldd	r24, Z+3	; 0x03
     534:	94 81       	ldd	r25, Z+4	; 0x04
     536:	08 95       	ret

00000538 <get_sensor_state>:
     538:	9c 01       	movw	r18, r24
     53a:	22 0f       	add	r18, r18
     53c:	33 1f       	adc	r19, r19
     53e:	82 0f       	add	r24, r18
     540:	93 1f       	adc	r25, r19
     542:	88 0f       	add	r24, r24
     544:	99 1f       	adc	r25, r25
     546:	e0 91 17 40 	lds	r30, 0x4017	; 0x804017 <qtlib_key_set1+0x4>
     54a:	f0 91 18 40 	lds	r31, 0x4018	; 0x804018 <qtlib_key_set1+0x5>
     54e:	e8 0f       	add	r30, r24
     550:	f9 1f       	adc	r31, r25
     552:	80 81       	ld	r24, Z
     554:	08 95       	ret

00000556 <__vector_27>:
#if defined(__ICCAVR__)
ISR(QTML_PTC_vect_iar)
#else
ISR(QTML_PTC_vect)
#endif
{
     556:	1f 92       	push	r1
     558:	0f 92       	push	r0
     55a:	0f b6       	in	r0, 0x3f	; 63
     55c:	0f 92       	push	r0
     55e:	11 24       	eor	r1, r1
     560:	0b b6       	in	r0, 0x3b	; 59
     562:	0f 92       	push	r0
     564:	2f 93       	push	r18
     566:	3f 93       	push	r19
     568:	4f 93       	push	r20
     56a:	5f 93       	push	r21
     56c:	6f 93       	push	r22
     56e:	7f 93       	push	r23
     570:	8f 93       	push	r24
     572:	9f 93       	push	r25
     574:	af 93       	push	r26
     576:	bf 93       	push	r27
     578:	ef 93       	push	r30
     57a:	ff 93       	push	r31
	qtm_avr_da_ptc_handler_eoc();
     57c:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <qtm_avr_da_ptc_handler_eoc>
}
     580:	ff 91       	pop	r31
     582:	ef 91       	pop	r30
     584:	bf 91       	pop	r27
     586:	af 91       	pop	r26
     588:	9f 91       	pop	r25
     58a:	8f 91       	pop	r24
     58c:	7f 91       	pop	r23
     58e:	6f 91       	pop	r22
     590:	5f 91       	pop	r21
     592:	4f 91       	pop	r20
     594:	3f 91       	pop	r19
     596:	2f 91       	pop	r18
     598:	0f 90       	pop	r0
     59a:	0b be       	out	0x3b, r0	; 59
     59c:	0f 90       	pop	r0
     59e:	0f be       	out	0x3f, r0	; 63
     5a0:	0f 90       	pop	r0
     5a2:	1f 90       	pop	r1
     5a4:	18 95       	reti

000005a6 <BOD_init>:
int8_t BOD_init()
{

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
     5a6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     5aa:	80 e0       	ldi	r24, 0x00	; 0
     5ac:	08 95       	ret

000005ae <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
     5ae:	44 e2       	ldi	r20, 0x24	; 36
     5b0:	68 ed       	ldi	r22, 0xD8	; 216
     5b2:	88 e6       	ldi	r24, 0x68	; 104
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	0e 94 33 03 	call	0x666	; 0x666 <protected_write_io>
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	08 95       	ret

000005be <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     5be:	78 94       	sei

	return 0;
}
     5c0:	80 e0       	ldi	r24, 0x00	; 0
     5c2:	08 95       	ret

000005c4 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
     5c4:	e0 e1       	ldi	r30, 0x10	; 16
     5c6:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     5c8:	80 81       	ld	r24, Z
     5ca:	88 60       	ori	r24, 0x08	; 8
     5cc:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
     5ce:	e8 31       	cpi	r30, 0x18	; 24
     5d0:	84 e0       	ldi	r24, 0x04	; 4
     5d2:	f8 07       	cpc	r31, r24
     5d4:	c9 f7       	brne	.-14     	; 0x5c8 <mcu_init+0x4>
     5d6:	e0 e3       	ldi	r30, 0x30	; 48
     5d8:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     5da:	80 81       	ld	r24, Z
     5dc:	88 60       	ori	r24, 0x08	; 8
     5de:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     5e0:	e8 33       	cpi	r30, 0x38	; 56
     5e2:	84 e0       	ldi	r24, 0x04	; 4
     5e4:	f8 07       	cpc	r31, r24
     5e6:	c9 f7       	brne	.-14     	; 0x5da <mcu_init+0x16>
     5e8:	e0 e5       	ldi	r30, 0x50	; 80
     5ea:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     5ec:	80 81       	ld	r24, Z
     5ee:	88 60       	ori	r24, 0x08	; 8
     5f0:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     5f2:	e8 35       	cpi	r30, 0x58	; 88
     5f4:	84 e0       	ldi	r24, 0x04	; 4
     5f6:	f8 07       	cpc	r31, r24
     5f8:	c9 f7       	brne	.-14     	; 0x5ec <mcu_init+0x28>
     5fa:	e0 e7       	ldi	r30, 0x70	; 112
     5fc:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     5fe:	80 81       	ld	r24, Z
     600:	88 60       	ori	r24, 0x08	; 8
     602:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     604:	e8 37       	cpi	r30, 0x78	; 120
     606:	84 e0       	ldi	r24, 0x04	; 4
     608:	f8 07       	cpc	r31, r24
     60a:	c9 f7       	brne	.-14     	; 0x5fe <mcu_init+0x3a>
     60c:	e0 e9       	ldi	r30, 0x90	; 144
     60e:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     610:	80 81       	ld	r24, Z
     612:	88 60       	ori	r24, 0x08	; 8
     614:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     616:	e8 39       	cpi	r30, 0x98	; 152
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	f8 07       	cpc	r31, r24
     61c:	c9 f7       	brne	.-14     	; 0x610 <mcu_init+0x4c>
     61e:	e0 eb       	ldi	r30, 0xB0	; 176
     620:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     622:	80 81       	ld	r24, Z
     624:	88 60       	ori	r24, 0x08	; 8
     626:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     628:	e8 3b       	cpi	r30, 0xB8	; 184
     62a:	84 e0       	ldi	r24, 0x04	; 4
     62c:	f8 07       	cpc	r31, r24
     62e:	c9 f7       	brne	.-14     	; 0x622 <mcu_init+0x5e>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
     630:	08 95       	ret

00000632 <USART_initialization>:
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
     632:	41 98       	cbi	0x08, 1	; 8
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
     634:	e1 e5       	ldi	r30, 0x51	; 81
     636:	f4 e0       	ldi	r31, 0x04	; 4
     638:	80 81       	ld	r24, Z
     63a:	87 7f       	andi	r24, 0xF7	; 247
     63c:	80 83       	st	Z, r24
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
     63e:	48 98       	cbi	0x09, 0	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
     640:	40 9a       	sbi	0x08, 0	; 8
	    // <true"> High
	    false);

	PC0_set_dir(PORT_DIR_OUT);

	USART_init();
     642:	0e 94 48 03 	call	0x690	; 0x690 <USART_init>
     646:	08 95       	ret

00000648 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     648:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <mcu_init>

	CLKCTRL_init();
     64c:	0e 94 d7 02 	call	0x5ae	; 0x5ae <CLKCTRL_init>

	USART_initialization();
     650:	0e 94 19 03 	call	0x632	; 0x632 <USART_initialization>

	SLPCTRL_init();
     654:	0e 94 46 03 	call	0x68c	; 0x68c <SLPCTRL_init>

	CPUINT_init();
     658:	0e 94 df 02 	call	0x5be	; 0x5be <CPUINT_init>

	Timer_init();
     65c:	0e 94 38 03 	call	0x670	; 0x670 <Timer_init>

	BOD_init();
     660:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <BOD_init>
     664:	08 95       	ret

00000666 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
     666:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
     668:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
     66a:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
     66c:	40 83       	st	Z, r20
	ret                             // Return to caller
     66e:	08 95       	ret

00000670 <Timer_init>:
 * \return Initialization status.
 */
int8_t Timer_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
     670:	e0 e4       	ldi	r30, 0x40	; 64
     672:	f1 e0       	ldi	r31, 0x01	; 1
     674:	81 81       	ldd	r24, Z+1	; 0x01
     676:	81 11       	cpse	r24, r1
     678:	fd cf       	rjmp	.-6      	; 0x674 <Timer_init+0x4>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV1_gc   /* 1 */
     67a:	e0 e4       	ldi	r30, 0x40	; 64
     67c:	f1 e0       	ldi	r31, 0x01	; 1
     67e:	81 e8       	ldi	r24, 0x81	; 129
     680:	80 83       	st	Z, r24
	            | 1 << RTC_RTCEN_bp     /* Enable: enabled */
	            | 1 << RTC_RUNSTDBY_bp; /* Run In Standby: enabled */

	// RTC.PER = 0xffff; /* Period: 0xffff */

	RTC.CLKSEL = RTC_CLKSEL_OSC32K_gc; /* Internal 32.768 kHz oscillator */
     682:	17 82       	std	Z+7, r1	; 0x07

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
     684:	82 e0       	ldi	r24, 0x02	; 2
     686:	82 83       	std	Z+2, r24	; 0x02
	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	// RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */

	return 0;
}
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	08 95       	ret

0000068c <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	08 95       	ret

00000690 <USART_init>:
uint8_t USART_read()
{
	while (!(USART1.STATUS & USART_RXCIF_bm))
		;
	return USART1.RXDATAL;
}
     690:	e0 e2       	ldi	r30, 0x20	; 32
     692:	f8 e0       	ldi	r31, 0x08	; 8
     694:	83 e8       	ldi	r24, 0x83	; 131
     696:	96 e0       	ldi	r25, 0x06	; 6
     698:	80 87       	std	Z+8, r24	; 0x08
     69a:	91 87       	std	Z+9, r25	; 0x09
     69c:	80 ec       	ldi	r24, 0xC0	; 192
     69e:	86 83       	std	Z+6, r24	; 0x06
     6a0:	80 e0       	ldi	r24, 0x00	; 0
     6a2:	08 95       	ret

000006a4 <USART_is_tx_ready>:
     6a4:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
     6a8:	85 fb       	bst	r24, 5
     6aa:	88 27       	eor	r24, r24
     6ac:	80 f9       	bld	r24, 0
     6ae:	08 95       	ret

000006b0 <USART_is_tx_busy>:
     6b0:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
     6b4:	86 fb       	bst	r24, 6
     6b6:	88 27       	eor	r24, r24
     6b8:	80 f9       	bld	r24, 0
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	89 27       	eor	r24, r25
     6be:	08 95       	ret

000006c0 <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(USART1.STATUS & USART_DREIF_bm))
     6c0:	e0 e2       	ldi	r30, 0x20	; 32
     6c2:	f8 e0       	ldi	r31, 0x08	; 8
     6c4:	94 81       	ldd	r25, Z+4	; 0x04
     6c6:	95 ff       	sbrs	r25, 5
     6c8:	fd cf       	rjmp	.-6      	; 0x6c4 <USART_write+0x4>
		;
	USART1.TXDATAL = data;
     6ca:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     6ce:	08 95       	ret

000006d0 <check_for_aks_block>:
     6d0:	cf 92       	push	r12
     6d2:	df 92       	push	r13
     6d4:	ff 92       	push	r15
     6d6:	0f 93       	push	r16
     6d8:	1f 93       	push	r17
     6da:	cf 93       	push	r28
     6dc:	df 93       	push	r29
     6de:	ec 01       	movw	r28, r24
     6e0:	ae 81       	ldd	r26, Y+6	; 0x06
     6e2:	bf 81       	ldd	r27, Y+7	; 0x07
     6e4:	eb 01       	movw	r28, r22
     6e6:	cc 0f       	add	r28, r28
     6e8:	dd 1f       	adc	r29, r29
     6ea:	c6 0f       	add	r28, r22
     6ec:	d7 1f       	adc	r29, r23
     6ee:	ca 0f       	add	r28, r26
     6f0:	db 1f       	adc	r29, r27
     6f2:	fa 80       	ldd	r15, Y+2	; 0x02
     6f4:	fc 01       	movw	r30, r24
     6f6:	44 81       	ldd	r20, Z+4	; 0x04
     6f8:	55 81       	ldd	r21, Z+5	; 0x05
     6fa:	e6 e0       	ldi	r30, 0x06	; 6
     6fc:	e6 9f       	mul	r30, r22
     6fe:	90 01       	movw	r18, r0
     700:	e7 9f       	mul	r30, r23
     702:	30 0d       	add	r19, r0
     704:	11 24       	eor	r1, r1
     706:	8a 01       	movw	r16, r20
     708:	02 0f       	add	r16, r18
     70a:	13 1f       	adc	r17, r19
     70c:	f8 01       	movw	r30, r16
     70e:	22 81       	ldd	r18, Z+2	; 0x02
     710:	33 81       	ldd	r19, Z+3	; 0x03
     712:	f9 01       	movw	r30, r18
     714:	21 81       	ldd	r18, Z+1	; 0x01
     716:	32 81       	ldd	r19, Z+2	; 0x02
     718:	f8 01       	movw	r30, r16
     71a:	04 81       	ldd	r16, Z+4	; 0x04
     71c:	15 81       	ldd	r17, Z+5	; 0x05
     71e:	20 1b       	sub	r18, r16
     720:	31 0b       	sbc	r19, r17
     722:	e8 81       	ld	r30, Y
     724:	2e 1b       	sub	r18, r30
     726:	31 09       	sbc	r19, r1
     728:	ec 01       	movw	r28, r24
     72a:	ea 81       	ldd	r30, Y+2	; 0x02
     72c:	fb 81       	ldd	r31, Y+3	; 0x03
     72e:	00 81       	ld	r16, Z
     730:	11 81       	ldd	r17, Z+1	; 0x01
     732:	fa 01       	movw	r30, r20
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	50 e0       	ldi	r21, 0x00	; 0
     738:	40 17       	cp	r20, r16
     73a:	51 07       	cpc	r21, r17
     73c:	39 f1       	breq	.+78     	; 0x78c <check_for_aks_block+0xbc>
     73e:	46 17       	cp	r20, r22
     740:	57 07       	cpc	r21, r23
     742:	f9 f0       	breq	.+62     	; 0x782 <check_for_aks_block+0xb2>
     744:	12 96       	adiw	r26, 0x02	; 2
     746:	8c 91       	ld	r24, X
     748:	12 97       	sbiw	r26, 0x02	; 2
     74a:	f8 12       	cpse	r15, r24
     74c:	1a c0       	rjmp	.+52     	; 0x782 <check_for_aks_block+0xb2>
     74e:	80 81       	ld	r24, Z
     750:	85 58       	subi	r24, 0x85	; 133
     752:	82 30       	cpi	r24, 0x02	; 2
     754:	e8 f0       	brcs	.+58     	; 0x790 <check_for_aks_block+0xc0>
     756:	c4 80       	ldd	r12, Z+4	; 0x04
     758:	d5 80       	ldd	r13, Z+5	; 0x05
     75a:	82 81       	ldd	r24, Z+2	; 0x02
     75c:	93 81       	ldd	r25, Z+3	; 0x03
     75e:	ec 01       	movw	r28, r24
     760:	89 81       	ldd	r24, Y+1	; 0x01
     762:	9a 81       	ldd	r25, Y+2	; 0x02
     764:	c8 16       	cp	r12, r24
     766:	d9 06       	cpc	r13, r25
     768:	60 f4       	brcc	.+24     	; 0x782 <check_for_aks_block+0xb2>
     76a:	8c 19       	sub	r24, r12
     76c:	9d 09       	sbc	r25, r13
     76e:	cc 91       	ld	r28, X
     770:	d0 e0       	ldi	r29, 0x00	; 0
     772:	c8 17       	cp	r28, r24
     774:	d9 07       	cpc	r29, r25
     776:	28 f4       	brcc	.+10     	; 0x782 <check_for_aks_block+0xb2>
     778:	8c 1b       	sub	r24, r28
     77a:	9d 0b       	sbc	r25, r29
     77c:	28 17       	cp	r18, r24
     77e:	39 07       	cpc	r19, r25
     780:	38 f0       	brcs	.+14     	; 0x790 <check_for_aks_block+0xc0>
     782:	4f 5f       	subi	r20, 0xFF	; 255
     784:	5f 4f       	sbci	r21, 0xFF	; 255
     786:	13 96       	adiw	r26, 0x03	; 3
     788:	36 96       	adiw	r30, 0x06	; 6
     78a:	d6 cf       	rjmp	.-84     	; 0x738 <check_for_aks_block+0x68>
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	01 c0       	rjmp	.+2      	; 0x792 <check_for_aks_block+0xc2>
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	1f 91       	pop	r17
     798:	0f 91       	pop	r16
     79a:	ff 90       	pop	r15
     79c:	df 90       	pop	r13
     79e:	cf 90       	pop	r12
     7a0:	08 95       	ret

000007a2 <qtm_update_qtlib_timer>:
     7a2:	20 91 9b 40 	lds	r18, 0x409B	; 0x80409b <qtm_local_ms_timecount>
     7a6:	30 91 9c 40 	lds	r19, 0x409C	; 0x80409c <qtm_local_ms_timecount+0x1>
     7aa:	82 0f       	add	r24, r18
     7ac:	93 1f       	adc	r25, r19
     7ae:	80 93 9b 40 	sts	0x409B, r24	; 0x80409b <qtm_local_ms_timecount>
     7b2:	90 93 9c 40 	sts	0x409C, r25	; 0x80409c <qtm_local_ms_timecount+0x1>
     7b6:	08 95       	ret

000007b8 <qtm_init_sensor_key>:
     7b8:	00 97       	sbiw	r24, 0x00	; 0
     7ba:	d9 f0       	breq	.+54     	; 0x7f2 <qtm_init_sensor_key+0x3a>
     7bc:	41 15       	cp	r20, r1
     7be:	51 05       	cpc	r21, r1
     7c0:	c1 f0       	breq	.+48     	; 0x7f2 <qtm_init_sensor_key+0x3a>
     7c2:	26 e0       	ldi	r18, 0x06	; 6
     7c4:	62 9f       	mul	r22, r18
     7c6:	b0 01       	movw	r22, r0
     7c8:	11 24       	eor	r1, r1
     7ca:	dc 01       	movw	r26, r24
     7cc:	14 96       	adiw	r26, 0x04	; 4
     7ce:	ed 91       	ld	r30, X+
     7d0:	fc 91       	ld	r31, X
     7d2:	15 97       	sbiw	r26, 0x05	; 5
     7d4:	e6 0f       	add	r30, r22
     7d6:	f7 1f       	adc	r31, r23
     7d8:	21 e0       	ldi	r18, 0x01	; 1
     7da:	20 83       	st	Z, r18
     7dc:	14 96       	adiw	r26, 0x04	; 4
     7de:	8d 91       	ld	r24, X+
     7e0:	9c 91       	ld	r25, X
     7e2:	15 97       	sbiw	r26, 0x05	; 5
     7e4:	fc 01       	movw	r30, r24
     7e6:	e6 0f       	add	r30, r22
     7e8:	f7 1f       	adc	r31, r23
     7ea:	42 83       	std	Z+2, r20	; 0x02
     7ec:	53 83       	std	Z+3, r21	; 0x03
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	08 95       	ret
     7f2:	8b e0       	ldi	r24, 0x0B	; 11
     7f4:	08 95       	ret

000007f6 <qtm_key_sensors_process>:
     7f6:	2f 92       	push	r2
     7f8:	3f 92       	push	r3
     7fa:	4f 92       	push	r4
     7fc:	5f 92       	push	r5
     7fe:	6f 92       	push	r6
     800:	7f 92       	push	r7
     802:	8f 92       	push	r8
     804:	9f 92       	push	r9
     806:	af 92       	push	r10
     808:	bf 92       	push	r11
     80a:	cf 92       	push	r12
     80c:	df 92       	push	r13
     80e:	ef 92       	push	r14
     810:	ff 92       	push	r15
     812:	0f 93       	push	r16
     814:	1f 93       	push	r17
     816:	cf 93       	push	r28
     818:	df 93       	push	r29
     81a:	00 97       	sbiw	r24, 0x00	; 0
     81c:	09 f4       	brne	.+2      	; 0x820 <qtm_key_sensors_process+0x2a>
     81e:	7e c3       	rjmp	.+1788   	; 0xf1c <qtm_key_sensors_process+0x726>
     820:	ec 01       	movw	r28, r24
     822:	a1 2c       	mov	r10, r1
     824:	b1 2c       	mov	r11, r1
     826:	81 2c       	mov	r8, r1
     828:	91 2c       	mov	r9, r1
     82a:	21 2c       	mov	r2, r1
     82c:	d1 2c       	mov	r13, r1
     82e:	55 24       	eor	r5, r5
     830:	53 94       	inc	r5
     832:	33 e0       	ldi	r19, 0x03	; 3
     834:	c3 2e       	mov	r12, r19
     836:	45 e8       	ldi	r20, 0x85	; 133
     838:	64 2e       	mov	r6, r20
     83a:	56 e8       	ldi	r21, 0x86	; 134
     83c:	75 2e       	mov	r7, r21
     83e:	62 e0       	ldi	r22, 0x02	; 2
     840:	36 2e       	mov	r3, r22
     842:	78 e0       	ldi	r23, 0x08	; 8
     844:	47 2e       	mov	r4, r23
     846:	ea 81       	ldd	r30, Y+2	; 0x02
     848:	fb 81       	ldd	r31, Y+3	; 0x03
     84a:	80 81       	ld	r24, Z
     84c:	91 81       	ldd	r25, Z+1	; 0x01
     84e:	88 16       	cp	r8, r24
     850:	99 06       	cpc	r9, r25
     852:	08 f0       	brcs	.+2      	; 0x856 <qtm_key_sensors_process+0x60>
     854:	a6 c1       	rjmp	.+844    	; 0xba2 <qtm_key_sensors_process+0x3ac>
     856:	75 01       	movw	r14, r10
     858:	ee 0c       	add	r14, r14
     85a:	ff 1c       	adc	r15, r15
     85c:	ec 81       	ldd	r30, Y+4	; 0x04
     85e:	fd 81       	ldd	r31, Y+5	; 0x05
     860:	ee 0d       	add	r30, r14
     862:	ff 1d       	adc	r31, r15
     864:	a2 81       	ldd	r26, Z+2	; 0x02
     866:	b3 81       	ldd	r27, Z+3	; 0x03
     868:	9c 91       	ld	r25, X
     86a:	9e 71       	andi	r25, 0x1E	; 30
     86c:	09 f0       	breq	.+2      	; 0x870 <qtm_key_sensors_process+0x7a>
     86e:	50 82       	st	Z, r5
     870:	0c 81       	ldd	r16, Y+4	; 0x04
     872:	1d 81       	ldd	r17, Y+5	; 0x05
     874:	0e 0d       	add	r16, r14
     876:	1f 1d       	adc	r17, r15
     878:	d8 01       	movw	r26, r16
     87a:	8c 91       	ld	r24, X
     87c:	84 30       	cpi	r24, 0x04	; 4
     87e:	09 f4       	brne	.+2      	; 0x882 <qtm_key_sensors_process+0x8c>
     880:	9e c0       	rjmp	.+316    	; 0x9be <qtm_key_sensors_process+0x1c8>
     882:	38 f4       	brcc	.+14     	; 0x892 <qtm_key_sensors_process+0x9c>
     884:	82 30       	cpi	r24, 0x02	; 2
     886:	d1 f0       	breq	.+52     	; 0x8bc <qtm_key_sensors_process+0xc6>
     888:	08 f0       	brcs	.+2      	; 0x88c <qtm_key_sensors_process+0x96>
     88a:	45 c0       	rjmp	.+138    	; 0x916 <qtm_key_sensors_process+0x120>
     88c:	81 30       	cpi	r24, 0x01	; 1
     88e:	59 f0       	breq	.+22     	; 0x8a6 <qtm_key_sensors_process+0xb0>
     890:	81 c1       	rjmp	.+770    	; 0xb94 <qtm_key_sensors_process+0x39e>
     892:	85 38       	cpi	r24, 0x85	; 133
     894:	09 f4       	brne	.+2      	; 0x898 <qtm_key_sensors_process+0xa2>
     896:	bf c0       	rjmp	.+382    	; 0xa16 <qtm_key_sensors_process+0x220>
     898:	86 38       	cpi	r24, 0x86	; 134
     89a:	09 f4       	brne	.+2      	; 0x89e <qtm_key_sensors_process+0xa8>
     89c:	f5 c0       	rjmp	.+490    	; 0xa88 <qtm_key_sensors_process+0x292>
     89e:	87 30       	cpi	r24, 0x07	; 7
     8a0:	09 f0       	breq	.+2      	; 0x8a4 <qtm_key_sensors_process+0xae>
     8a2:	78 c1       	rjmp	.+752    	; 0xb94 <qtm_key_sensors_process+0x39e>
     8a4:	36 c1       	rjmp	.+620    	; 0xb12 <qtm_key_sensors_process+0x31c>
     8a6:	91 11       	cpse	r25, r1
     8a8:	67 c1       	rjmp	.+718    	; 0xb78 <qtm_key_sensors_process+0x382>
     8aa:	f8 01       	movw	r30, r16
     8ac:	30 82       	st	Z, r3
     8ae:	8c 81       	ldd	r24, Y+4	; 0x04
     8b0:	9d 81       	ldd	r25, Y+5	; 0x05
     8b2:	fc 01       	movw	r30, r24
     8b4:	ee 0d       	add	r30, r14
     8b6:	ff 1d       	adc	r31, r15
     8b8:	41 82       	std	Z+1, r4	; 0x01
     8ba:	5e c1       	rjmp	.+700    	; 0xb78 <qtm_key_sensors_process+0x382>
     8bc:	d8 01       	movw	r26, r16
     8be:	11 96       	adiw	r26, 0x01	; 1
     8c0:	2c 91       	ld	r18, X
     8c2:	11 97       	sbiw	r26, 0x01	; 1
     8c4:	22 23       	and	r18, r18
     8c6:	29 f1       	breq	.+74     	; 0x912 <qtm_key_sensors_process+0x11c>
     8c8:	12 96       	adiw	r26, 0x02	; 2
     8ca:	ed 91       	ld	r30, X+
     8cc:	fc 91       	ld	r31, X
     8ce:	13 97       	sbiw	r26, 0x03	; 3
     8d0:	25 30       	cpi	r18, 0x05	; 5
     8d2:	18 f0       	brcs	.+6      	; 0x8da <qtm_key_sensors_process+0xe4>
     8d4:	81 81       	ldd	r24, Z+1	; 0x01
     8d6:	92 81       	ldd	r25, Z+2	; 0x02
     8d8:	0e c0       	rjmp	.+28     	; 0x8f6 <qtm_key_sensors_process+0x100>
     8da:	d8 01       	movw	r26, r16
     8dc:	14 96       	adiw	r26, 0x04	; 4
     8de:	8d 91       	ld	r24, X+
     8e0:	9c 91       	ld	r25, X
     8e2:	15 97       	sbiw	r26, 0x05	; 5
     8e4:	41 81       	ldd	r20, Z+1	; 0x01
     8e6:	52 81       	ldd	r21, Z+2	; 0x02
     8e8:	84 17       	cp	r24, r20
     8ea:	95 07       	cpc	r25, r21
     8ec:	69 f0       	breq	.+26     	; 0x908 <qtm_key_sensors_process+0x112>
     8ee:	48 17       	cp	r20, r24
     8f0:	59 07       	cpc	r21, r25
     8f2:	30 f4       	brcc	.+12     	; 0x900 <qtm_key_sensors_process+0x10a>
     8f4:	01 97       	sbiw	r24, 0x01	; 1
     8f6:	14 96       	adiw	r26, 0x04	; 4
     8f8:	8d 93       	st	X+, r24
     8fa:	9c 93       	st	X, r25
     8fc:	15 97       	sbiw	r26, 0x05	; 5
     8fe:	04 c0       	rjmp	.+8      	; 0x908 <qtm_key_sensors_process+0x112>
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	f8 01       	movw	r30, r16
     904:	84 83       	std	Z+4, r24	; 0x04
     906:	95 83       	std	Z+5, r25	; 0x05
     908:	21 50       	subi	r18, 0x01	; 1
     90a:	d8 01       	movw	r26, r16
     90c:	11 96       	adiw	r26, 0x01	; 1
     90e:	2c 93       	st	X, r18
     910:	33 c1       	rjmp	.+614    	; 0xb78 <qtm_key_sensors_process+0x382>
     912:	f8 01       	movw	r30, r16
     914:	2d c1       	rjmp	.+602    	; 0xb70 <qtm_key_sensors_process+0x37a>
     916:	d8 01       	movw	r26, r16
     918:	14 96       	adiw	r26, 0x04	; 4
     91a:	2d 91       	ld	r18, X+
     91c:	3c 91       	ld	r19, X
     91e:	15 97       	sbiw	r26, 0x05	; 5
     920:	12 96       	adiw	r26, 0x02	; 2
     922:	ed 91       	ld	r30, X+
     924:	fc 91       	ld	r31, X
     926:	13 97       	sbiw	r26, 0x03	; 3
     928:	41 81       	ldd	r20, Z+1	; 0x01
     92a:	52 81       	ldd	r21, Z+2	; 0x02
     92c:	24 17       	cp	r18, r20
     92e:	35 07       	cpc	r19, r21
     930:	09 f4       	brne	.+2      	; 0x934 <qtm_key_sensors_process+0x13e>
     932:	30 c1       	rjmp	.+608    	; 0xb94 <qtm_key_sensors_process+0x39e>
     934:	8e 81       	ldd	r24, Y+6	; 0x06
     936:	9f 81       	ldd	r25, Y+7	; 0x07
     938:	42 17       	cp	r20, r18
     93a:	53 07       	cpc	r21, r19
     93c:	f8 f4       	brcc	.+62     	; 0x97c <qtm_key_sensors_process+0x186>
     93e:	ea 81       	ldd	r30, Y+2	; 0x02
     940:	fb 81       	ldd	r31, Y+3	; 0x03
     942:	24 1b       	sub	r18, r20
     944:	35 0b       	sbc	r19, r21
     946:	dc 01       	movw	r26, r24
     948:	aa 0d       	add	r26, r10
     94a:	bb 1d       	adc	r27, r11
     94c:	8c 91       	ld	r24, X
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	05 80       	ldd	r0, Z+5	; 0x05
     952:	02 c0       	rjmp	.+4      	; 0x958 <qtm_key_sensors_process+0x162>
     954:	95 95       	asr	r25
     956:	87 95       	ror	r24
     958:	0a 94       	dec	r0
     95a:	e2 f7       	brpl	.-8      	; 0x954 <qtm_key_sensors_process+0x15e>
     95c:	99 27       	eor	r25, r25
     95e:	28 17       	cp	r18, r24
     960:	39 07       	cpc	r19, r25
     962:	08 f4       	brcc	.+2      	; 0x966 <qtm_key_sensors_process+0x170>
     964:	17 c1       	rjmp	.+558    	; 0xb94 <qtm_key_sensors_process+0x39e>
     966:	84 81       	ldd	r24, Z+4	; 0x04
     968:	88 23       	and	r24, r24
     96a:	09 f4       	brne	.+2      	; 0x96e <qtm_key_sensors_process+0x178>
     96c:	13 c1       	rjmp	.+550    	; 0xb94 <qtm_key_sensors_process+0x39e>
     96e:	87 e0       	ldi	r24, 0x07	; 7
     970:	f8 01       	movw	r30, r16
     972:	80 83       	st	Z, r24
     974:	ea 81       	ldd	r30, Y+2	; 0x02
     976:	fb 81       	ldd	r31, Y+3	; 0x03
     978:	24 81       	ldd	r18, Z+4	; 0x04
     97a:	1a c0       	rjmp	.+52     	; 0x9b0 <qtm_key_sensors_process+0x1ba>
     97c:	fc 01       	movw	r30, r24
     97e:	ea 0d       	add	r30, r10
     980:	fb 1d       	adc	r31, r11
     982:	42 1b       	sub	r20, r18
     984:	53 0b       	sbc	r21, r19
     986:	80 81       	ld	r24, Z
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	48 17       	cp	r20, r24
     98c:	59 07       	cpc	r21, r25
     98e:	08 f4       	brcc	.+2      	; 0x992 <qtm_key_sensors_process+0x19c>
     990:	01 c1       	rjmp	.+514    	; 0xb94 <qtm_key_sensors_process+0x39e>
     992:	82 81       	ldd	r24, Z+2	; 0x02
     994:	88 23       	and	r24, r24
     996:	31 f0       	breq	.+12     	; 0x9a4 <qtm_key_sensors_process+0x1ae>
     998:	b4 01       	movw	r22, r8
     99a:	ce 01       	movw	r24, r28
     99c:	0e 94 68 03 	call	0x6d0	; 0x6d0 <check_for_aks_block>
     9a0:	81 11       	cpse	r24, r1
     9a2:	f8 c0       	rjmp	.+496    	; 0xb94 <qtm_key_sensors_process+0x39e>
     9a4:	e4 e0       	ldi	r30, 0x04	; 4
     9a6:	d8 01       	movw	r26, r16
     9a8:	ec 93       	st	X, r30
     9aa:	ea 81       	ldd	r30, Y+2	; 0x02
     9ac:	fb 81       	ldd	r31, Y+3	; 0x03
     9ae:	22 81       	ldd	r18, Z+2	; 0x02
     9b0:	8c 81       	ldd	r24, Y+4	; 0x04
     9b2:	9d 81       	ldd	r25, Y+5	; 0x05
     9b4:	fc 01       	movw	r30, r24
     9b6:	ee 0d       	add	r30, r14
     9b8:	ff 1d       	adc	r31, r15
     9ba:	21 83       	std	Z+1, r18	; 0x01
     9bc:	dd c0       	rjmp	.+442    	; 0xb78 <qtm_key_sensors_process+0x382>
     9be:	d8 01       	movw	r26, r16
     9c0:	14 96       	adiw	r26, 0x04	; 4
     9c2:	2d 91       	ld	r18, X+
     9c4:	3c 91       	ld	r19, X
     9c6:	15 97       	sbiw	r26, 0x05	; 5
     9c8:	12 96       	adiw	r26, 0x02	; 2
     9ca:	ed 91       	ld	r30, X+
     9cc:	fc 91       	ld	r31, X
     9ce:	13 97       	sbiw	r26, 0x03	; 3
     9d0:	81 81       	ldd	r24, Z+1	; 0x01
     9d2:	92 81       	ldd	r25, Z+2	; 0x02
     9d4:	82 17       	cp	r24, r18
     9d6:	93 07       	cpc	r25, r19
     9d8:	08 f4       	brcc	.+2      	; 0x9dc <qtm_key_sensors_process+0x1e6>
     9da:	bb c0       	rjmp	.+374    	; 0xb52 <qtm_key_sensors_process+0x35c>
     9dc:	ee 81       	ldd	r30, Y+6	; 0x06
     9de:	ff 81       	ldd	r31, Y+7	; 0x07
     9e0:	ea 0d       	add	r30, r10
     9e2:	fb 1d       	adc	r31, r11
     9e4:	82 1b       	sub	r24, r18
     9e6:	93 0b       	sbc	r25, r19
     9e8:	20 81       	ld	r18, Z
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	28 17       	cp	r18, r24
     9ee:	39 07       	cpc	r19, r25
     9f0:	08 f0       	brcs	.+2      	; 0x9f4 <qtm_key_sensors_process+0x1fe>
     9f2:	c5 c0       	rjmp	.+394    	; 0xb7e <qtm_key_sensors_process+0x388>
     9f4:	82 81       	ldd	r24, Z+2	; 0x02
     9f6:	88 23       	and	r24, r24
     9f8:	31 f0       	breq	.+12     	; 0xa06 <qtm_key_sensors_process+0x210>
     9fa:	b4 01       	movw	r22, r8
     9fc:	ce 01       	movw	r24, r28
     9fe:	0e 94 68 03 	call	0x6d0	; 0x6d0 <check_for_aks_block>
     a02:	81 11       	cpse	r24, r1
     a04:	c7 c0       	rjmp	.+398    	; 0xb94 <qtm_key_sensors_process+0x39e>
     a06:	f8 01       	movw	r30, r16
     a08:	81 81       	ldd	r24, Z+1	; 0x01
     a0a:	88 23       	and	r24, r24
     a0c:	09 f4       	brne	.+2      	; 0xa10 <qtm_key_sensors_process+0x21a>
     a0e:	6a c0       	rjmp	.+212    	; 0xae4 <qtm_key_sensors_process+0x2ee>
     a10:	81 50       	subi	r24, 0x01	; 1
     a12:	81 83       	std	Z+1, r24	; 0x01
     a14:	b1 c0       	rjmp	.+354    	; 0xb78 <qtm_key_sensors_process+0x382>
     a16:	e8 81       	ld	r30, Y
     a18:	f9 81       	ldd	r31, Y+1	; 0x01
     a1a:	aa 81       	ldd	r26, Y+2	; 0x02
     a1c:	bb 81       	ldd	r27, Y+3	; 0x03
     a1e:	18 96       	adiw	r26, 0x08	; 8
     a20:	8c 91       	ld	r24, X
     a22:	83 83       	std	Z+3, r24	; 0x03
     a24:	ec 81       	ldd	r30, Y+4	; 0x04
     a26:	fd 81       	ldd	r31, Y+5	; 0x05
     a28:	ee 0d       	add	r30, r14
     a2a:	ff 1d       	adc	r31, r15
     a2c:	44 81       	ldd	r20, Z+4	; 0x04
     a2e:	55 81       	ldd	r21, Z+5	; 0x05
     a30:	a2 81       	ldd	r26, Z+2	; 0x02
     a32:	b3 81       	ldd	r27, Z+3	; 0x03
     a34:	11 96       	adiw	r26, 0x01	; 1
     a36:	8d 91       	ld	r24, X+
     a38:	9c 91       	ld	r25, X
     a3a:	12 97       	sbiw	r26, 0x02	; 2
     a3c:	84 17       	cp	r24, r20
     a3e:	95 07       	cpc	r25, r21
     a40:	c0 f0       	brcs	.+48     	; 0xa72 <qtm_key_sensors_process+0x27c>
     a42:	ae 81       	ldd	r26, Y+6	; 0x06
     a44:	bf 81       	ldd	r27, Y+7	; 0x07
     a46:	aa 0d       	add	r26, r10
     a48:	bb 1d       	adc	r27, r11
     a4a:	6c 91       	ld	r22, X
     a4c:	26 2f       	mov	r18, r22
     a4e:	30 e0       	ldi	r19, 0x00	; 0
     a50:	11 96       	adiw	r26, 0x01	; 1
     a52:	7c 91       	ld	r23, X
     a54:	7f 5f       	subi	r23, 0xFF	; 255
     a56:	02 c0       	rjmp	.+4      	; 0xa5c <qtm_key_sensors_process+0x266>
     a58:	35 95       	asr	r19
     a5a:	27 95       	ror	r18
     a5c:	7a 95       	dec	r23
     a5e:	e2 f7       	brpl	.-8      	; 0xa58 <qtm_key_sensors_process+0x262>
     a60:	84 1b       	sub	r24, r20
     a62:	95 0b       	sbc	r25, r21
     a64:	62 1b       	sub	r22, r18
     a66:	26 2f       	mov	r18, r22
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	28 17       	cp	r18, r24
     a6c:	39 07       	cpc	r19, r25
     a6e:	08 f4       	brcc	.+2      	; 0xa72 <qtm_key_sensors_process+0x27c>
     a70:	8f c0       	rjmp	.+286    	; 0xb90 <qtm_key_sensors_process+0x39a>
     a72:	70 82       	st	Z, r7
     a74:	ea 81       	ldd	r30, Y+2	; 0x02
     a76:	fb 81       	ldd	r31, Y+3	; 0x03
     a78:	22 81       	ldd	r18, Z+2	; 0x02
     a7a:	8c 81       	ldd	r24, Y+4	; 0x04
     a7c:	9d 81       	ldd	r25, Y+5	; 0x05
     a7e:	fc 01       	movw	r30, r24
     a80:	ee 0d       	add	r30, r14
     a82:	ff 1d       	adc	r31, r15
     a84:	21 83       	std	Z+1, r18	; 0x01
     a86:	42 c0       	rjmp	.+132    	; 0xb0c <qtm_key_sensors_process+0x316>
     a88:	d8 01       	movw	r26, r16
     a8a:	14 96       	adiw	r26, 0x04	; 4
     a8c:	6d 91       	ld	r22, X+
     a8e:	7c 91       	ld	r23, X
     a90:	15 97       	sbiw	r26, 0x05	; 5
     a92:	12 96       	adiw	r26, 0x02	; 2
     a94:	ed 91       	ld	r30, X+
     a96:	fc 91       	ld	r31, X
     a98:	13 97       	sbiw	r26, 0x03	; 3
     a9a:	21 81       	ldd	r18, Z+1	; 0x01
     a9c:	32 81       	ldd	r19, Z+2	; 0x02
     a9e:	26 17       	cp	r18, r22
     aa0:	37 07       	cpc	r19, r23
     aa2:	58 f4       	brcc	.+22     	; 0xaba <qtm_key_sensors_process+0x2c4>
     aa4:	11 96       	adiw	r26, 0x01	; 1
     aa6:	8c 91       	ld	r24, X
     aa8:	11 97       	sbiw	r26, 0x01	; 1
     aaa:	81 11       	cpse	r24, r1
     aac:	02 c0       	rjmp	.+4      	; 0xab2 <qtm_key_sensors_process+0x2bc>
     aae:	cc 92       	st	X, r12
     ab0:	6f c0       	rjmp	.+222    	; 0xb90 <qtm_key_sensors_process+0x39a>
     ab2:	81 50       	subi	r24, 0x01	; 1
     ab4:	f8 01       	movw	r30, r16
     ab6:	81 83       	std	Z+1, r24	; 0x01
     ab8:	6b c0       	rjmp	.+214    	; 0xb90 <qtm_key_sensors_process+0x39a>
     aba:	ee 81       	ldd	r30, Y+6	; 0x06
     abc:	ff 81       	ldd	r31, Y+7	; 0x07
     abe:	ea 0d       	add	r30, r10
     ac0:	fb 1d       	adc	r31, r11
     ac2:	80 81       	ld	r24, Z
     ac4:	48 2f       	mov	r20, r24
     ac6:	50 e0       	ldi	r21, 0x00	; 0
     ac8:	91 81       	ldd	r25, Z+1	; 0x01
     aca:	9f 5f       	subi	r25, 0xFF	; 255
     acc:	02 c0       	rjmp	.+4      	; 0xad2 <qtm_key_sensors_process+0x2dc>
     ace:	55 95       	asr	r21
     ad0:	47 95       	ror	r20
     ad2:	9a 95       	dec	r25
     ad4:	e2 f7       	brpl	.-8      	; 0xace <qtm_key_sensors_process+0x2d8>
     ad6:	26 1b       	sub	r18, r22
     ad8:	37 0b       	sbc	r19, r23
     ada:	84 1b       	sub	r24, r20
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	82 17       	cp	r24, r18
     ae0:	93 07       	cpc	r25, r19
     ae2:	60 f4       	brcc	.+24     	; 0xafc <qtm_key_sensors_process+0x306>
     ae4:	d8 01       	movw	r26, r16
     ae6:	6c 92       	st	X, r6
     ae8:	ea 81       	ldd	r30, Y+2	; 0x02
     aea:	fb 81       	ldd	r31, Y+3	; 0x03
     aec:	23 81       	ldd	r18, Z+3	; 0x03
     aee:	8c 81       	ldd	r24, Y+4	; 0x04
     af0:	9d 81       	ldd	r25, Y+5	; 0x05
     af2:	fc 01       	movw	r30, r24
     af4:	ee 0d       	add	r30, r14
     af6:	ff 1d       	adc	r31, r15
     af8:	21 83       	std	Z+1, r18	; 0x01
     afa:	4a c0       	rjmp	.+148    	; 0xb90 <qtm_key_sensors_process+0x39a>
     afc:	f8 01       	movw	r30, r16
     afe:	81 81       	ldd	r24, Z+1	; 0x01
     b00:	81 11       	cpse	r24, r1
     b02:	02 c0       	rjmp	.+4      	; 0xb08 <qtm_key_sensors_process+0x312>
     b04:	c0 82       	st	Z, r12
     b06:	44 c0       	rjmp	.+136    	; 0xb90 <qtm_key_sensors_process+0x39a>
     b08:	81 50       	subi	r24, 0x01	; 1
     b0a:	81 83       	std	Z+1, r24	; 0x01
     b0c:	22 24       	eor	r2, r2
     b0e:	23 94       	inc	r2
     b10:	33 c0       	rjmp	.+102    	; 0xb78 <qtm_key_sensors_process+0x382>
     b12:	f8 01       	movw	r30, r16
     b14:	24 81       	ldd	r18, Z+4	; 0x04
     b16:	35 81       	ldd	r19, Z+5	; 0x05
     b18:	02 80       	ldd	r0, Z+2	; 0x02
     b1a:	f3 81       	ldd	r31, Z+3	; 0x03
     b1c:	e0 2d       	mov	r30, r0
     b1e:	81 81       	ldd	r24, Z+1	; 0x01
     b20:	92 81       	ldd	r25, Z+2	; 0x02
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	58 f5       	brcc	.+86     	; 0xb7e <qtm_key_sensors_process+0x388>
     b28:	28 1b       	sub	r18, r24
     b2a:	39 0b       	sbc	r19, r25
     b2c:	ee 81       	ldd	r30, Y+6	; 0x06
     b2e:	ff 81       	ldd	r31, Y+7	; 0x07
     b30:	ea 0d       	add	r30, r10
     b32:	fb 1d       	adc	r31, r11
     b34:	80 81       	ld	r24, Z
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	ea 81       	ldd	r30, Y+2	; 0x02
     b3a:	fb 81       	ldd	r31, Y+3	; 0x03
     b3c:	05 80       	ldd	r0, Z+5	; 0x05
     b3e:	02 c0       	rjmp	.+4      	; 0xb44 <qtm_key_sensors_process+0x34e>
     b40:	95 95       	asr	r25
     b42:	87 95       	ror	r24
     b44:	0a 94       	dec	r0
     b46:	e2 f7       	brpl	.-8      	; 0xb40 <qtm_key_sensors_process+0x34a>
     b48:	99 27       	eor	r25, r25
     b4a:	28 17       	cp	r18, r24
     b4c:	39 07       	cpc	r19, r25
     b4e:	18 f4       	brcc	.+6      	; 0xb56 <qtm_key_sensors_process+0x360>
     b50:	d8 01       	movw	r26, r16
     b52:	cc 92       	st	X, r12
     b54:	16 c0       	rjmp	.+44     	; 0xb82 <qtm_key_sensors_process+0x38c>
     b56:	f8 01       	movw	r30, r16
     b58:	81 81       	ldd	r24, Z+1	; 0x01
     b5a:	81 11       	cpse	r24, r1
     b5c:	0b c0       	rjmp	.+22     	; 0xb74 <qtm_key_sensors_process+0x37e>
     b5e:	50 82       	st	Z, r5
     b60:	8c 81       	ldd	r24, Y+4	; 0x04
     b62:	9d 81       	ldd	r25, Y+5	; 0x05
     b64:	fc 01       	movw	r30, r24
     b66:	ee 0d       	add	r30, r14
     b68:	ff 1d       	adc	r31, r15
     b6a:	02 80       	ldd	r0, Z+2	; 0x02
     b6c:	f3 81       	ldd	r31, Z+3	; 0x03
     b6e:	e0 2d       	mov	r30, r0
     b70:	c0 82       	st	Z, r12
     b72:	10 c0       	rjmp	.+32     	; 0xb94 <qtm_key_sensors_process+0x39e>
     b74:	81 50       	subi	r24, 0x01	; 1
     b76:	81 83       	std	Z+1, r24	; 0x01
     b78:	dd 24       	eor	r13, r13
     b7a:	d3 94       	inc	r13
     b7c:	0b c0       	rjmp	.+22     	; 0xb94 <qtm_key_sensors_process+0x39e>
     b7e:	f8 01       	movw	r30, r16
     b80:	c0 82       	st	Z, r12
     b82:	8c 81       	ldd	r24, Y+4	; 0x04
     b84:	9d 81       	ldd	r25, Y+5	; 0x05
     b86:	fc 01       	movw	r30, r24
     b88:	ee 0d       	add	r30, r14
     b8a:	ff 1d       	adc	r31, r15
     b8c:	11 82       	std	Z+1, r1	; 0x01
     b8e:	02 c0       	rjmp	.+4      	; 0xb94 <qtm_key_sensors_process+0x39e>
     b90:	22 24       	eor	r2, r2
     b92:	23 94       	inc	r2
     b94:	ff ef       	ldi	r31, 0xFF	; 255
     b96:	8f 1a       	sub	r8, r31
     b98:	9f 0a       	sbc	r9, r31
     b9a:	83 e0       	ldi	r24, 0x03	; 3
     b9c:	a8 0e       	add	r10, r24
     b9e:	b1 1c       	adc	r11, r1
     ba0:	52 ce       	rjmp	.-860    	; 0x846 <qtm_key_sensors_process+0x50>
     ba2:	e8 81       	ld	r30, Y
     ba4:	f9 81       	ldd	r31, Y+1	; 0x01
     ba6:	80 81       	ld	r24, Z
     ba8:	87 ff       	sbrs	r24, 7
     baa:	23 c0       	rjmp	.+70     	; 0xbf2 <qtm_key_sensors_process+0x3fc>
     bac:	40 e0       	ldi	r20, 0x00	; 0
     bae:	50 e0       	ldi	r21, 0x00	; 0
     bb0:	20 e0       	ldi	r18, 0x00	; 0
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	ea 81       	ldd	r30, Y+2	; 0x02
     bb6:	fb 81       	ldd	r31, Y+3	; 0x03
     bb8:	80 81       	ld	r24, Z
     bba:	91 81       	ldd	r25, Z+1	; 0x01
     bbc:	28 17       	cp	r18, r24
     bbe:	39 07       	cpc	r19, r25
     bc0:	98 f4       	brcc	.+38     	; 0xbe8 <qtm_key_sensors_process+0x3f2>
     bc2:	ec 81       	ldd	r30, Y+4	; 0x04
     bc4:	fd 81       	ldd	r31, Y+5	; 0x05
     bc6:	e4 0f       	add	r30, r20
     bc8:	f5 1f       	adc	r31, r21
     bca:	a2 81       	ldd	r26, Z+2	; 0x02
     bcc:	b3 81       	ldd	r27, Z+3	; 0x03
     bce:	8c 91       	ld	r24, X
     bd0:	80 fd       	sbrc	r24, 0
     bd2:	05 c0       	rjmp	.+10     	; 0xbde <qtm_key_sensors_process+0x3e8>
     bd4:	90 81       	ld	r25, Z
     bd6:	97 7f       	andi	r25, 0xF7	; 247
     bd8:	11 f0       	breq	.+4      	; 0xbde <qtm_key_sensors_process+0x3e8>
     bda:	81 60       	ori	r24, 0x01	; 1
     bdc:	8c 93       	st	X, r24
     bde:	2f 5f       	subi	r18, 0xFF	; 255
     be0:	3f 4f       	sbci	r19, 0xFF	; 255
     be2:	4a 5f       	subi	r20, 0xFA	; 250
     be4:	5f 4f       	sbci	r21, 0xFF	; 255
     be6:	e6 cf       	rjmp	.-52     	; 0xbb4 <qtm_key_sensors_process+0x3be>
     be8:	e8 81       	ld	r30, Y
     bea:	f9 81       	ldd	r31, Y+1	; 0x01
     bec:	80 81       	ld	r24, Z
     bee:	8f 77       	andi	r24, 0x7F	; 127
     bf0:	80 83       	st	Z, r24
     bf2:	d1 10       	cpse	r13, r1
     bf4:	07 c0       	rjmp	.+14     	; 0xc04 <qtm_key_sensors_process+0x40e>
     bf6:	e8 81       	ld	r30, Y
     bf8:	f9 81       	ldd	r31, Y+1	; 0x01
     bfa:	21 10       	cpse	r2, r1
     bfc:	6f c0       	rjmp	.+222    	; 0xcdc <qtm_key_sensors_process+0x4e6>
     bfe:	80 81       	ld	r24, Z
     c00:	8e 7f       	andi	r24, 0xFE	; 254
     c02:	6e c0       	rjmp	.+220    	; 0xce0 <qtm_key_sensors_process+0x4ea>
     c04:	ea 81       	ldd	r30, Y+2	; 0x02
     c06:	fb 81       	ldd	r31, Y+3	; 0x03
     c08:	81 85       	ldd	r24, Z+9	; 0x09
     c0a:	88 23       	and	r24, r24
     c0c:	a1 f3       	breq	.-24     	; 0xbf6 <qtm_key_sensors_process+0x400>
     c0e:	e8 81       	ld	r30, Y
     c10:	f9 81       	ldd	r31, Y+1	; 0x01
     c12:	80 81       	ld	r24, Z
     c14:	80 68       	ori	r24, 0x80	; 128
     c16:	80 83       	st	Z, r24
     c18:	ea 81       	ldd	r30, Y+2	; 0x02
     c1a:	fb 81       	ldd	r31, Y+3	; 0x03
     c1c:	81 85       	ldd	r24, Z+9	; 0x09
     c1e:	81 30       	cpi	r24, 0x01	; 1
     c20:	51 f7       	brne	.-44     	; 0xbf6 <qtm_key_sensors_process+0x400>
     c22:	40 e0       	ldi	r20, 0x00	; 0
     c24:	50 e0       	ldi	r21, 0x00	; 0
     c26:	20 e0       	ldi	r18, 0x00	; 0
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	96 e0       	ldi	r25, 0x06	; 6
     c2c:	d9 2e       	mov	r13, r25
     c2e:	ea 81       	ldd	r30, Y+2	; 0x02
     c30:	fb 81       	ldd	r31, Y+3	; 0x03
     c32:	60 81       	ld	r22, Z
     c34:	71 81       	ldd	r23, Z+1	; 0x01
     c36:	26 17       	cp	r18, r22
     c38:	37 07       	cpc	r19, r23
     c3a:	e8 f6       	brcc	.-70     	; 0xbf6 <qtm_key_sensors_process+0x400>
     c3c:	0c 81       	ldd	r16, Y+4	; 0x04
     c3e:	1d 81       	ldd	r17, Y+5	; 0x05
     c40:	fa 01       	movw	r30, r20
     c42:	ee 0f       	add	r30, r30
     c44:	ff 1f       	adc	r31, r31
     c46:	e0 0f       	add	r30, r16
     c48:	f1 1f       	adc	r31, r17
     c4a:	80 81       	ld	r24, Z
     c4c:	98 2f       	mov	r25, r24
     c4e:	97 7f       	andi	r25, 0xF7	; 247
     c50:	a1 f1       	breq	.+104    	; 0xcba <qtm_key_sensors_process+0x4c4>
     c52:	85 38       	cpi	r24, 0x85	; 133
     c54:	11 f0       	breq	.+4      	; 0xc5a <qtm_key_sensors_process+0x464>
     c56:	83 30       	cpi	r24, 0x03	; 3
     c58:	b1 f5       	brne	.+108    	; 0xcc6 <qtm_key_sensors_process+0x4d0>
     c5a:	ee 80       	ldd	r14, Y+6	; 0x06
     c5c:	ff 80       	ldd	r15, Y+7	; 0x07
     c5e:	d7 01       	movw	r26, r14
     c60:	a4 0f       	add	r26, r20
     c62:	b5 1f       	adc	r27, r21
     c64:	12 96       	adiw	r26, 0x02	; 2
     c66:	bc 90       	ld	r11, X
     c68:	bb 20       	and	r11, r11
     c6a:	39 f1       	breq	.+78     	; 0xcba <qtm_key_sensors_process+0x4c4>
     c6c:	80 e0       	ldi	r24, 0x00	; 0
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	c1 2c       	mov	r12, r1
     c72:	86 17       	cp	r24, r22
     c74:	97 07       	cpc	r25, r23
     c76:	f8 f4       	brcc	.+62     	; 0xcb6 <qtm_key_sensors_process+0x4c0>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	d1 f0       	breq	.+52     	; 0xcb2 <qtm_key_sensors_process+0x4bc>
     c7e:	d8 9e       	mul	r13, r24
     c80:	d0 01       	movw	r26, r0
     c82:	d9 9e       	mul	r13, r25
     c84:	b0 0d       	add	r27, r0
     c86:	11 24       	eor	r1, r1
     c88:	a0 0f       	add	r26, r16
     c8a:	b1 1f       	adc	r27, r17
     c8c:	ac 91       	ld	r26, X
     c8e:	a4 30       	cpi	r26, 0x04	; 4
     c90:	11 f0       	breq	.+4      	; 0xc96 <qtm_key_sensors_process+0x4a0>
     c92:	a6 38       	cpi	r26, 0x86	; 134
     c94:	71 f4       	brne	.+28     	; 0xcb2 <qtm_key_sensors_process+0x4bc>
     c96:	dc 01       	movw	r26, r24
     c98:	aa 0f       	add	r26, r26
     c9a:	bb 1f       	adc	r27, r27
     c9c:	a8 0f       	add	r26, r24
     c9e:	b9 1f       	adc	r27, r25
     ca0:	ae 0d       	add	r26, r14
     ca2:	bf 1d       	adc	r27, r15
     ca4:	12 96       	adiw	r26, 0x02	; 2
     ca6:	ac 91       	ld	r26, X
     ca8:	ba 12       	cpse	r11, r26
     caa:	03 c0       	rjmp	.+6      	; 0xcb2 <qtm_key_sensors_process+0x4bc>
     cac:	cb 01       	movw	r24, r22
     cae:	cc 24       	eor	r12, r12
     cb0:	c3 94       	inc	r12
     cb2:	01 96       	adiw	r24, 0x01	; 1
     cb4:	de cf       	rjmp	.-68     	; 0xc72 <qtm_key_sensors_process+0x47c>
     cb6:	c1 10       	cpse	r12, r1
     cb8:	06 c0       	rjmp	.+12     	; 0xcc6 <qtm_key_sensors_process+0x4d0>
     cba:	02 80       	ldd	r0, Z+2	; 0x02
     cbc:	f3 81       	ldd	r31, Z+3	; 0x03
     cbe:	e0 2d       	mov	r30, r0
     cc0:	80 81       	ld	r24, Z
     cc2:	8e 7f       	andi	r24, 0xFE	; 254
     cc4:	05 c0       	rjmp	.+10     	; 0xcd0 <qtm_key_sensors_process+0x4da>
     cc6:	02 80       	ldd	r0, Z+2	; 0x02
     cc8:	f3 81       	ldd	r31, Z+3	; 0x03
     cca:	e0 2d       	mov	r30, r0
     ccc:	80 81       	ld	r24, Z
     cce:	81 60       	ori	r24, 0x01	; 1
     cd0:	80 83       	st	Z, r24
     cd2:	2f 5f       	subi	r18, 0xFF	; 255
     cd4:	3f 4f       	sbci	r19, 0xFF	; 255
     cd6:	4d 5f       	subi	r20, 0xFD	; 253
     cd8:	5f 4f       	sbci	r21, 0xFF	; 255
     cda:	a9 cf       	rjmp	.-174    	; 0xc2e <qtm_key_sensors_process+0x438>
     cdc:	80 81       	ld	r24, Z
     cde:	81 60       	ori	r24, 0x01	; 1
     ce0:	80 83       	st	Z, r24
     ce2:	80 91 9b 40 	lds	r24, 0x409B	; 0x80409b <qtm_local_ms_timecount>
     ce6:	90 91 9c 40 	lds	r25, 0x409C	; 0x80409c <qtm_local_ms_timecount+0x1>
     cea:	e8 81       	ld	r30, Y
     cec:	f9 81       	ldd	r31, Y+1	; 0x01
     cee:	21 81       	ldd	r18, Z+1	; 0x01
     cf0:	32 81       	ldd	r19, Z+2	; 0x02
     cf2:	a9 01       	movw	r20, r18
     cf4:	48 53       	subi	r20, 0x38	; 56
     cf6:	5f 4f       	sbci	r21, 0xFF	; 255
     cf8:	48 17       	cp	r20, r24
     cfa:	59 07       	cpc	r21, r25
     cfc:	38 f4       	brcc	.+14     	; 0xd0c <qtm_key_sensors_process+0x516>
     cfe:	82 1b       	sub	r24, r18
     d00:	93 0b       	sbc	r25, r19
     d02:	aa 24       	eor	r10, r10
     d04:	a3 94       	inc	r10
     d06:	a3 e0       	ldi	r26, 0x03	; 3
     d08:	ba 2e       	mov	r11, r26
     d0a:	44 c0       	rjmp	.+136    	; 0xd94 <qtm_key_sensors_process+0x59e>
     d0c:	82 17       	cp	r24, r18
     d0e:	93 07       	cpc	r25, r19
     d10:	10 f0       	brcs	.+4      	; 0xd16 <qtm_key_sensors_process+0x520>
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	04 c1       	rjmp	.+520    	; 0xf1e <qtm_key_sensors_process+0x728>
     d16:	82 1b       	sub	r24, r18
     d18:	93 0b       	sbc	r25, r19
     d1a:	01 97       	sbiw	r24, 0x01	; 1
     d1c:	89 3c       	cpi	r24, 0xC9	; 201
     d1e:	91 05       	cpc	r25, r1
     d20:	c0 f3       	brcs	.-16     	; 0xd12 <qtm_key_sensors_process+0x51c>
     d22:	ef cf       	rjmp	.-34     	; 0xd02 <qtm_key_sensors_process+0x50c>
     d24:	88 5c       	subi	r24, 0xC8	; 200
     d26:	91 09       	sbc	r25, r1
     d28:	e8 81       	ld	r30, Y
     d2a:	f9 81       	ldd	r31, Y+1	; 0x01
     d2c:	21 81       	ldd	r18, Z+1	; 0x01
     d2e:	32 81       	ldd	r19, Z+2	; 0x02
     d30:	28 53       	subi	r18, 0x38	; 56
     d32:	3f 4f       	sbci	r19, 0xFF	; 255
     d34:	21 83       	std	Z+1, r18	; 0x01
     d36:	32 83       	std	Z+2, r19	; 0x02
     d38:	23 81       	ldd	r18, Z+3	; 0x03
     d3a:	21 11       	cpse	r18, r1
     d3c:	96 c0       	rjmp	.+300    	; 0xe6a <qtm_key_sensors_process+0x674>
     d3e:	24 81       	ldd	r18, Z+4	; 0x04
     d40:	22 23       	and	r18, r18
     d42:	11 f0       	breq	.+4      	; 0xd48 <qtm_key_sensors_process+0x552>
     d44:	21 50       	subi	r18, 0x01	; 1
     d46:	24 83       	std	Z+4, r18	; 0x04
     d48:	e8 81       	ld	r30, Y
     d4a:	f9 81       	ldd	r31, Y+1	; 0x01
     d4c:	25 81       	ldd	r18, Z+5	; 0x05
     d4e:	22 23       	and	r18, r18
     d50:	11 f0       	breq	.+4      	; 0xd56 <qtm_key_sensors_process+0x560>
     d52:	21 50       	subi	r18, 0x01	; 1
     d54:	25 83       	std	Z+5, r18	; 0x05
     d56:	8a 80       	ldd	r8, Y+2	; 0x02
     d58:	9b 80       	ldd	r9, Y+3	; 0x03
     d5a:	d4 01       	movw	r26, r8
     d5c:	16 96       	adiw	r26, 0x06	; 6
     d5e:	2c 91       	ld	r18, X
     d60:	16 97       	sbiw	r26, 0x06	; 6
     d62:	21 11       	cpse	r18, r1
     d64:	1b c0       	rjmp	.+54     	; 0xd9c <qtm_key_sensors_process+0x5a6>
     d66:	8a 80       	ldd	r8, Y+2	; 0x02
     d68:	9b 80       	ldd	r9, Y+3	; 0x03
     d6a:	f4 01       	movw	r30, r8
     d6c:	27 81       	ldd	r18, Z+7	; 0x07
     d6e:	21 11       	cpse	r18, r1
     d70:	48 c0       	rjmp	.+144    	; 0xe02 <qtm_key_sensors_process+0x60c>
     d72:	ea 81       	ldd	r30, Y+2	; 0x02
     d74:	fb 81       	ldd	r31, Y+3	; 0x03
     d76:	23 81       	ldd	r18, Z+3	; 0x03
     d78:	22 23       	and	r18, r18
     d7a:	61 f0       	breq	.+24     	; 0xd94 <qtm_key_sensors_process+0x59e>
     d7c:	20 e0       	ldi	r18, 0x00	; 0
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	a0 e0       	ldi	r26, 0x00	; 0
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	ea 81       	ldd	r30, Y+2	; 0x02
     d86:	fb 81       	ldd	r31, Y+3	; 0x03
     d88:	40 81       	ld	r20, Z
     d8a:	51 81       	ldd	r21, Z+1	; 0x01
     d8c:	a4 17       	cp	r26, r20
     d8e:	b5 07       	cpc	r27, r21
     d90:	08 f4       	brcc	.+2      	; 0xd94 <qtm_key_sensors_process+0x59e>
     d92:	6e c0       	rjmp	.+220    	; 0xe70 <qtm_key_sensors_process+0x67a>
     d94:	89 3c       	cpi	r24, 0xC9	; 201
     d96:	91 05       	cpc	r25, r1
     d98:	28 f6       	brcc	.-118    	; 0xd24 <qtm_key_sensors_process+0x52e>
     d9a:	bb cf       	rjmp	.-138    	; 0xd12 <qtm_key_sensors_process+0x51c>
     d9c:	08 81       	ld	r16, Y
     d9e:	19 81       	ldd	r17, Y+1	; 0x01
     da0:	f8 01       	movw	r30, r16
     da2:	24 81       	ldd	r18, Z+4	; 0x04
     da4:	21 11       	cpse	r18, r1
     da6:	df cf       	rjmp	.-66     	; 0xd66 <qtm_key_sensors_process+0x570>
     da8:	ed 90       	ld	r14, X+
     daa:	fc 90       	ld	r15, X
     dac:	60 e0       	ldi	r22, 0x00	; 0
     dae:	70 e0       	ldi	r23, 0x00	; 0
     db0:	40 e0       	ldi	r20, 0x00	; 0
     db2:	50 e0       	ldi	r21, 0x00	; 0
     db4:	4e 15       	cp	r20, r14
     db6:	5f 05       	cpc	r21, r15
     db8:	f1 f0       	breq	.+60     	; 0xdf6 <qtm_key_sensors_process+0x600>
     dba:	ec 81       	ldd	r30, Y+4	; 0x04
     dbc:	fd 81       	ldd	r31, Y+5	; 0x05
     dbe:	e6 0f       	add	r30, r22
     dc0:	f7 1f       	adc	r31, r23
     dc2:	20 81       	ld	r18, Z
     dc4:	23 30       	cpi	r18, 0x03	; 3
     dc6:	11 f0       	breq	.+4      	; 0xdcc <qtm_key_sensors_process+0x5d6>
     dc8:	28 30       	cpi	r18, 0x08	; 8
     dca:	81 f4       	brne	.+32     	; 0xdec <qtm_key_sensors_process+0x5f6>
     dcc:	24 81       	ldd	r18, Z+4	; 0x04
     dce:	35 81       	ldd	r19, Z+5	; 0x05
     dd0:	c2 80       	ldd	r12, Z+2	; 0x02
     dd2:	d3 80       	ldd	r13, Z+3	; 0x03
     dd4:	d6 01       	movw	r26, r12
     dd6:	11 96       	adiw	r26, 0x01	; 1
     dd8:	cd 90       	ld	r12, X+
     dda:	dc 90       	ld	r13, X
     ddc:	12 97       	sbiw	r26, 0x02	; 2
     dde:	2c 15       	cp	r18, r12
     de0:	3d 05       	cpc	r19, r13
     de2:	20 f4       	brcc	.+8      	; 0xdec <qtm_key_sensors_process+0x5f6>
     de4:	2f 5f       	subi	r18, 0xFF	; 255
     de6:	3f 4f       	sbci	r19, 0xFF	; 255
     de8:	24 83       	std	Z+4, r18	; 0x04
     dea:	35 83       	std	Z+5, r19	; 0x05
     dec:	4f 5f       	subi	r20, 0xFF	; 255
     dee:	5f 4f       	sbci	r21, 0xFF	; 255
     df0:	6a 5f       	subi	r22, 0xFA	; 250
     df2:	7f 4f       	sbci	r23, 0xFF	; 255
     df4:	df cf       	rjmp	.-66     	; 0xdb4 <qtm_key_sensors_process+0x5be>
     df6:	f4 01       	movw	r30, r8
     df8:	26 81       	ldd	r18, Z+6	; 0x06
     dfa:	d8 01       	movw	r26, r16
     dfc:	14 96       	adiw	r26, 0x04	; 4
     dfe:	2c 93       	st	X, r18
     e00:	b2 cf       	rjmp	.-156    	; 0xd66 <qtm_key_sensors_process+0x570>
     e02:	08 81       	ld	r16, Y
     e04:	19 81       	ldd	r17, Y+1	; 0x01
     e06:	d8 01       	movw	r26, r16
     e08:	15 96       	adiw	r26, 0x05	; 5
     e0a:	2c 91       	ld	r18, X
     e0c:	21 11       	cpse	r18, r1
     e0e:	b1 cf       	rjmp	.-158    	; 0xd72 <qtm_key_sensors_process+0x57c>
     e10:	e0 80       	ld	r14, Z
     e12:	f1 80       	ldd	r15, Z+1	; 0x01
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	40 e0       	ldi	r20, 0x00	; 0
     e1a:	50 e0       	ldi	r21, 0x00	; 0
     e1c:	4e 15       	cp	r20, r14
     e1e:	5f 05       	cpc	r21, r15
     e20:	f1 f0       	breq	.+60     	; 0xe5e <qtm_key_sensors_process+0x668>
     e22:	ec 81       	ldd	r30, Y+4	; 0x04
     e24:	fd 81       	ldd	r31, Y+5	; 0x05
     e26:	e6 0f       	add	r30, r22
     e28:	f7 1f       	adc	r31, r23
     e2a:	20 81       	ld	r18, Z
     e2c:	23 30       	cpi	r18, 0x03	; 3
     e2e:	11 f0       	breq	.+4      	; 0xe34 <qtm_key_sensors_process+0x63e>
     e30:	28 30       	cpi	r18, 0x08	; 8
     e32:	81 f4       	brne	.+32     	; 0xe54 <qtm_key_sensors_process+0x65e>
     e34:	24 81       	ldd	r18, Z+4	; 0x04
     e36:	35 81       	ldd	r19, Z+5	; 0x05
     e38:	c2 80       	ldd	r12, Z+2	; 0x02
     e3a:	d3 80       	ldd	r13, Z+3	; 0x03
     e3c:	d6 01       	movw	r26, r12
     e3e:	11 96       	adiw	r26, 0x01	; 1
     e40:	cd 90       	ld	r12, X+
     e42:	dc 90       	ld	r13, X
     e44:	12 97       	sbiw	r26, 0x02	; 2
     e46:	c2 16       	cp	r12, r18
     e48:	d3 06       	cpc	r13, r19
     e4a:	20 f4       	brcc	.+8      	; 0xe54 <qtm_key_sensors_process+0x65e>
     e4c:	21 50       	subi	r18, 0x01	; 1
     e4e:	31 09       	sbc	r19, r1
     e50:	24 83       	std	Z+4, r18	; 0x04
     e52:	35 83       	std	Z+5, r19	; 0x05
     e54:	4f 5f       	subi	r20, 0xFF	; 255
     e56:	5f 4f       	sbci	r21, 0xFF	; 255
     e58:	6a 5f       	subi	r22, 0xFA	; 250
     e5a:	7f 4f       	sbci	r23, 0xFF	; 255
     e5c:	df cf       	rjmp	.-66     	; 0xe1c <qtm_key_sensors_process+0x626>
     e5e:	f4 01       	movw	r30, r8
     e60:	27 81       	ldd	r18, Z+7	; 0x07
     e62:	d8 01       	movw	r26, r16
     e64:	15 96       	adiw	r26, 0x05	; 5
     e66:	2c 93       	st	X, r18
     e68:	84 cf       	rjmp	.-248    	; 0xd72 <qtm_key_sensors_process+0x57c>
     e6a:	21 50       	subi	r18, 0x01	; 1
     e6c:	23 83       	std	Z+3, r18	; 0x03
     e6e:	81 cf       	rjmp	.-254    	; 0xd72 <qtm_key_sensors_process+0x57c>
     e70:	a9 01       	movw	r20, r18
     e72:	44 0f       	add	r20, r20
     e74:	55 1f       	adc	r21, r21
     e76:	ec 81       	ldd	r30, Y+4	; 0x04
     e78:	fd 81       	ldd	r31, Y+5	; 0x05
     e7a:	e4 0f       	add	r30, r20
     e7c:	f5 1f       	adc	r31, r21
     e7e:	60 81       	ld	r22, Z
     e80:	65 38       	cpi	r22, 0x85	; 133
     e82:	09 f0       	breq	.+2      	; 0xe86 <qtm_key_sensors_process+0x690>
     e84:	47 c0       	rjmp	.+142    	; 0xf14 <qtm_key_sensors_process+0x71e>
     e86:	61 81       	ldd	r22, Z+1	; 0x01
     e88:	66 23       	and	r22, r22
     e8a:	19 f0       	breq	.+6      	; 0xe92 <qtm_key_sensors_process+0x69c>
     e8c:	61 50       	subi	r22, 0x01	; 1
     e8e:	61 83       	std	Z+1, r22	; 0x01
     e90:	41 c0       	rjmp	.+130    	; 0xf14 <qtm_key_sensors_process+0x71e>
     e92:	a0 82       	st	Z, r10
     e94:	6c 81       	ldd	r22, Y+4	; 0x04
     e96:	7d 81       	ldd	r23, Y+5	; 0x05
     e98:	fb 01       	movw	r30, r22
     e9a:	e4 0f       	add	r30, r20
     e9c:	f5 1f       	adc	r31, r21
     e9e:	02 80       	ldd	r0, Z+2	; 0x02
     ea0:	f3 81       	ldd	r31, Z+3	; 0x03
     ea2:	e0 2d       	mov	r30, r0
     ea4:	b0 82       	st	Z, r11
     ea6:	ee 81       	ldd	r30, Y+6	; 0x06
     ea8:	ff 81       	ldd	r31, Y+7	; 0x07
     eaa:	e2 0f       	add	r30, r18
     eac:	f3 1f       	adc	r31, r19
     eae:	d2 80       	ldd	r13, Z+2	; 0x02
     eb0:	dd 20       	and	r13, r13
     eb2:	81 f1       	breq	.+96     	; 0xf14 <qtm_key_sensors_process+0x71e>
     eb4:	40 e0       	ldi	r20, 0x00	; 0
     eb6:	50 e0       	ldi	r21, 0x00	; 0
     eb8:	00 e0       	ldi	r16, 0x00	; 0
     eba:	10 e0       	ldi	r17, 0x00	; 0
     ebc:	ea 81       	ldd	r30, Y+2	; 0x02
     ebe:	fb 81       	ldd	r31, Y+3	; 0x03
     ec0:	60 81       	ld	r22, Z
     ec2:	71 81       	ldd	r23, Z+1	; 0x01
     ec4:	06 17       	cp	r16, r22
     ec6:	17 07       	cpc	r17, r23
     ec8:	28 f5       	brcc	.+74     	; 0xf14 <qtm_key_sensors_process+0x71e>
     eca:	ee 81       	ldd	r30, Y+6	; 0x06
     ecc:	ff 81       	ldd	r31, Y+7	; 0x07
     ece:	e4 0f       	add	r30, r20
     ed0:	f5 1f       	adc	r31, r21
     ed2:	62 81       	ldd	r22, Z+2	; 0x02
     ed4:	d6 12       	cpse	r13, r22
     ed6:	19 c0       	rjmp	.+50     	; 0xf0a <qtm_key_sensors_process+0x714>
     ed8:	ba 01       	movw	r22, r20
     eda:	66 0f       	add	r22, r22
     edc:	77 1f       	adc	r23, r23
     ede:	ec 81       	ldd	r30, Y+4	; 0x04
     ee0:	fd 81       	ldd	r31, Y+5	; 0x05
     ee2:	4f 01       	movw	r8, r30
     ee4:	86 0e       	add	r8, r22
     ee6:	97 1e       	adc	r9, r23
     ee8:	f4 01       	movw	r30, r8
     eea:	e2 80       	ldd	r14, Z+2	; 0x02
     eec:	f3 80       	ldd	r15, Z+3	; 0x03
     eee:	f7 01       	movw	r30, r14
     ef0:	f0 80       	ld	r15, Z
     ef2:	f0 fe       	sbrs	r15, 0
     ef4:	0a c0       	rjmp	.+20     	; 0xf0a <qtm_key_sensors_process+0x714>
     ef6:	f4 01       	movw	r30, r8
     ef8:	a0 82       	st	Z, r10
     efa:	ec 81       	ldd	r30, Y+4	; 0x04
     efc:	fd 81       	ldd	r31, Y+5	; 0x05
     efe:	e6 0f       	add	r30, r22
     f00:	f7 1f       	adc	r31, r23
     f02:	02 80       	ldd	r0, Z+2	; 0x02
     f04:	f3 81       	ldd	r31, Z+3	; 0x03
     f06:	e0 2d       	mov	r30, r0
     f08:	b0 82       	st	Z, r11
     f0a:	0f 5f       	subi	r16, 0xFF	; 255
     f0c:	1f 4f       	sbci	r17, 0xFF	; 255
     f0e:	4d 5f       	subi	r20, 0xFD	; 253
     f10:	5f 4f       	sbci	r21, 0xFF	; 255
     f12:	d4 cf       	rjmp	.-88     	; 0xebc <qtm_key_sensors_process+0x6c6>
     f14:	11 96       	adiw	r26, 0x01	; 1
     f16:	2d 5f       	subi	r18, 0xFD	; 253
     f18:	3f 4f       	sbci	r19, 0xFF	; 255
     f1a:	34 cf       	rjmp	.-408    	; 0xd84 <qtm_key_sensors_process+0x58e>
     f1c:	8b e0       	ldi	r24, 0x0B	; 11
     f1e:	df 91       	pop	r29
     f20:	cf 91       	pop	r28
     f22:	1f 91       	pop	r17
     f24:	0f 91       	pop	r16
     f26:	ff 90       	pop	r15
     f28:	ef 90       	pop	r14
     f2a:	df 90       	pop	r13
     f2c:	cf 90       	pop	r12
     f2e:	bf 90       	pop	r11
     f30:	af 90       	pop	r10
     f32:	9f 90       	pop	r9
     f34:	8f 90       	pop	r8
     f36:	7f 90       	pop	r7
     f38:	6f 90       	pop	r6
     f3a:	5f 90       	pop	r5
     f3c:	4f 90       	pop	r4
     f3e:	3f 90       	pop	r3
     f40:	2f 90       	pop	r2
     f42:	08 95       	ret

00000f44 <charge_share_test>:
     f44:	a0 91 b8 40 	lds	r26, 0x40B8	; 0x8040b8 <qtm_acquisition_control_working_set_ptr>
     f48:	b0 91 b9 40 	lds	r27, 0x40B9	; 0x8040b9 <qtm_acquisition_control_working_set_ptr+0x1>
     f4c:	25 e0       	ldi	r18, 0x05	; 5
     f4e:	ac 01       	movw	r20, r24
     f50:	24 9f       	mul	r18, r20
     f52:	c0 01       	movw	r24, r0
     f54:	25 9f       	mul	r18, r21
     f56:	90 0d       	add	r25, r0
     f58:	11 24       	eor	r1, r1
     f5a:	14 96       	adiw	r26, 0x04	; 4
     f5c:	ed 91       	ld	r30, X+
     f5e:	fc 91       	ld	r31, X
     f60:	15 97       	sbiw	r26, 0x05	; 5
     f62:	e8 0f       	add	r30, r24
     f64:	f9 1f       	adc	r31, r25
     f66:	81 81       	ldd	r24, Z+1	; 0x01
     f68:	92 81       	ldd	r25, Z+2	; 0x02
     f6a:	86 17       	cp	r24, r22
     f6c:	97 07       	cpc	r25, r23
     f6e:	81 f1       	breq	.+96     	; 0xfd0 <charge_share_test+0x8c>
     f70:	86 17       	cp	r24, r22
     f72:	97 07       	cpc	r25, r23
     f74:	18 f4       	brcc	.+6      	; 0xf7c <charge_share_test+0x38>
     f76:	68 1b       	sub	r22, r24
     f78:	79 0b       	sbc	r23, r25
     f7a:	04 c0       	rjmp	.+8      	; 0xf84 <charge_share_test+0x40>
     f7c:	9c 01       	movw	r18, r24
     f7e:	26 1b       	sub	r18, r22
     f80:	37 0b       	sbc	r19, r23
     f82:	b9 01       	movw	r22, r18
     f84:	ed 91       	ld	r30, X+
     f86:	fc 91       	ld	r31, X
     f88:	82 81       	ldd	r24, Z+2	; 0x02
     f8a:	80 34       	cpi	r24, 0x40	; 64
     f8c:	11 f4       	brne	.+4      	; 0xf92 <charge_share_test+0x4e>
     f8e:	76 95       	lsr	r23
     f90:	67 95       	ror	r22
     f92:	65 38       	cpi	r22, 0x85	; 133
     f94:	71 05       	cpc	r23, r1
     f96:	d0 f4       	brcc	.+52     	; 0xfcc <charge_share_test+0x88>
     f98:	66 30       	cpi	r22, 0x06	; 6
     f9a:	71 05       	cpc	r23, r1
     f9c:	c8 f0       	brcs	.+50     	; 0xfd0 <charge_share_test+0x8c>
     f9e:	e3 81       	ldd	r30, Z+3	; 0x03
     fa0:	e0 73       	andi	r30, 0x30	; 48
     fa2:	f0 e0       	ldi	r31, 0x00	; 0
     fa4:	83 e0       	ldi	r24, 0x03	; 3
     fa6:	f6 95       	lsr	r31
     fa8:	e7 95       	ror	r30
     faa:	8a 95       	dec	r24
     fac:	e1 f7       	brne	.-8      	; 0xfa6 <charge_share_test+0x62>
     fae:	e8 5b       	subi	r30, 0xB8	; 184
     fb0:	ff 4b       	sbci	r31, 0xBF	; 191
     fb2:	80 81       	ld	r24, Z
     fb4:	91 81       	ldd	r25, Z+1	; 0x01
     fb6:	68 9f       	mul	r22, r24
     fb8:	90 01       	movw	r18, r0
     fba:	69 9f       	mul	r22, r25
     fbc:	30 0d       	add	r19, r0
     fbe:	78 9f       	mul	r23, r24
     fc0:	30 0d       	add	r19, r0
     fc2:	11 24       	eor	r1, r1
     fc4:	81 e0       	ldi	r24, 0x01	; 1
     fc6:	23 2b       	or	r18, r19
     fc8:	21 f4       	brne	.+8      	; 0xfd2 <charge_share_test+0x8e>
     fca:	02 c0       	rjmp	.+4      	; 0xfd0 <charge_share_test+0x8c>
     fcc:	81 e0       	ldi	r24, 0x01	; 1
     fce:	08 95       	ret
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	08 95       	ret

00000fd4 <select_next_channel_to_measure>:
     fd4:	80 91 a2 40 	lds	r24, 0x40A2	; 0x8040a2 <current_measure_channel>
     fd8:	90 91 a3 40 	lds	r25, 0x40A3	; 0x8040a3 <current_measure_channel+0x1>
     fdc:	a0 91 b8 40 	lds	r26, 0x40B8	; 0x8040b8 <qtm_acquisition_control_working_set_ptr>
     fe0:	b0 91 b9 40 	lds	r27, 0x40B9	; 0x8040b9 <qtm_acquisition_control_working_set_ptr+0x1>
     fe4:	ed 91       	ld	r30, X+
     fe6:	fc 91       	ld	r31, X
     fe8:	11 97       	sbiw	r26, 0x01	; 1
     fea:	40 81       	ld	r20, Z
     fec:	51 81       	ldd	r21, Z+1	; 0x01
     fee:	25 e0       	ldi	r18, 0x05	; 5
     ff0:	28 9f       	mul	r18, r24
     ff2:	b0 01       	movw	r22, r0
     ff4:	29 9f       	mul	r18, r25
     ff6:	70 0d       	add	r23, r0
     ff8:	11 24       	eor	r1, r1
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	84 17       	cp	r24, r20
    1000:	95 07       	cpc	r25, r21
    1002:	a8 f4       	brcc	.+42     	; 0x102e <select_next_channel_to_measure+0x5a>
    1004:	14 96       	adiw	r26, 0x04	; 4
    1006:	ed 91       	ld	r30, X+
    1008:	fc 91       	ld	r31, X
    100a:	15 97       	sbiw	r26, 0x05	; 5
    100c:	e2 0f       	add	r30, r18
    100e:	f3 1f       	adc	r31, r19
    1010:	e6 0f       	add	r30, r22
    1012:	f7 1f       	adc	r31, r23
    1014:	e0 81       	ld	r30, Z
    1016:	2b 5f       	subi	r18, 0xFB	; 251
    1018:	3f 4f       	sbci	r19, 0xFF	; 255
    101a:	e0 fd       	sbrc	r30, 0
    101c:	02 c0       	rjmp	.+4      	; 0x1022 <select_next_channel_to_measure+0x4e>
    101e:	01 96       	adiw	r24, 0x01	; 1
    1020:	ee cf       	rjmp	.-36     	; 0xffe <select_next_channel_to_measure+0x2a>
    1022:	80 93 a2 40 	sts	0x40A2, r24	; 0x8040a2 <current_measure_channel>
    1026:	90 93 a3 40 	sts	0x40A3, r25	; 0x8040a3 <current_measure_channel+0x1>
    102a:	80 e0       	ldi	r24, 0x00	; 0
    102c:	08 95       	ret
    102e:	10 92 a2 40 	sts	0x40A2, r1	; 0x8040a2 <current_measure_channel>
    1032:	10 92 a3 40 	sts	0x40A3, r1	; 0x8040a3 <current_measure_channel+0x1>
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	08 95       	ret

0000103a <qtm_measure_node>:
    103a:	af 92       	push	r10
    103c:	bf 92       	push	r11
    103e:	cf 92       	push	r12
    1040:	df 92       	push	r13
    1042:	ef 92       	push	r14
    1044:	ff 92       	push	r15
    1046:	0f 93       	push	r16
    1048:	1f 93       	push	r17
    104a:	cf 93       	push	r28
    104c:	df 93       	push	r29
    104e:	7c 01       	movw	r14, r24
    1050:	e0 91 b8 40 	lds	r30, 0x40B8	; 0x8040b8 <qtm_acquisition_control_working_set_ptr>
    1054:	f0 91 b9 40 	lds	r31, 0x40B9	; 0x8040b9 <qtm_acquisition_control_working_set_ptr+0x1>
    1058:	84 e1       	ldi	r24, 0x14	; 20
    105a:	8e 9d       	mul	r24, r14
    105c:	e0 01       	movw	r28, r0
    105e:	8f 9d       	mul	r24, r15
    1060:	d0 0d       	add	r29, r0
    1062:	11 24       	eor	r1, r1
    1064:	a2 81       	ldd	r26, Z+2	; 0x02
    1066:	b3 81       	ldd	r27, Z+3	; 0x03
    1068:	ac 0f       	add	r26, r28
    106a:	bd 1f       	adc	r27, r29
    106c:	18 96       	adiw	r26, 0x08	; 8
    106e:	2c 91       	ld	r18, X
    1070:	18 97       	sbiw	r26, 0x08	; 8
    1072:	19 96       	adiw	r26, 0x09	; 9
    1074:	3c 91       	ld	r19, X
    1076:	19 97       	sbiw	r26, 0x09	; 9
    1078:	1a 96       	adiw	r26, 0x0a	; 10
    107a:	4c 91       	ld	r20, X
    107c:	1a 97       	sbiw	r26, 0x0a	; 10
    107e:	1b 96       	adiw	r26, 0x0b	; 11
    1080:	5c 91       	ld	r21, X
    1082:	1b 97       	sbiw	r26, 0x0b	; 11
    1084:	1c 96       	adiw	r26, 0x0c	; 12
    1086:	6c 91       	ld	r22, X
    1088:	1c 97       	sbiw	r26, 0x0c	; 12
    108a:	1d 96       	adiw	r26, 0x0d	; 13
    108c:	7c 91       	ld	r23, X
    108e:	1d 97       	sbiw	r26, 0x0d	; 13
    1090:	1e 96       	adiw	r26, 0x0e	; 14
    1092:	8c 91       	ld	r24, X
    1094:	1e 97       	sbiw	r26, 0x0e	; 14
    1096:	1f 96       	adiw	r26, 0x0f	; 15
    1098:	9c 91       	ld	r25, X
    109a:	20 93 f0 07 	sts	0x07F0, r18	; 0x8007f0 <__TEXT_REGION_LENGTH__+0x7e07f0>
    109e:	08 e0       	ldi	r16, 0x08	; 8
    10a0:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    10a4:	20 93 f1 07 	sts	0x07F1, r18	; 0x8007f1 <__TEXT_REGION_LENGTH__+0x7e07f1>
    10a8:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    10ac:	20 93 f2 07 	sts	0x07F2, r18	; 0x8007f2 <__TEXT_REGION_LENGTH__+0x7e07f2>
    10b0:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    10b4:	20 93 f3 07 	sts	0x07F3, r18	; 0x8007f3 <__TEXT_REGION_LENGTH__+0x7e07f3>
    10b8:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    10bc:	20 93 f4 07 	sts	0x07F4, r18	; 0x8007f4 <__TEXT_REGION_LENGTH__+0x7e07f4>
    10c0:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    10c4:	20 93 f5 07 	sts	0x07F5, r18	; 0x8007f5 <__TEXT_REGION_LENGTH__+0x7e07f5>
    10c8:	10 92 e0 07 	sts	0x07E0, r1	; 0x8007e0 <__TEXT_REGION_LENGTH__+0x7e07e0>
    10cc:	a0 81       	ld	r26, Z
    10ce:	b1 81       	ldd	r27, Z+1	; 0x01
    10d0:	12 96       	adiw	r26, 0x02	; 2
    10d2:	8c 91       	ld	r24, X
    10d4:	80 38       	cpi	r24, 0x80	; 128
    10d6:	09 f4       	brne	.+2      	; 0x10da <qtm_measure_node+0xa0>
    10d8:	4f c0       	rjmp	.+158    	; 0x1178 <qtm_measure_node+0x13e>
    10da:	a2 81       	ldd	r26, Z+2	; 0x02
    10dc:	b3 81       	ldd	r27, Z+3	; 0x03
    10de:	ac 0f       	add	r26, r28
    10e0:	bd 1f       	adc	r27, r29
    10e2:	cc 90       	ld	r12, X
    10e4:	11 96       	adiw	r26, 0x01	; 1
    10e6:	3c 91       	ld	r19, X
    10e8:	11 97       	sbiw	r26, 0x01	; 1
    10ea:	12 96       	adiw	r26, 0x02	; 2
    10ec:	4c 91       	ld	r20, X
    10ee:	12 97       	sbiw	r26, 0x02	; 2
    10f0:	13 96       	adiw	r26, 0x03	; 3
    10f2:	5c 91       	ld	r21, X
    10f4:	13 97       	sbiw	r26, 0x03	; 3
    10f6:	14 96       	adiw	r26, 0x04	; 4
    10f8:	6c 91       	ld	r22, X
    10fa:	14 97       	sbiw	r26, 0x04	; 4
    10fc:	15 96       	adiw	r26, 0x05	; 5
    10fe:	7c 91       	ld	r23, X
    1100:	15 97       	sbiw	r26, 0x05	; 5
    1102:	16 96       	adiw	r26, 0x06	; 6
    1104:	8c 91       	ld	r24, X
    1106:	16 97       	sbiw	r26, 0x06	; 6
    1108:	17 96       	adiw	r26, 0x07	; 7
    110a:	9c 91       	ld	r25, X
    110c:	c0 92 e8 07 	sts	0x07E8, r12	; 0x8007e8 <__TEXT_REGION_LENGTH__+0x7e07e8>
    1110:	2c 2d       	mov	r18, r12
    1112:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    1116:	d2 2e       	mov	r13, r18
    1118:	20 93 e9 07 	sts	0x07E9, r18	; 0x8007e9 <__TEXT_REGION_LENGTH__+0x7e07e9>
    111c:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    1120:	12 2f       	mov	r17, r18
    1122:	20 93 ea 07 	sts	0x07EA, r18	; 0x8007ea <__TEXT_REGION_LENGTH__+0x7e07ea>
    1126:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    112a:	a2 2e       	mov	r10, r18
    112c:	20 93 eb 07 	sts	0x07EB, r18	; 0x8007eb <__TEXT_REGION_LENGTH__+0x7e07eb>
    1130:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    1134:	b2 2e       	mov	r11, r18
    1136:	20 93 ec 07 	sts	0x07EC, r18	; 0x8007ec <__TEXT_REGION_LENGTH__+0x7e07ec>
    113a:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    113e:	20 93 ed 07 	sts	0x07ED, r18	; 0x8007ed <__TEXT_REGION_LENGTH__+0x7e07ed>
    1142:	80 81       	ld	r24, Z
    1144:	91 81       	ldd	r25, Z+1	; 0x01
    1146:	dc 01       	movw	r26, r24
    1148:	12 96       	adiw	r26, 0x02	; 2
    114a:	8c 91       	ld	r24, X
    114c:	81 38       	cpi	r24, 0x81	; 129
    114e:	21 f4       	brne	.+8      	; 0x1158 <qtm_measure_node+0x11e>
    1150:	81 e0       	ldi	r24, 0x01	; 1
    1152:	80 93 e0 07 	sts	0x07E0, r24	; 0x8007e0 <__TEXT_REGION_LENGTH__+0x7e07e0>
    1156:	10 c0       	rjmp	.+32     	; 0x1178 <qtm_measure_node+0x13e>
    1158:	82 38       	cpi	r24, 0x82	; 130
    115a:	71 f4       	brne	.+28     	; 0x1178 <qtm_measure_node+0x13e>
    115c:	10 92 e0 07 	sts	0x07E0, r1	; 0x8007e0 <__TEXT_REGION_LENGTH__+0x7e07e0>
    1160:	c0 92 f8 07 	sts	0x07F8, r12	; 0x8007f8 <__TEXT_REGION_LENGTH__+0x7e07f8>
    1164:	d0 92 f9 07 	sts	0x07F9, r13	; 0x8007f9 <__TEXT_REGION_LENGTH__+0x7e07f9>
    1168:	10 93 fa 07 	sts	0x07FA, r17	; 0x8007fa <__TEXT_REGION_LENGTH__+0x7e07fa>
    116c:	a0 92 fb 07 	sts	0x07FB, r10	; 0x8007fb <__TEXT_REGION_LENGTH__+0x7e07fb>
    1170:	b0 92 fc 07 	sts	0x07FC, r11	; 0x8007fc <__TEXT_REGION_LENGTH__+0x7e07fc>
    1174:	20 93 fd 07 	sts	0x07FD, r18	; 0x8007fd <__TEXT_REGION_LENGTH__+0x7e07fd>
    1178:	25 e0       	ldi	r18, 0x05	; 5
    117a:	2e 9d       	mul	r18, r14
    117c:	c0 01       	movw	r24, r0
    117e:	2f 9d       	mul	r18, r15
    1180:	90 0d       	add	r25, r0
    1182:	11 24       	eor	r1, r1
    1184:	a4 81       	ldd	r26, Z+4	; 0x04
    1186:	b5 81       	ldd	r27, Z+5	; 0x05
    1188:	a8 0f       	add	r26, r24
    118a:	b9 1f       	adc	r27, r25
    118c:	13 96       	adiw	r26, 0x03	; 3
    118e:	2d 91       	ld	r18, X+
    1190:	3c 91       	ld	r19, X
    1192:	14 97       	sbiw	r26, 0x04	; 4
    1194:	a9 01       	movw	r20, r18
    1196:	53 70       	andi	r21, 0x03	; 3
    1198:	40 93 e4 07 	sts	0x07E4, r20	; 0x8007e4 <__TEXT_REGION_LENGTH__+0x7e07e4>
    119c:	50 93 e5 07 	sts	0x07E5, r21	; 0x8007e5 <__TEXT_REGION_LENGTH__+0x7e07e5>
    11a0:	37 fd       	sbrc	r19, 7
    11a2:	03 c0       	rjmp	.+6      	; 0x11aa <qtm_measure_node+0x170>
    11a4:	10 92 ca 07 	sts	0x07CA, r1	; 0x8007ca <__TEXT_REGION_LENGTH__+0x7e07ca>
    11a8:	03 c0       	rjmp	.+6      	; 0x11b0 <qtm_measure_node+0x176>
    11aa:	21 e0       	ldi	r18, 0x01	; 1
    11ac:	20 93 ca 07 	sts	0x07CA, r18	; 0x8007ca <__TEXT_REGION_LENGTH__+0x7e07ca>
    11b0:	a4 81       	ldd	r26, Z+4	; 0x04
    11b2:	b5 81       	ldd	r27, Z+5	; 0x05
    11b4:	a8 0f       	add	r26, r24
    11b6:	b9 1f       	adc	r27, r25
    11b8:	2c 91       	ld	r18, X
    11ba:	21 ff       	sbrs	r18, 1
    11bc:	02 c0       	rjmp	.+4      	; 0x11c2 <qtm_measure_node+0x188>
    11be:	25 e0       	ldi	r18, 0x05	; 5
    11c0:	2c 93       	st	X, r18
    11c2:	24 81       	ldd	r18, Z+4	; 0x04
    11c4:	35 81       	ldd	r19, Z+5	; 0x05
    11c6:	d9 01       	movw	r26, r18
    11c8:	a8 0f       	add	r26, r24
    11ca:	b9 1f       	adc	r27, r25
    11cc:	8c 91       	ld	r24, X
    11ce:	8c 71       	andi	r24, 0x1C	; 28
    11d0:	69 f4       	brne	.+26     	; 0x11ec <qtm_measure_node+0x1b2>
    11d2:	a2 81       	ldd	r26, Z+2	; 0x02
    11d4:	b3 81       	ldd	r27, Z+3	; 0x03
    11d6:	ac 0f       	add	r26, r28
    11d8:	bd 1f       	adc	r27, r29
    11da:	52 96       	adiw	r26, 0x12	; 18
    11dc:	ac 91       	ld	r26, X
    11de:	a2 95       	swap	r26
    11e0:	af 70       	andi	r26, 0x0F	; 15
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	a0 5b       	subi	r26, 0xB0	; 176
    11e6:	bf 4b       	sbci	r27, 0xBF	; 191
    11e8:	8c 91       	ld	r24, X
    11ea:	01 c0       	rjmp	.+2      	; 0x11ee <qtm_measure_node+0x1b4>
    11ec:	8f e1       	ldi	r24, 0x1F	; 31
    11ee:	80 93 e6 07 	sts	0x07E6, r24	; 0x8007e6 <__TEXT_REGION_LENGTH__+0x7e07e6>
    11f2:	a2 81       	ldd	r26, Z+2	; 0x02
    11f4:	b3 81       	ldd	r27, Z+3	; 0x03
    11f6:	ac 0f       	add	r26, r28
    11f8:	bd 1f       	adc	r27, r29
    11fa:	50 96       	adiw	r26, 0x10	; 16
    11fc:	8c 91       	ld	r24, X
    11fe:	8b 37       	cpi	r24, 0x7B	; 123
    1200:	10 f4       	brcc	.+4      	; 0x1206 <qtm_measure_node+0x1cc>
    1202:	8c 5f       	subi	r24, 0xFC	; 252
    1204:	01 c0       	rjmp	.+2      	; 0x1208 <qtm_measure_node+0x1ce>
    1206:	8f e7       	ldi	r24, 0x7F	; 127
    1208:	80 93 c4 07 	sts	0x07C4, r24	; 0x8007c4 <__TEXT_REGION_LENGTH__+0x7e07c4>
    120c:	a2 81       	ldd	r26, Z+2	; 0x02
    120e:	b3 81       	ldd	r27, Z+3	; 0x03
    1210:	ac 0f       	add	r26, r28
    1212:	bd 1f       	adc	r27, r29
    1214:	53 96       	adiw	r26, 0x13	; 19
    1216:	8c 91       	ld	r24, X
    1218:	80 93 c7 07 	sts	0x07C7, r24	; 0x8007c7 <__TEXT_REGION_LENGTH__+0x7e07c7>
    121c:	a2 81       	ldd	r26, Z+2	; 0x02
    121e:	b3 81       	ldd	r27, Z+3	; 0x03
    1220:	ac 0f       	add	r26, r28
    1222:	bd 1f       	adc	r27, r29
    1224:	51 96       	adiw	r26, 0x11	; 17
    1226:	8c 91       	ld	r24, X
    1228:	82 95       	swap	r24
    122a:	8f 70       	andi	r24, 0x0F	; 15
    122c:	80 93 c9 07 	sts	0x07C9, r24	; 0x8007c9 <__TEXT_REGION_LENGTH__+0x7e07c9>
    1230:	82 81       	ldd	r24, Z+2	; 0x02
    1232:	93 81       	ldd	r25, Z+3	; 0x03
    1234:	c8 0f       	add	r28, r24
    1236:	d9 1f       	adc	r29, r25
    1238:	89 89       	ldd	r24, Y+17	; 0x11
    123a:	8f 70       	andi	r24, 0x0F	; 15
    123c:	80 68       	ori	r24, 0x80	; 128
    123e:	80 93 c2 07 	sts	0x07C2, r24	; 0x8007c2 <__TEXT_REGION_LENGTH__+0x7e07c2>
    1242:	81 e8       	ldi	r24, 0x81	; 129
    1244:	80 93 c0 07 	sts	0x07C0, r24	; 0x8007c0 <__TEXT_REGION_LENGTH__+0x7e07c0>
    1248:	81 e0       	ldi	r24, 0x01	; 1
    124a:	80 93 d0 07 	sts	0x07D0, r24	; 0x8007d0 <__TEXT_REGION_LENGTH__+0x7e07d0>
    124e:	df 91       	pop	r29
    1250:	cf 91       	pop	r28
    1252:	1f 91       	pop	r17
    1254:	0f 91       	pop	r16
    1256:	ff 90       	pop	r15
    1258:	ef 90       	pop	r14
    125a:	df 90       	pop	r13
    125c:	cf 90       	pop	r12
    125e:	bf 90       	pop	r11
    1260:	af 90       	pop	r10
    1262:	08 95       	ret

00001264 <qtm_acquisition_process>:
    1264:	2f 92       	push	r2
    1266:	3f 92       	push	r3
    1268:	4f 92       	push	r4
    126a:	5f 92       	push	r5
    126c:	6f 92       	push	r6
    126e:	7f 92       	push	r7
    1270:	8f 92       	push	r8
    1272:	9f 92       	push	r9
    1274:	af 92       	push	r10
    1276:	bf 92       	push	r11
    1278:	cf 92       	push	r12
    127a:	df 92       	push	r13
    127c:	ef 92       	push	r14
    127e:	ff 92       	push	r15
    1280:	0f 93       	push	r16
    1282:	1f 93       	push	r17
    1284:	cf 93       	push	r28
    1286:	df 93       	push	r29
    1288:	cd b7       	in	r28, 0x3d	; 61
    128a:	de b7       	in	r29, 0x3e	; 62
    128c:	27 97       	sbiw	r28, 0x07	; 7
    128e:	cd bf       	out	0x3d, r28	; 61
    1290:	de bf       	out	0x3e, r29	; 62
    1292:	80 91 a1 40 	lds	r24, 0x40A1	; 0x8040a1 <touch_seq_lib_state>
    1296:	88 23       	and	r24, r24
    1298:	09 f4       	brne	.+2      	; 0x129c <qtm_acquisition_process+0x38>
    129a:	46 c2       	rjmp	.+1164   	; 0x1728 <qtm_acquisition_process+0x4c4>
    129c:	00 91 b8 40 	lds	r16, 0x40B8	; 0x8040b8 <qtm_acquisition_control_working_set_ptr>
    12a0:	10 91 b9 40 	lds	r17, 0x40B9	; 0x8040b9 <qtm_acquisition_control_working_set_ptr+0x1>
    12a4:	20 91 ba 40 	lds	r18, 0x40BA	; 0x8040ba <qtm_raw_data_measurements_ptr>
    12a8:	30 91 bb 40 	lds	r19, 0x40BB	; 0x8040bb <qtm_raw_data_measurements_ptr+0x1>
    12ac:	2a 83       	std	Y+2, r18	; 0x02
    12ae:	3b 83       	std	Y+3, r19	; 0x03
    12b0:	c1 2c       	mov	r12, r1
    12b2:	d1 2c       	mov	r13, r1
    12b4:	a1 2c       	mov	r10, r1
    12b6:	b1 2c       	mov	r11, r1
    12b8:	21 2c       	mov	r2, r1
    12ba:	31 2c       	mov	r3, r1
    12bc:	19 82       	std	Y+1, r1	; 0x01
    12be:	44 24       	eor	r4, r4
    12c0:	4a 94       	dec	r4
    12c2:	55 24       	eor	r5, r5
    12c4:	53 94       	inc	r5
    12c6:	77 24       	eor	r7, r7
    12c8:	73 94       	inc	r7
    12ca:	d8 01       	movw	r26, r16
    12cc:	0d 90       	ld	r0, X+
    12ce:	bc 91       	ld	r27, X
    12d0:	a0 2d       	mov	r26, r0
    12d2:	ae 83       	std	Y+6, r26	; 0x06
    12d4:	bf 83       	std	Y+7, r27	; 0x07
    12d6:	8d 91       	ld	r24, X+
    12d8:	9c 91       	ld	r25, X
    12da:	28 16       	cp	r2, r24
    12dc:	39 06       	cpc	r3, r25
    12de:	08 f0       	brcs	.+2      	; 0x12e2 <qtm_acquisition_process+0x7e>
    12e0:	1f c2       	rjmp	.+1086   	; 0x1720 <qtm_acquisition_process+0x4bc>
    12e2:	aa 81       	ldd	r26, Y+2	; 0x02
    12e4:	bb 81       	ldd	r27, Y+3	; 0x03
    12e6:	4d 91       	ld	r20, X+
    12e8:	5d 91       	ld	r21, X+
    12ea:	aa 83       	std	Y+2, r26	; 0x02
    12ec:	bb 83       	std	Y+3, r27	; 0x03
    12ee:	f8 01       	movw	r30, r16
    12f0:	e4 80       	ldd	r14, Z+4	; 0x04
    12f2:	f5 80       	ldd	r15, Z+5	; 0x05
    12f4:	ea 0c       	add	r14, r10
    12f6:	fb 1c       	adc	r15, r11
    12f8:	d7 01       	movw	r26, r14
    12fa:	2c 91       	ld	r18, X
    12fc:	82 2f       	mov	r24, r18
    12fe:	8c 71       	andi	r24, 0x1C	; 28
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	96 95       	lsr	r25
    1304:	87 95       	ror	r24
    1306:	96 95       	lsr	r25
    1308:	87 95       	ror	r24
    130a:	82 30       	cpi	r24, 0x02	; 2
    130c:	91 05       	cpc	r25, r1
    130e:	09 f4       	brne	.+2      	; 0x1312 <qtm_acquisition_process+0xae>
    1310:	a0 c1       	rjmp	.+832    	; 0x1652 <qtm_acquisition_process+0x3ee>
    1312:	28 f4       	brcc	.+10     	; 0x131e <qtm_acquisition_process+0xba>
    1314:	00 97       	sbiw	r24, 0x00	; 0
    1316:	59 f0       	breq	.+22     	; 0x132e <qtm_acquisition_process+0xca>
    1318:	01 97       	sbiw	r24, 0x01	; 1
    131a:	01 f1       	breq	.+64     	; 0x135c <qtm_acquisition_process+0xf8>
    131c:	f7 c1       	rjmp	.+1006   	; 0x170c <qtm_acquisition_process+0x4a8>
    131e:	83 30       	cpi	r24, 0x03	; 3
    1320:	91 05       	cpc	r25, r1
    1322:	09 f4       	brne	.+2      	; 0x1326 <qtm_acquisition_process+0xc2>
    1324:	59 c1       	rjmp	.+690    	; 0x15d8 <qtm_acquisition_process+0x374>
    1326:	04 97       	sbiw	r24, 0x04	; 4
    1328:	09 f4       	brne	.+2      	; 0x132c <qtm_acquisition_process+0xc8>
    132a:	e1 c0       	rjmp	.+450    	; 0x14ee <qtm_acquisition_process+0x28a>
    132c:	ef c1       	rjmp	.+990    	; 0x170c <qtm_acquisition_process+0x4a8>
    132e:	02 80       	ldd	r0, Z+2	; 0x02
    1330:	f3 81       	ldd	r31, Z+3	; 0x03
    1332:	e0 2d       	mov	r30, r0
    1334:	ec 0d       	add	r30, r12
    1336:	fd 1d       	adc	r31, r13
    1338:	92 89       	ldd	r25, Z+18	; 0x12
    133a:	9f 70       	andi	r25, 0x0F	; 15
    133c:	83 89       	ldd	r24, Z+19	; 0x13
    133e:	98 17       	cp	r25, r24
    1340:	10 f4       	brcc	.+4      	; 0x1346 <qtm_acquisition_process+0xe2>
    1342:	89 1b       	sub	r24, r25
    1344:	01 c0       	rjmp	.+2      	; 0x1348 <qtm_acquisition_process+0xe4>
    1346:	80 e0       	ldi	r24, 0x00	; 0
    1348:	9a 01       	movw	r18, r20
    134a:	02 c0       	rjmp	.+4      	; 0x1350 <qtm_acquisition_process+0xec>
    134c:	36 95       	lsr	r19
    134e:	27 95       	ror	r18
    1350:	8a 95       	dec	r24
    1352:	e2 f7       	brpl	.-8      	; 0x134c <qtm_acquisition_process+0xe8>
    1354:	f7 01       	movw	r30, r14
    1356:	21 83       	std	Z+1, r18	; 0x01
    1358:	32 83       	std	Z+2, r19	; 0x02
    135a:	d8 c1       	rjmp	.+944    	; 0x170c <qtm_acquisition_process+0x4a8>
    135c:	82 81       	ldd	r24, Z+2	; 0x02
    135e:	93 81       	ldd	r25, Z+3	; 0x03
    1360:	fc 01       	movw	r30, r24
    1362:	ec 0d       	add	r30, r12
    1364:	fd 1d       	adc	r31, r13
    1366:	4a 01       	movw	r8, r20
    1368:	03 88       	ldd	r0, Z+19	; 0x13
    136a:	02 c0       	rjmp	.+4      	; 0x1370 <qtm_acquisition_process+0x10c>
    136c:	96 94       	lsr	r9
    136e:	87 94       	ror	r8
    1370:	0a 94       	dec	r0
    1372:	e2 f7       	brpl	.-8      	; 0x136c <qtm_acquisition_process+0x108>
    1374:	d7 01       	movw	r26, r14
    1376:	11 96       	adiw	r26, 0x01	; 1
    1378:	8d 92       	st	X+, r8
    137a:	9c 92       	st	X, r9
    137c:	12 97       	sbiw	r26, 0x02	; 2
    137e:	13 96       	adiw	r26, 0x03	; 3
    1380:	8d 91       	ld	r24, X+
    1382:	9c 91       	ld	r25, X
    1384:	14 97       	sbiw	r26, 0x04	; 4
    1386:	69 2f       	mov	r22, r25
    1388:	66 1f       	adc	r22, r22
    138a:	66 27       	eor	r22, r22
    138c:	66 1f       	adc	r22, r22
    138e:	81 14       	cp	r8, r1
    1390:	b2 e0       	ldi	r27, 0x02	; 2
    1392:	9b 06       	cpc	r9, r27
    1394:	30 f0       	brcs	.+12     	; 0x13a2 <qtm_acquisition_process+0x13e>
    1396:	3f ef       	ldi	r19, 0xFF	; 255
    1398:	83 1a       	sub	r8, r19
    139a:	31 e0       	ldi	r19, 0x01	; 1
    139c:	93 0a       	sbc	r9, r19
    139e:	41 e0       	ldi	r20, 0x01	; 1
    13a0:	05 c0       	rjmp	.+10     	; 0x13ac <qtm_acquisition_process+0x148>
    13a2:	a2 01       	movw	r20, r4
    13a4:	48 19       	sub	r20, r8
    13a6:	59 09       	sbc	r21, r9
    13a8:	4a 01       	movw	r8, r20
    13aa:	40 e0       	ldi	r20, 0x00	; 0
    13ac:	96 94       	lsr	r9
    13ae:	87 94       	ror	r8
    13b0:	ae 81       	ldd	r26, Y+6	; 0x06
    13b2:	bf 81       	ldd	r27, Y+7	; 0x07
    13b4:	12 96       	adiw	r26, 0x02	; 2
    13b6:	3c 91       	ld	r19, X
    13b8:	30 34       	cpi	r19, 0x40	; 64
    13ba:	29 f0       	breq	.+10     	; 0x13c6 <qtm_acquisition_process+0x162>
    13bc:	44 23       	and	r20, r20
    13be:	09 f4       	brne	.+2      	; 0x13c2 <qtm_acquisition_process+0x15e>
    13c0:	b6 c1       	rjmp	.+876    	; 0x172e <qtm_acquisition_process+0x4ca>
    13c2:	46 2f       	mov	r20, r22
    13c4:	06 c0       	rjmp	.+12     	; 0x13d2 <qtm_acquisition_process+0x16e>
    13c6:	97 ff       	sbrs	r25, 7
    13c8:	04 c0       	rjmp	.+8      	; 0x13d2 <qtm_acquisition_process+0x16e>
    13ca:	31 e0       	ldi	r19, 0x01	; 1
    13cc:	41 11       	cpse	r20, r1
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	43 2f       	mov	r20, r19
    13d2:	ba e0       	ldi	r27, 0x0A	; 10
    13d4:	8b 16       	cp	r8, r27
    13d6:	91 04       	cpc	r9, r1
    13d8:	08 f0       	brcs	.+2      	; 0x13dc <qtm_acquisition_process+0x178>
    13da:	3f c0       	rjmp	.+126    	; 0x145a <qtm_acquisition_process+0x1f6>
    13dc:	26 fd       	sbrc	r18, 6
    13de:	3a c0       	rjmp	.+116    	; 0x1454 <qtm_acquisition_process+0x1f0>
    13e0:	27 fd       	sbrc	r18, 7
    13e2:	94 c1       	rjmp	.+808    	; 0x170c <qtm_acquisition_process+0x4a8>
    13e4:	ae 81       	ldd	r26, Y+6	; 0x06
    13e6:	bf 81       	ldd	r27, Y+7	; 0x07
    13e8:	13 96       	adiw	r26, 0x03	; 3
    13ea:	8c 91       	ld	r24, X
    13ec:	83 70       	andi	r24, 0x03	; 3
    13ee:	83 30       	cpi	r24, 0x03	; 3
    13f0:	59 f4       	brne	.+22     	; 0x1408 <qtm_acquisition_process+0x1a4>
    13f2:	bf e7       	ldi	r27, 0x7F	; 127
    13f4:	b0 8b       	std	Z+16, r27	; 0x10
    13f6:	d8 01       	movw	r26, r16
    13f8:	14 96       	adiw	r26, 0x04	; 4
    13fa:	ed 91       	ld	r30, X+
    13fc:	fc 91       	ld	r31, X
    13fe:	15 97       	sbiw	r26, 0x05	; 5
    1400:	ea 0d       	add	r30, r10
    1402:	fb 1d       	adc	r31, r11
    1404:	b1 e1       	ldi	r27, 0x11	; 17
    1406:	0d c0       	rjmp	.+26     	; 0x1422 <qtm_acquisition_process+0x1be>
    1408:	82 30       	cpi	r24, 0x02	; 2
    140a:	69 f4       	brne	.+26     	; 0x1426 <qtm_acquisition_process+0x1c2>
    140c:	81 89       	ldd	r24, Z+17	; 0x11
    140e:	80 7f       	andi	r24, 0xF0	; 240
    1410:	81 8b       	std	Z+17, r24	; 0x11
    1412:	d8 01       	movw	r26, r16
    1414:	14 96       	adiw	r26, 0x04	; 4
    1416:	ed 91       	ld	r30, X+
    1418:	fc 91       	ld	r31, X
    141a:	15 97       	sbiw	r26, 0x05	; 5
    141c:	ea 0d       	add	r30, r10
    141e:	fb 1d       	adc	r31, r11
    1420:	b9 e0       	ldi	r27, 0x09	; 9
    1422:	b0 83       	st	Z, r27
    1424:	73 c1       	rjmp	.+742    	; 0x170c <qtm_acquisition_process+0x4a8>
    1426:	81 30       	cpi	r24, 0x01	; 1
    1428:	a9 f4       	brne	.+42     	; 0x1454 <qtm_acquisition_process+0x1f0>
    142a:	81 89       	ldd	r24, Z+17	; 0x11
    142c:	8f 70       	andi	r24, 0x0F	; 15
    142e:	81 8b       	std	Z+17, r24	; 0x11
    1430:	d8 01       	movw	r26, r16
    1432:	12 96       	adiw	r26, 0x02	; 2
    1434:	ed 91       	ld	r30, X+
    1436:	fc 91       	ld	r31, X
    1438:	13 97       	sbiw	r26, 0x03	; 3
    143a:	ec 0d       	add	r30, r12
    143c:	fd 1d       	adc	r31, r13
    143e:	81 89       	ldd	r24, Z+17	; 0x11
    1440:	80 67       	ori	r24, 0x70	; 112
    1442:	81 8b       	std	Z+17, r24	; 0x11
    1444:	14 96       	adiw	r26, 0x04	; 4
    1446:	ed 91       	ld	r30, X+
    1448:	fc 91       	ld	r31, X
    144a:	15 97       	sbiw	r26, 0x05	; 5
    144c:	ea 0d       	add	r30, r10
    144e:	fb 1d       	adc	r31, r11
    1450:	bd e0       	ldi	r27, 0x0D	; 13
    1452:	e7 cf       	rjmp	.-50     	; 0x1422 <qtm_acquisition_process+0x1be>
    1454:	f7 01       	movw	r30, r14
    1456:	70 82       	st	Z, r7
    1458:	59 c1       	rjmp	.+690    	; 0x170c <qtm_acquisition_process+0x4a8>
    145a:	9c 01       	movw	r18, r24
    145c:	33 70       	andi	r19, 0x03	; 3
    145e:	2f 3f       	cpi	r18, 0xFF	; 255
    1460:	f3 e0       	ldi	r31, 0x03	; 3
    1462:	3f 07       	cpc	r19, r31
    1464:	31 f4       	brne	.+12     	; 0x1472 <qtm_acquisition_process+0x20e>
    1466:	e1 e8       	ldi	r30, 0x81	; 129
    1468:	d7 01       	movw	r26, r14
    146a:	ec 93       	st	X, r30
    146c:	8f ef       	ldi	r24, 0xFF	; 255
    146e:	93 e0       	ldi	r25, 0x03	; 3
    1470:	0b c0       	rjmp	.+22     	; 0x1488 <qtm_acquisition_process+0x224>
    1472:	21 15       	cp	r18, r1
    1474:	31 05       	cpc	r19, r1
    1476:	59 f4       	brne	.+22     	; 0x148e <qtm_acquisition_process+0x22a>
    1478:	97 ff       	sbrs	r25, 7
    147a:	25 c0       	rjmp	.+74     	; 0x14c6 <qtm_acquisition_process+0x262>
    147c:	e1 e8       	ldi	r30, 0x81	; 129
    147e:	d7 01       	movw	r26, r14
    1480:	ec 93       	st	X, r30
    1482:	80 e0       	ldi	r24, 0x00	; 0
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	61 e0       	ldi	r22, 0x01	; 1
    1488:	fe e0       	ldi	r31, 0x0E	; 14
    148a:	f9 83       	std	Y+1, r31	; 0x01
    148c:	1f c0       	rjmp	.+62     	; 0x14cc <qtm_acquisition_process+0x268>
    148e:	c9 01       	movw	r24, r18
    1490:	41 11       	cpse	r20, r1
    1492:	0f c0       	rjmp	.+30     	; 0x14b2 <qtm_acquisition_process+0x24e>
    1494:	01 96       	adiw	r24, 0x01	; 1
    1496:	21 e0       	ldi	r18, 0x01	; 1
    1498:	82 1a       	sub	r8, r18
    149a:	91 08       	sbc	r9, r1
    149c:	31 e0       	ldi	r19, 0x01	; 1
    149e:	83 16       	cp	r8, r19
    14a0:	91 04       	cpc	r9, r1
    14a2:	a1 f0       	breq	.+40     	; 0x14cc <qtm_acquisition_process+0x268>
    14a4:	8f 3f       	cpi	r24, 0xFF	; 255
    14a6:	43 e0       	ldi	r20, 0x03	; 3
    14a8:	94 07       	cpc	r25, r20
    14aa:	a1 f7       	brne	.-24     	; 0x1494 <qtm_acquisition_process+0x230>
    14ac:	0f c0       	rjmp	.+30     	; 0x14cc <qtm_acquisition_process+0x268>
    14ae:	00 97       	sbiw	r24, 0x00	; 0
    14b0:	69 f0       	breq	.+26     	; 0x14cc <qtm_acquisition_process+0x268>
    14b2:	01 97       	sbiw	r24, 0x01	; 1
    14b4:	ac 01       	movw	r20, r24
    14b6:	42 1b       	sub	r20, r18
    14b8:	53 0b       	sbc	r21, r19
    14ba:	48 0d       	add	r20, r8
    14bc:	59 1d       	adc	r21, r9
    14be:	41 30       	cpi	r20, 0x01	; 1
    14c0:	51 05       	cpc	r21, r1
    14c2:	a9 f7       	brne	.-22     	; 0x14ae <qtm_acquisition_process+0x24a>
    14c4:	03 c0       	rjmp	.+6      	; 0x14cc <qtm_acquisition_process+0x268>
    14c6:	80 ef       	ldi	r24, 0xF0	; 240
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	61 e0       	ldi	r22, 0x01	; 1
    14cc:	d8 01       	movw	r26, r16
    14ce:	14 96       	adiw	r26, 0x04	; 4
    14d0:	ed 91       	ld	r30, X+
    14d2:	fc 91       	ld	r31, X
    14d4:	15 97       	sbiw	r26, 0x05	; 5
    14d6:	ea 0d       	add	r30, r10
    14d8:	fb 1d       	adc	r31, r11
    14da:	70 e0       	ldi	r23, 0x00	; 0
    14dc:	77 27       	eor	r23, r23
    14de:	66 95       	lsr	r22
    14e0:	77 95       	ror	r23
    14e2:	66 27       	eor	r22, r22
    14e4:	86 2b       	or	r24, r22
    14e6:	97 2b       	or	r25, r23
    14e8:	83 83       	std	Z+3, r24	; 0x03
    14ea:	94 83       	std	Z+4, r25	; 0x04
    14ec:	0f c1       	rjmp	.+542    	; 0x170c <qtm_acquisition_process+0x4a8>
    14ee:	f8 01       	movw	r30, r16
    14f0:	82 80       	ldd	r8, Z+2	; 0x02
    14f2:	93 80       	ldd	r9, Z+3	; 0x03
    14f4:	8c 0c       	add	r8, r12
    14f6:	9d 1c       	adc	r9, r13
    14f8:	fa 01       	movw	r30, r20
    14fa:	d4 01       	movw	r26, r8
    14fc:	53 96       	adiw	r26, 0x13	; 19
    14fe:	0c 90       	ld	r0, X
    1500:	53 97       	sbiw	r26, 0x13	; 19
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <qtm_acquisition_process+0x2a4>
    1504:	f6 95       	lsr	r31
    1506:	e7 95       	ror	r30
    1508:	0a 94       	dec	r0
    150a:	e2 f7       	brpl	.-8      	; 0x1504 <qtm_acquisition_process+0x2a0>
    150c:	ec 83       	std	Y+4, r30	; 0x04
    150e:	fd 83       	std	Y+5, r31	; 0x05
    1510:	50 96       	adiw	r26, 0x10	; 16
    1512:	6c 90       	ld	r6, X
    1514:	ff e7       	ldi	r31, 0x7F	; 127
    1516:	6f 12       	cpse	r6, r31
    1518:	0f c0       	rjmp	.+30     	; 0x1538 <qtm_acquisition_process+0x2d4>
    151a:	ec 81       	ldd	r30, Y+4	; 0x04
    151c:	fd 81       	ldd	r31, Y+5	; 0x05
    151e:	d7 01       	movw	r26, r14
    1520:	11 96       	adiw	r26, 0x01	; 1
    1522:	ed 93       	st	X+, r30
    1524:	fc 93       	st	X, r31
    1526:	12 97       	sbiw	r26, 0x02	; 2
    1528:	d4 01       	movw	r26, r8
    152a:	50 96       	adiw	r26, 0x10	; 16
    152c:	8c 91       	ld	r24, X
    152e:	50 97       	sbiw	r26, 0x10	; 16
    1530:	8f 7b       	andi	r24, 0xBF	; 191
    1532:	50 96       	adiw	r26, 0x10	; 16
    1534:	8c 93       	st	X, r24
    1536:	42 c0       	rjmp	.+132    	; 0x15bc <qtm_acquisition_process+0x358>
    1538:	f1 2c       	mov	r15, r1
    153a:	26 2d       	mov	r18, r6
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	c9 01       	movw	r24, r18
    1540:	0f 2c       	mov	r0, r15
    1542:	02 c0       	rjmp	.+4      	; 0x1548 <qtm_acquisition_process+0x2e4>
    1544:	96 95       	lsr	r25
    1546:	87 95       	ror	r24
    1548:	0a 94       	dec	r0
    154a:	e2 f7       	brpl	.-8      	; 0x1544 <qtm_acquisition_process+0x2e0>
    154c:	80 ff       	sbrs	r24, 0
    154e:	03 c0       	rjmp	.+6      	; 0x1556 <qtm_acquisition_process+0x2f2>
    1550:	8f 2d       	mov	r24, r15
    1552:	f1 2c       	mov	r15, r1
    1554:	01 c0       	rjmp	.+2      	; 0x1558 <qtm_acquisition_process+0x2f4>
    1556:	87 e0       	ldi	r24, 0x07	; 7
    1558:	8f 5f       	subi	r24, 0xFF	; 255
    155a:	87 30       	cpi	r24, 0x07	; 7
    155c:	10 f4       	brcc	.+4      	; 0x1562 <qtm_acquisition_process+0x2fe>
    155e:	f8 2e       	mov	r15, r24
    1560:	ee cf       	rjmp	.-36     	; 0x153e <qtm_acquisition_process+0x2da>
    1562:	6c 81       	ldd	r22, Y+4	; 0x04
    1564:	7d 81       	ldd	r23, Y+5	; 0x05
    1566:	c1 01       	movw	r24, r2
    1568:	0e 94 a2 07 	call	0xf44	; 0xf44 <charge_share_test>
    156c:	88 23       	and	r24, r24
    156e:	51 f0       	breq	.+20     	; 0x1584 <qtm_acquisition_process+0x320>
    1570:	81 e0       	ldi	r24, 0x01	; 1
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	0f 2c       	mov	r0, r15
    1576:	01 c0       	rjmp	.+2      	; 0x157a <qtm_acquisition_process+0x316>
    1578:	88 0f       	add	r24, r24
    157a:	0a 94       	dec	r0
    157c:	ea f7       	brpl	.-6      	; 0x1578 <qtm_acquisition_process+0x314>
    157e:	86 29       	or	r24, r6
    1580:	f4 01       	movw	r30, r8
    1582:	80 8b       	std	Z+16, r24	; 0x10
    1584:	d8 01       	movw	r26, r16
    1586:	ff 20       	and	r15, r15
    1588:	91 f0       	breq	.+36     	; 0x15ae <qtm_acquisition_process+0x34a>
    158a:	12 96       	adiw	r26, 0x02	; 2
    158c:	ed 91       	ld	r30, X+
    158e:	fc 91       	ld	r31, X
    1590:	13 97       	sbiw	r26, 0x03	; 3
    1592:	ec 0d       	add	r30, r12
    1594:	fd 1d       	adc	r31, r13
    1596:	fa 94       	dec	r15
    1598:	81 e0       	ldi	r24, 0x01	; 1
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	01 c0       	rjmp	.+2      	; 0x15a0 <qtm_acquisition_process+0x33c>
    159e:	88 0f       	add	r24, r24
    15a0:	fa 94       	dec	r15
    15a2:	ea f7       	brpl	.-6      	; 0x159e <qtm_acquisition_process+0x33a>
    15a4:	80 95       	com	r24
    15a6:	90 89       	ldd	r25, Z+16	; 0x10
    15a8:	89 23       	and	r24, r25
    15aa:	80 8b       	std	Z+16, r24	; 0x10
    15ac:	07 c0       	rjmp	.+14     	; 0x15bc <qtm_acquisition_process+0x358>
    15ae:	14 96       	adiw	r26, 0x04	; 4
    15b0:	ed 91       	ld	r30, X+
    15b2:	fc 91       	ld	r31, X
    15b4:	15 97       	sbiw	r26, 0x05	; 5
    15b6:	ea 0d       	add	r30, r10
    15b8:	fb 1d       	adc	r31, r11
    15ba:	70 82       	st	Z, r7
    15bc:	d8 01       	movw	r26, r16
    15be:	14 96       	adiw	r26, 0x04	; 4
    15c0:	ed 91       	ld	r30, X+
    15c2:	fc 91       	ld	r31, X
    15c4:	15 97       	sbiw	r26, 0x05	; 5
    15c6:	ea 0d       	add	r30, r10
    15c8:	fb 1d       	adc	r31, r11
    15ca:	80 81       	ld	r24, Z
    15cc:	81 30       	cpi	r24, 0x01	; 1
    15ce:	09 f0       	breq	.+2      	; 0x15d2 <qtm_acquisition_process+0x36e>
    15d0:	9d c0       	rjmp	.+314    	; 0x170c <qtm_acquisition_process+0x4a8>
    15d2:	2c 81       	ldd	r18, Y+4	; 0x04
    15d4:	3d 81       	ldd	r19, Y+5	; 0x05
    15d6:	83 c0       	rjmp	.+262    	; 0x16de <qtm_acquisition_process+0x47a>
    15d8:	02 80       	ldd	r0, Z+2	; 0x02
    15da:	f3 81       	ldd	r31, Z+3	; 0x03
    15dc:	e0 2d       	mov	r30, r0
    15de:	ec 0d       	add	r30, r12
    15e0:	fd 1d       	adc	r31, r13
    15e2:	9a 01       	movw	r18, r20
    15e4:	03 88       	ldd	r0, Z+19	; 0x13
    15e6:	02 c0       	rjmp	.+4      	; 0x15ec <qtm_acquisition_process+0x388>
    15e8:	36 95       	lsr	r19
    15ea:	27 95       	ror	r18
    15ec:	0a 94       	dec	r0
    15ee:	e2 f7       	brpl	.-8      	; 0x15e8 <qtm_acquisition_process+0x384>
    15f0:	2c 83       	std	Y+4, r18	; 0x04
    15f2:	3d 83       	std	Y+5, r19	; 0x05
    15f4:	91 88       	ldd	r9, Z+17	; 0x11
    15f6:	92 94       	swap	r9
    15f8:	2f e0       	ldi	r18, 0x0F	; 15
    15fa:	92 22       	and	r9, r18
    15fc:	37 e0       	ldi	r19, 0x07	; 7
    15fe:	93 16       	cp	r9, r19
    1600:	91 f0       	breq	.+36     	; 0x1626 <qtm_acquisition_process+0x3c2>
    1602:	6c 81       	ldd	r22, Y+4	; 0x04
    1604:	7d 81       	ldd	r23, Y+5	; 0x05
    1606:	c1 01       	movw	r24, r2
    1608:	0e 94 a2 07 	call	0xf44	; 0xf44 <charge_share_test>
    160c:	81 11       	cpse	r24, r1
    160e:	04 c0       	rjmp	.+8      	; 0x1618 <qtm_acquisition_process+0x3b4>
    1610:	93 94       	inc	r9
    1612:	d7 01       	movw	r26, r14
    1614:	7c 92       	st	X, r7
    1616:	09 c0       	rjmp	.+18     	; 0x162a <qtm_acquisition_process+0x3c6>
    1618:	91 10       	cpse	r9, r1
    161a:	03 c0       	rjmp	.+6      	; 0x1622 <qtm_acquisition_process+0x3be>
    161c:	f7 01       	movw	r30, r14
    161e:	70 82       	st	Z, r7
    1620:	04 c0       	rjmp	.+8      	; 0x162a <qtm_acquisition_process+0x3c6>
    1622:	9a 94       	dec	r9
    1624:	02 c0       	rjmp	.+4      	; 0x162a <qtm_acquisition_process+0x3c6>
    1626:	96 e0       	ldi	r25, 0x06	; 6
    1628:	99 2e       	mov	r9, r25
    162a:	d8 01       	movw	r26, r16
    162c:	12 96       	adiw	r26, 0x02	; 2
    162e:	ed 91       	ld	r30, X+
    1630:	fc 91       	ld	r31, X
    1632:	13 97       	sbiw	r26, 0x03	; 3
    1634:	ec 0d       	add	r30, r12
    1636:	fd 1d       	adc	r31, r13
    1638:	81 89       	ldd	r24, Z+17	; 0x11
    163a:	8f 70       	andi	r24, 0x0F	; 15
    163c:	81 8b       	std	Z+17, r24	; 0x11
    163e:	12 96       	adiw	r26, 0x02	; 2
    1640:	ed 91       	ld	r30, X+
    1642:	fc 91       	ld	r31, X
    1644:	13 97       	sbiw	r26, 0x03	; 3
    1646:	ec 0d       	add	r30, r12
    1648:	fd 1d       	adc	r31, r13
    164a:	92 94       	swap	r9
    164c:	80 ef       	ldi	r24, 0xF0	; 240
    164e:	98 22       	and	r9, r24
    1650:	36 c0       	rjmp	.+108    	; 0x16be <qtm_acquisition_process+0x45a>
    1652:	02 80       	ldd	r0, Z+2	; 0x02
    1654:	f3 81       	ldd	r31, Z+3	; 0x03
    1656:	e0 2d       	mov	r30, r0
    1658:	ec 0d       	add	r30, r12
    165a:	fd 1d       	adc	r31, r13
    165c:	9a 01       	movw	r18, r20
    165e:	03 88       	ldd	r0, Z+19	; 0x13
    1660:	02 c0       	rjmp	.+4      	; 0x1666 <qtm_acquisition_process+0x402>
    1662:	36 95       	lsr	r19
    1664:	27 95       	ror	r18
    1666:	0a 94       	dec	r0
    1668:	e2 f7       	brpl	.-8      	; 0x1662 <qtm_acquisition_process+0x3fe>
    166a:	2c 83       	std	Y+4, r18	; 0x04
    166c:	3d 83       	std	Y+5, r19	; 0x05
    166e:	81 89       	ldd	r24, Z+17	; 0x11
    1670:	8f 70       	andi	r24, 0x0F	; 15
    1672:	98 2e       	mov	r9, r24
    1674:	91 f0       	breq	.+36     	; 0x169a <qtm_acquisition_process+0x436>
    1676:	b9 01       	movw	r22, r18
    1678:	c1 01       	movw	r24, r2
    167a:	0e 94 a2 07 	call	0xf44	; 0xf44 <charge_share_test>
    167e:	81 11       	cpse	r24, r1
    1680:	04 c0       	rjmp	.+8      	; 0x168a <qtm_acquisition_process+0x426>
    1682:	9a 94       	dec	r9
    1684:	d7 01       	movw	r26, r14
    1686:	7c 92       	st	X, r7
    1688:	0a c0       	rjmp	.+20     	; 0x169e <qtm_acquisition_process+0x43a>
    168a:	b7 e0       	ldi	r27, 0x07	; 7
    168c:	9b 12       	cpse	r9, r27
    168e:	03 c0       	rjmp	.+6      	; 0x1696 <qtm_acquisition_process+0x432>
    1690:	f7 01       	movw	r30, r14
    1692:	70 82       	st	Z, r7
    1694:	04 c0       	rjmp	.+8      	; 0x169e <qtm_acquisition_process+0x43a>
    1696:	93 94       	inc	r9
    1698:	02 c0       	rjmp	.+4      	; 0x169e <qtm_acquisition_process+0x43a>
    169a:	99 24       	eor	r9, r9
    169c:	93 94       	inc	r9
    169e:	d8 01       	movw	r26, r16
    16a0:	12 96       	adiw	r26, 0x02	; 2
    16a2:	ed 91       	ld	r30, X+
    16a4:	fc 91       	ld	r31, X
    16a6:	13 97       	sbiw	r26, 0x03	; 3
    16a8:	ec 0d       	add	r30, r12
    16aa:	fd 1d       	adc	r31, r13
    16ac:	81 89       	ldd	r24, Z+17	; 0x11
    16ae:	80 7f       	andi	r24, 0xF0	; 240
    16b0:	81 8b       	std	Z+17, r24	; 0x11
    16b2:	12 96       	adiw	r26, 0x02	; 2
    16b4:	ed 91       	ld	r30, X+
    16b6:	fc 91       	ld	r31, X
    16b8:	13 97       	sbiw	r26, 0x03	; 3
    16ba:	ec 0d       	add	r30, r12
    16bc:	fd 1d       	adc	r31, r13
    16be:	81 89       	ldd	r24, Z+17	; 0x11
    16c0:	98 2a       	or	r9, r24
    16c2:	91 8a       	std	Z+17, r9	; 0x11
    16c4:	14 96       	adiw	r26, 0x04	; 4
    16c6:	ed 91       	ld	r30, X+
    16c8:	fc 91       	ld	r31, X
    16ca:	15 97       	sbiw	r26, 0x05	; 5
    16cc:	ea 0d       	add	r30, r10
    16ce:	fb 1d       	adc	r31, r11
    16d0:	2c 81       	ldd	r18, Y+4	; 0x04
    16d2:	3d 81       	ldd	r19, Y+5	; 0x05
    16d4:	21 83       	std	Z+1, r18	; 0x01
    16d6:	32 83       	std	Z+2, r19	; 0x02
    16d8:	80 81       	ld	r24, Z
    16da:	81 30       	cpi	r24, 0x01	; 1
    16dc:	b9 f4       	brne	.+46     	; 0x170c <qtm_acquisition_process+0x4a8>
    16de:	21 15       	cp	r18, r1
    16e0:	42 e0       	ldi	r20, 0x02	; 2
    16e2:	34 07       	cpc	r19, r20
    16e4:	28 f0       	brcs	.+10     	; 0x16f0 <qtm_acquisition_process+0x48c>
    16e6:	2f 5f       	subi	r18, 0xFF	; 255
    16e8:	31 40       	sbci	r19, 0x01	; 1
    16ea:	2c 83       	std	Y+4, r18	; 0x04
    16ec:	3d 83       	std	Y+5, r19	; 0x05
    16ee:	07 c0       	rjmp	.+14     	; 0x16fe <qtm_acquisition_process+0x49a>
    16f0:	c2 01       	movw	r24, r4
    16f2:	ac 81       	ldd	r26, Y+4	; 0x04
    16f4:	bd 81       	ldd	r27, Y+5	; 0x05
    16f6:	8a 1b       	sub	r24, r26
    16f8:	9b 0b       	sbc	r25, r27
    16fa:	8c 83       	std	Y+4, r24	; 0x04
    16fc:	9d 83       	std	Y+5, r25	; 0x05
    16fe:	2c 81       	ldd	r18, Y+4	; 0x04
    1700:	3d 81       	ldd	r19, Y+5	; 0x05
    1702:	2b 30       	cpi	r18, 0x0B	; 11
    1704:	31 05       	cpc	r19, r1
    1706:	10 f0       	brcs	.+4      	; 0x170c <qtm_acquisition_process+0x4a8>
    1708:	35 e4       	ldi	r19, 0x45	; 69
    170a:	30 83       	st	Z, r19
    170c:	4f ef       	ldi	r20, 0xFF	; 255
    170e:	24 1a       	sub	r2, r20
    1710:	34 0a       	sbc	r3, r20
    1712:	55 e0       	ldi	r21, 0x05	; 5
    1714:	a5 0e       	add	r10, r21
    1716:	b1 1c       	adc	r11, r1
    1718:	84 e1       	ldi	r24, 0x14	; 20
    171a:	c8 0e       	add	r12, r24
    171c:	d1 1c       	adc	r13, r1
    171e:	d5 cd       	rjmp	.-1110   	; 0x12ca <qtm_acquisition_process+0x66>
    1720:	82 e0       	ldi	r24, 0x02	; 2
    1722:	80 93 a1 40 	sts	0x40A1, r24	; 0x8040a1 <touch_seq_lib_state>
    1726:	09 c0       	rjmp	.+18     	; 0x173a <qtm_acquisition_process+0x4d6>
    1728:	b3 e0       	ldi	r27, 0x03	; 3
    172a:	b9 83       	std	Y+1, r27	; 0x01
    172c:	06 c0       	rjmp	.+12     	; 0x173a <qtm_acquisition_process+0x4d6>
    172e:	49 2f       	mov	r20, r25
    1730:	40 95       	com	r20
    1732:	44 1f       	adc	r20, r20
    1734:	44 27       	eor	r20, r20
    1736:	44 1f       	adc	r20, r20
    1738:	4c ce       	rjmp	.-872    	; 0x13d2 <qtm_acquisition_process+0x16e>
    173a:	89 81       	ldd	r24, Y+1	; 0x01
    173c:	27 96       	adiw	r28, 0x07	; 7
    173e:	cd bf       	out	0x3d, r28	; 61
    1740:	de bf       	out	0x3e, r29	; 62
    1742:	df 91       	pop	r29
    1744:	cf 91       	pop	r28
    1746:	1f 91       	pop	r17
    1748:	0f 91       	pop	r16
    174a:	ff 90       	pop	r15
    174c:	ef 90       	pop	r14
    174e:	df 90       	pop	r13
    1750:	cf 90       	pop	r12
    1752:	bf 90       	pop	r11
    1754:	af 90       	pop	r10
    1756:	9f 90       	pop	r9
    1758:	8f 90       	pop	r8
    175a:	7f 90       	pop	r7
    175c:	6f 90       	pop	r6
    175e:	5f 90       	pop	r5
    1760:	4f 90       	pop	r4
    1762:	3f 90       	pop	r3
    1764:	2f 90       	pop	r2
    1766:	08 95       	ret

00001768 <qtm_ptc_init_acquisition_module>:
    1768:	5f 92       	push	r5
    176a:	6f 92       	push	r6
    176c:	7f 92       	push	r7
    176e:	8f 92       	push	r8
    1770:	9f 92       	push	r9
    1772:	af 92       	push	r10
    1774:	bf 92       	push	r11
    1776:	cf 92       	push	r12
    1778:	df 92       	push	r13
    177a:	ef 92       	push	r14
    177c:	ff 92       	push	r15
    177e:	0f 93       	push	r16
    1780:	1f 93       	push	r17
    1782:	cf 93       	push	r28
    1784:	df 93       	push	r29
    1786:	00 97       	sbiw	r24, 0x00	; 0
    1788:	09 f4       	brne	.+2      	; 0x178c <qtm_ptc_init_acquisition_module+0x24>
    178a:	92 c0       	rjmp	.+292    	; 0x18b0 <qtm_ptc_init_acquisition_module+0x148>
    178c:	dc 01       	movw	r26, r24
    178e:	ed 91       	ld	r30, X+
    1790:	fc 91       	ld	r31, X
    1792:	60 81       	ld	r22, Z
    1794:	71 81       	ldd	r23, Z+1	; 0x01
    1796:	40 e0       	ldi	r20, 0x00	; 0
    1798:	50 e0       	ldi	r21, 0x00	; 0
    179a:	20 e0       	ldi	r18, 0x00	; 0
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	b0 e0       	ldi	r27, 0x00	; 0
    17a0:	10 e0       	ldi	r17, 0x00	; 0
    17a2:	f1 2c       	mov	r15, r1
    17a4:	e1 2c       	mov	r14, r1
    17a6:	91 2c       	mov	r9, r1
    17a8:	81 2c       	mov	r8, r1
    17aa:	71 2c       	mov	r7, r1
    17ac:	61 2c       	mov	r6, r1
    17ae:	26 17       	cp	r18, r22
    17b0:	37 07       	cpc	r19, r23
    17b2:	51 f1       	breq	.+84     	; 0x1808 <qtm_ptc_init_acquisition_module+0xa0>
    17b4:	ec 01       	movw	r28, r24
    17b6:	ea 81       	ldd	r30, Y+2	; 0x02
    17b8:	fb 81       	ldd	r31, Y+3	; 0x03
    17ba:	e4 0f       	add	r30, r20
    17bc:	f5 1f       	adc	r31, r21
    17be:	a0 80       	ld	r10, Z
    17c0:	a0 85       	ldd	r26, Z+8	; 0x08
    17c2:	aa 2a       	or	r10, r26
    17c4:	b1 80       	ldd	r11, Z+1	; 0x01
    17c6:	a1 85       	ldd	r26, Z+9	; 0x09
    17c8:	ba 2a       	or	r11, r26
    17ca:	c2 80       	ldd	r12, Z+2	; 0x02
    17cc:	a2 85       	ldd	r26, Z+10	; 0x0a
    17ce:	ca 2a       	or	r12, r26
    17d0:	d3 80       	ldd	r13, Z+3	; 0x03
    17d2:	a3 85       	ldd	r26, Z+11	; 0x0b
    17d4:	da 2a       	or	r13, r26
    17d6:	d4 81       	ldd	r29, Z+4	; 0x04
    17d8:	a4 85       	ldd	r26, Z+12	; 0x0c
    17da:	da 2b       	or	r29, r26
    17dc:	c5 81       	ldd	r28, Z+5	; 0x05
    17de:	a5 85       	ldd	r26, Z+13	; 0x0d
    17e0:	ca 2b       	or	r28, r26
    17e2:	56 80       	ldd	r5, Z+6	; 0x06
    17e4:	a6 85       	ldd	r26, Z+14	; 0x0e
    17e6:	a5 29       	or	r26, r5
    17e8:	57 80       	ldd	r5, Z+7	; 0x07
    17ea:	e7 85       	ldd	r30, Z+15	; 0x0f
    17ec:	e5 29       	or	r30, r5
    17ee:	ba 29       	or	r27, r10
    17f0:	1b 29       	or	r17, r11
    17f2:	fc 28       	or	r15, r12
    17f4:	ed 28       	or	r14, r13
    17f6:	9d 2a       	or	r9, r29
    17f8:	8c 2a       	or	r8, r28
    17fa:	7a 2a       	or	r7, r26
    17fc:	6e 2a       	or	r6, r30
    17fe:	2f 5f       	subi	r18, 0xFF	; 255
    1800:	3f 4f       	sbci	r19, 0xFF	; 255
    1802:	4c 5e       	subi	r20, 0xEC	; 236
    1804:	5f 4f       	sbci	r21, 0xFF	; 255
    1806:	d3 cf       	rjmp	.-90     	; 0x17ae <qtm_ptc_init_acquisition_module+0x46>
    1808:	2b 2f       	mov	r18, r27
    180a:	31 2f       	mov	r19, r17
    180c:	4f 2d       	mov	r20, r15
    180e:	5e 2d       	mov	r21, r14
    1810:	69 2d       	mov	r22, r9
    1812:	78 2d       	mov	r23, r8
    1814:	87 2d       	mov	r24, r7
    1816:	96 2d       	mov	r25, r6
    1818:	a0 e0       	ldi	r26, 0x00	; 0
    181a:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <__cmpdi2_s8>
    181e:	09 f4       	brne	.+2      	; 0x1822 <qtm_ptc_init_acquisition_module+0xba>
    1820:	49 c0       	rjmp	.+146    	; 0x18b4 <qtm_ptc_init_acquisition_module+0x14c>
    1822:	81 e0       	ldi	r24, 0x01	; 1
    1824:	80 93 a1 40 	sts	0x40A1, r24	; 0x8040a1 <touch_seq_lib_state>
    1828:	23 e6       	ldi	r18, 0x63	; 99
    182a:	c2 2e       	mov	r12, r18
    182c:	20 e4       	ldi	r18, 0x40	; 64
    182e:	d2 2e       	mov	r13, r18
    1830:	c0 e0       	ldi	r28, 0x00	; 0
    1832:	d0 e0       	ldi	r29, 0x00	; 0
    1834:	aa 24       	eor	r10, r10
    1836:	a3 94       	inc	r10
    1838:	b1 2c       	mov	r11, r1
    183a:	4c e0       	ldi	r20, 0x0C	; 12
    183c:	54 2e       	mov	r5, r20
    183e:	2b 2f       	mov	r18, r27
    1840:	31 2f       	mov	r19, r17
    1842:	4f 2d       	mov	r20, r15
    1844:	5e 2d       	mov	r21, r14
    1846:	69 2d       	mov	r22, r9
    1848:	78 2d       	mov	r23, r8
    184a:	87 2d       	mov	r24, r7
    184c:	96 2d       	mov	r25, r6
    184e:	0c 2f       	mov	r16, r28
    1850:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__lshrdi3>
    1854:	21 70       	andi	r18, 0x01	; 1
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	40 e0       	ldi	r20, 0x00	; 0
    185a:	50 e0       	ldi	r21, 0x00	; 0
    185c:	60 e0       	ldi	r22, 0x00	; 0
    185e:	70 e0       	ldi	r23, 0x00	; 0
    1860:	80 e0       	ldi	r24, 0x00	; 0
    1862:	90 e0       	ldi	r25, 0x00	; 0
    1864:	a0 e0       	ldi	r26, 0x00	; 0
    1866:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <__cmpdi2_s8>
    186a:	c9 f0       	breq	.+50     	; 0x189e <qtm_ptc_init_acquisition_module+0x136>
    186c:	f6 01       	movw	r30, r12
    186e:	80 81       	ld	r24, Z
    1870:	e8 2f       	mov	r30, r24
    1872:	e2 95       	swap	r30
    1874:	e6 95       	lsr	r30
    1876:	e7 70       	andi	r30, 0x07	; 7
    1878:	f0 e0       	ldi	r31, 0x00	; 0
    187a:	ee 0f       	add	r30, r30
    187c:	ff 1f       	adc	r31, r31
    187e:	eb 5a       	subi	r30, 0xAB	; 171
    1880:	ff 4b       	sbci	r31, 0xBF	; 191
    1882:	01 90       	ld	r0, Z+
    1884:	f0 81       	ld	r31, Z
    1886:	e0 2d       	mov	r30, r0
    1888:	8f 71       	andi	r24, 0x1F	; 31
    188a:	95 01       	movw	r18, r10
    188c:	02 c0       	rjmp	.+4      	; 0x1892 <qtm_ptc_init_acquisition_module+0x12a>
    188e:	22 0f       	add	r18, r18
    1890:	33 1f       	adc	r19, r19
    1892:	8a 95       	dec	r24
    1894:	e2 f7       	brpl	.-8      	; 0x188e <qtm_ptc_init_acquisition_module+0x126>
    1896:	22 83       	std	Z+2, r18	; 0x02
    1898:	26 83       	std	Z+6, r18	; 0x06
    189a:	53 86       	std	Z+11, r5	; 0x0b
    189c:	25 87       	std	Z+13, r18	; 0x0d
    189e:	21 96       	adiw	r28, 0x01	; 1
    18a0:	3f ef       	ldi	r19, 0xFF	; 255
    18a2:	c3 1a       	sub	r12, r19
    18a4:	d3 0a       	sbc	r13, r19
    18a6:	c0 33       	cpi	r28, 0x30	; 48
    18a8:	d1 05       	cpc	r29, r1
    18aa:	49 f6       	brne	.-110    	; 0x183e <qtm_ptc_init_acquisition_module+0xd6>
    18ac:	80 e0       	ldi	r24, 0x00	; 0
    18ae:	03 c0       	rjmp	.+6      	; 0x18b6 <qtm_ptc_init_acquisition_module+0x14e>
    18b0:	8b e0       	ldi	r24, 0x0B	; 11
    18b2:	01 c0       	rjmp	.+2      	; 0x18b6 <qtm_ptc_init_acquisition_module+0x14e>
    18b4:	82 e0       	ldi	r24, 0x02	; 2
    18b6:	df 91       	pop	r29
    18b8:	cf 91       	pop	r28
    18ba:	1f 91       	pop	r17
    18bc:	0f 91       	pop	r16
    18be:	ff 90       	pop	r15
    18c0:	ef 90       	pop	r14
    18c2:	df 90       	pop	r13
    18c4:	cf 90       	pop	r12
    18c6:	bf 90       	pop	r11
    18c8:	af 90       	pop	r10
    18ca:	9f 90       	pop	r9
    18cc:	8f 90       	pop	r8
    18ce:	7f 90       	pop	r7
    18d0:	6f 90       	pop	r6
    18d2:	5f 90       	pop	r5
    18d4:	08 95       	ret

000018d6 <qtm_ptc_qtlib_assign_signal_memory>:
    18d6:	00 97       	sbiw	r24, 0x00	; 0
    18d8:	31 f0       	breq	.+12     	; 0x18e6 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    18da:	80 93 ba 40 	sts	0x40BA, r24	; 0x8040ba <qtm_raw_data_measurements_ptr>
    18de:	90 93 bb 40 	sts	0x40BB, r25	; 0x8040bb <qtm_raw_data_measurements_ptr+0x1>
    18e2:	80 e0       	ldi	r24, 0x00	; 0
    18e4:	08 95       	ret
    18e6:	8b e0       	ldi	r24, 0x0B	; 11
    18e8:	08 95       	ret

000018ea <qtm_ptc_start_measurement_seq>:
    18ea:	61 15       	cp	r22, r1
    18ec:	71 05       	cpc	r23, r1
    18ee:	61 f1       	breq	.+88     	; 0x1948 <qtm_ptc_start_measurement_seq+0x5e>
    18f0:	00 97       	sbiw	r24, 0x00	; 0
    18f2:	51 f1       	breq	.+84     	; 0x1948 <qtm_ptc_start_measurement_seq+0x5e>
    18f4:	20 91 a1 40 	lds	r18, 0x40A1	; 0x8040a1 <touch_seq_lib_state>
    18f8:	22 23       	and	r18, r18
    18fa:	41 f1       	breq	.+80     	; 0x194c <qtm_ptc_start_measurement_seq+0x62>
    18fc:	24 30       	cpi	r18, 0x04	; 4
    18fe:	41 f1       	breq	.+80     	; 0x1950 <qtm_ptc_start_measurement_seq+0x66>
    1900:	80 93 b8 40 	sts	0x40B8, r24	; 0x8040b8 <qtm_acquisition_control_working_set_ptr>
    1904:	90 93 b9 40 	sts	0x40B9, r25	; 0x8040b9 <qtm_acquisition_control_working_set_ptr+0x1>
    1908:	60 93 9f 40 	sts	0x409F, r22	; 0x80409f <ptc_seq_measure_complete_pointer>
    190c:	70 93 a0 40 	sts	0x40A0, r23	; 0x8040a0 <ptc_seq_measure_complete_pointer+0x1>
    1910:	dc 01       	movw	r26, r24
    1912:	ed 91       	ld	r30, X+
    1914:	fc 91       	ld	r31, X
    1916:	22 81       	ldd	r18, Z+2	; 0x02
    1918:	20 34       	cpi	r18, 0x40	; 64
    191a:	19 f4       	brne	.+6      	; 0x1922 <qtm_ptc_start_measurement_seq+0x38>
    191c:	10 92 c1 07 	sts	0x07C1, r1	; 0x8007c1 <__TEXT_REGION_LENGTH__+0x7e07c1>
    1920:	07 c0       	rjmp	.+14     	; 0x1930 <qtm_ptc_start_measurement_seq+0x46>
    1922:	20 38       	cpi	r18, 0x80	; 128
    1924:	11 f0       	breq	.+4      	; 0x192a <qtm_ptc_start_measurement_seq+0x40>
    1926:	21 38       	cpi	r18, 0x81	; 129
    1928:	31 f4       	brne	.+12     	; 0x1936 <qtm_ptc_start_measurement_seq+0x4c>
    192a:	21 e0       	ldi	r18, 0x01	; 1
    192c:	20 93 c1 07 	sts	0x07C1, r18	; 0x8007c1 <__TEXT_REGION_LENGTH__+0x7e07c1>
    1930:	10 92 cb 07 	sts	0x07CB, r1	; 0x8007cb <__TEXT_REGION_LENGTH__+0x7e07cb>
    1934:	11 c0       	rjmp	.+34     	; 0x1958 <qtm_ptc_start_measurement_seq+0x6e>
    1936:	22 38       	cpi	r18, 0x82	; 130
    1938:	69 f4       	brne	.+26     	; 0x1954 <qtm_ptc_start_measurement_seq+0x6a>
    193a:	21 e0       	ldi	r18, 0x01	; 1
    193c:	20 93 c1 07 	sts	0x07C1, r18	; 0x8007c1 <__TEXT_REGION_LENGTH__+0x7e07c1>
    1940:	29 e0       	ldi	r18, 0x09	; 9
    1942:	20 93 cb 07 	sts	0x07CB, r18	; 0x8007cb <__TEXT_REGION_LENGTH__+0x7e07cb>
    1946:	08 c0       	rjmp	.+16     	; 0x1958 <qtm_ptc_start_measurement_seq+0x6e>
    1948:	8b e0       	ldi	r24, 0x0B	; 11
    194a:	08 95       	ret
    194c:	83 e0       	ldi	r24, 0x03	; 3
    194e:	08 95       	ret
    1950:	81 e0       	ldi	r24, 0x01	; 1
    1952:	08 95       	ret
    1954:	82 e0       	ldi	r24, 0x02	; 2
    1956:	08 95       	ret
    1958:	10 92 c0 07 	sts	0x07C0, r1	; 0x8007c0 <__TEXT_REGION_LENGTH__+0x7e07c0>
    195c:	dc 01       	movw	r26, r24
    195e:	ed 91       	ld	r30, X+
    1960:	fc 91       	ld	r31, X
    1962:	84 81       	ldd	r24, Z+4	; 0x04
    1964:	92 81       	ldd	r25, Z+2	; 0x02
    1966:	90 34       	cpi	r25, 0x40	; 64
    1968:	51 f4       	brne	.+20     	; 0x197e <qtm_ptc_start_measurement_seq+0x94>
    196a:	10 92 c5 07 	sts	0x07C5, r1	; 0x8007c5 <__TEXT_REGION_LENGTH__+0x7e07c5>
    196e:	80 31       	cpi	r24, 0x10	; 16
    1970:	10 f4       	brcc	.+4      	; 0x1976 <qtm_ptc_start_measurement_seq+0x8c>
    1972:	80 62       	ori	r24, 0x20	; 32
    1974:	01 c0       	rjmp	.+2      	; 0x1978 <qtm_ptc_start_measurement_seq+0x8e>
    1976:	8f e2       	ldi	r24, 0x2F	; 47
    1978:	80 93 c3 07 	sts	0x07C3, r24	; 0x8007c3 <__TEXT_REGION_LENGTH__+0x7e07c3>
    197c:	08 c0       	rjmp	.+16     	; 0x198e <qtm_ptc_start_measurement_seq+0xa4>
    197e:	90 e2       	ldi	r25, 0x20	; 32
    1980:	90 93 c3 07 	sts	0x07C3, r25	; 0x8007c3 <__TEXT_REGION_LENGTH__+0x7e07c3>
    1984:	8f 30       	cpi	r24, 0x0F	; 15
    1986:	08 f0       	brcs	.+2      	; 0x198a <qtm_ptc_start_measurement_seq+0xa0>
    1988:	8f e0       	ldi	r24, 0x0F	; 15
    198a:	80 93 c5 07 	sts	0x07C5, r24	; 0x8007c5 <__TEXT_REGION_LENGTH__+0x7e07c5>
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	80 93 d3 07 	sts	0x07D3, r24	; 0x8007d3 <__TEXT_REGION_LENGTH__+0x7e07d3>
    1994:	80 93 d2 07 	sts	0x07D2, r24	; 0x8007d2 <__TEXT_REGION_LENGTH__+0x7e07d2>
    1998:	80 93 47 40 	sts	0x4047, r24	; 0x804047 <qtm_which_mode_current>
    199c:	10 92 a2 40 	sts	0x40A2, r1	; 0x8040a2 <current_measure_channel>
    19a0:	10 92 a3 40 	sts	0x40A3, r1	; 0x8040a3 <current_measure_channel+0x1>
    19a4:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <select_next_channel_to_measure>
    19a8:	81 11       	cpse	r24, r1
    19aa:	0b c0       	rjmp	.+22     	; 0x19c2 <qtm_ptc_start_measurement_seq+0xd8>
    19ac:	84 e0       	ldi	r24, 0x04	; 4
    19ae:	80 93 a1 40 	sts	0x40A1, r24	; 0x8040a1 <touch_seq_lib_state>
    19b2:	80 91 a2 40 	lds	r24, 0x40A2	; 0x8040a2 <current_measure_channel>
    19b6:	90 91 a3 40 	lds	r25, 0x40A3	; 0x8040a3 <current_measure_channel+0x1>
    19ba:	0e 94 1d 08 	call	0x103a	; 0x103a <qtm_measure_node>
    19be:	80 e0       	ldi	r24, 0x00	; 0
    19c0:	08 95       	ret
    19c2:	82 e0       	ldi	r24, 0x02	; 2
    19c4:	80 93 a1 40 	sts	0x40A1, r24	; 0x8040a1 <touch_seq_lib_state>
    19c8:	08 95       	ret

000019ca <qtm_enable_sensor_node>:
    19ca:	00 97       	sbiw	r24, 0x00	; 0
    19cc:	c9 f0       	breq	.+50     	; 0x1a00 <qtm_enable_sensor_node+0x36>
    19ce:	dc 01       	movw	r26, r24
    19d0:	ed 91       	ld	r30, X+
    19d2:	fc 91       	ld	r31, X
    19d4:	11 97       	sbiw	r26, 0x01	; 1
    19d6:	20 81       	ld	r18, Z
    19d8:	31 81       	ldd	r19, Z+1	; 0x01
    19da:	26 17       	cp	r18, r22
    19dc:	37 07       	cpc	r19, r23
    19de:	90 f0       	brcs	.+36     	; 0x1a04 <qtm_enable_sensor_node+0x3a>
    19e0:	45 e0       	ldi	r20, 0x05	; 5
    19e2:	46 9f       	mul	r20, r22
    19e4:	90 01       	movw	r18, r0
    19e6:	47 9f       	mul	r20, r23
    19e8:	30 0d       	add	r19, r0
    19ea:	11 24       	eor	r1, r1
    19ec:	14 96       	adiw	r26, 0x04	; 4
    19ee:	ed 91       	ld	r30, X+
    19f0:	fc 91       	ld	r31, X
    19f2:	15 97       	sbiw	r26, 0x05	; 5
    19f4:	e2 0f       	add	r30, r18
    19f6:	f3 1f       	adc	r31, r19
    19f8:	81 e0       	ldi	r24, 0x01	; 1
    19fa:	80 83       	st	Z, r24
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	08 95       	ret
    1a00:	8b e0       	ldi	r24, 0x0B	; 11
    1a02:	08 95       	ret
    1a04:	82 e0       	ldi	r24, 0x02	; 2
    1a06:	08 95       	ret

00001a08 <qtm_calibrate_sensor_node>:
    1a08:	fc 01       	movw	r30, r24
    1a0a:	89 2b       	or	r24, r25
    1a0c:	d1 f1       	breq	.+116    	; 0x1a82 <qtm_calibrate_sensor_node+0x7a>
    1a0e:	a0 81       	ld	r26, Z
    1a10:	b1 81       	ldd	r27, Z+1	; 0x01
    1a12:	8d 91       	ld	r24, X+
    1a14:	9c 91       	ld	r25, X
    1a16:	11 97       	sbiw	r26, 0x01	; 1
    1a18:	86 17       	cp	r24, r22
    1a1a:	97 07       	cpc	r25, r23
    1a1c:	a0 f1       	brcs	.+104    	; 0x1a86 <qtm_calibrate_sensor_node+0x7e>
    1a1e:	12 96       	adiw	r26, 0x02	; 2
    1a20:	9c 91       	ld	r25, X
    1a22:	04 80       	ldd	r0, Z+4	; 0x04
    1a24:	f5 81       	ldd	r31, Z+5	; 0x05
    1a26:	e0 2d       	mov	r30, r0
    1a28:	90 34       	cpi	r25, 0x40	; 64
    1a2a:	59 f4       	brne	.+22     	; 0x1a42 <qtm_calibrate_sensor_node+0x3a>
    1a2c:	85 e0       	ldi	r24, 0x05	; 5
    1a2e:	86 9f       	mul	r24, r22
    1a30:	d0 01       	movw	r26, r0
    1a32:	87 9f       	mul	r24, r23
    1a34:	b0 0d       	add	r27, r0
    1a36:	11 24       	eor	r1, r1
    1a38:	ae 0f       	add	r26, r30
    1a3a:	bf 1f       	adc	r27, r31
    1a3c:	80 ea       	ldi	r24, 0xA0	; 160
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	0d c0       	rjmp	.+26     	; 0x1a5c <qtm_calibrate_sensor_node+0x54>
    1a42:	90 58       	subi	r25, 0x80	; 128
    1a44:	93 30       	cpi	r25, 0x03	; 3
    1a46:	80 f4       	brcc	.+32     	; 0x1a68 <qtm_calibrate_sensor_node+0x60>
    1a48:	85 e0       	ldi	r24, 0x05	; 5
    1a4a:	86 9f       	mul	r24, r22
    1a4c:	d0 01       	movw	r26, r0
    1a4e:	87 9f       	mul	r24, r23
    1a50:	b0 0d       	add	r27, r0
    1a52:	11 24       	eor	r1, r1
    1a54:	ae 0f       	add	r26, r30
    1a56:	bf 1f       	adc	r27, r31
    1a58:	80 ef       	ldi	r24, 0xF0	; 240
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	13 96       	adiw	r26, 0x03	; 3
    1a5e:	8d 93       	st	X+, r24
    1a60:	9c 93       	st	X, r25
    1a62:	14 97       	sbiw	r26, 0x04	; 4
    1a64:	80 e0       	ldi	r24, 0x00	; 0
    1a66:	01 c0       	rjmp	.+2      	; 0x1a6a <qtm_calibrate_sensor_node+0x62>
    1a68:	82 e0       	ldi	r24, 0x02	; 2
    1a6a:	95 e0       	ldi	r25, 0x05	; 5
    1a6c:	96 9f       	mul	r25, r22
    1a6e:	90 01       	movw	r18, r0
    1a70:	97 9f       	mul	r25, r23
    1a72:	30 0d       	add	r19, r0
    1a74:	11 24       	eor	r1, r1
    1a76:	e2 0f       	add	r30, r18
    1a78:	f3 1f       	adc	r31, r19
    1a7a:	90 81       	ld	r25, Z
    1a7c:	92 60       	ori	r25, 0x02	; 2
    1a7e:	90 83       	st	Z, r25
    1a80:	08 95       	ret
    1a82:	8b e0       	ldi	r24, 0x0B	; 11
    1a84:	08 95       	ret
    1a86:	82 e0       	ldi	r24, 0x02	; 2
    1a88:	08 95       	ret

00001a8a <qtm_avr_da_ptc_handler_wcomp>:
    1a8a:	20 91 da 07 	lds	r18, 0x07DA	; 0x8007da <__TEXT_REGION_LENGTH__+0x7e07da>
    1a8e:	30 91 db 07 	lds	r19, 0x07DB	; 0x8007db <__TEXT_REGION_LENGTH__+0x7e07db>
    1a92:	60 91 a2 40 	lds	r22, 0x40A2	; 0x8040a2 <current_measure_channel>
    1a96:	70 91 a3 40 	lds	r23, 0x40A3	; 0x8040a3 <current_measure_channel+0x1>
    1a9a:	cb 01       	movw	r24, r22
    1a9c:	88 0f       	add	r24, r24
    1a9e:	99 1f       	adc	r25, r25
    1aa0:	e0 91 ba 40 	lds	r30, 0x40BA	; 0x8040ba <qtm_raw_data_measurements_ptr>
    1aa4:	f0 91 bb 40 	lds	r31, 0x40BB	; 0x8040bb <qtm_raw_data_measurements_ptr+0x1>
    1aa8:	e8 0f       	add	r30, r24
    1aaa:	f9 1f       	adc	r31, r25
    1aac:	20 83       	st	Z, r18
    1aae:	31 83       	std	Z+1, r19	; 0x01
    1ab0:	a0 91 b8 40 	lds	r26, 0x40B8	; 0x8040b8 <qtm_acquisition_control_working_set_ptr>
    1ab4:	b0 91 b9 40 	lds	r27, 0x40B9	; 0x8040b9 <qtm_acquisition_control_working_set_ptr+0x1>
    1ab8:	44 e1       	ldi	r20, 0x14	; 20
    1aba:	46 9f       	mul	r20, r22
    1abc:	c0 01       	movw	r24, r0
    1abe:	47 9f       	mul	r20, r23
    1ac0:	90 0d       	add	r25, r0
    1ac2:	11 24       	eor	r1, r1
    1ac4:	12 96       	adiw	r26, 0x02	; 2
    1ac6:	ed 91       	ld	r30, X+
    1ac8:	fc 91       	ld	r31, X
    1aca:	13 97       	sbiw	r26, 0x03	; 3
    1acc:	e8 0f       	add	r30, r24
    1ace:	f9 1f       	adc	r31, r25
    1ad0:	92 89       	ldd	r25, Z+18	; 0x12
    1ad2:	9f 70       	andi	r25, 0x0F	; 15
    1ad4:	83 89       	ldd	r24, Z+19	; 0x13
    1ad6:	98 17       	cp	r25, r24
    1ad8:	10 f4       	brcc	.+4      	; 0x1ade <qtm_avr_da_ptc_handler_wcomp+0x54>
    1ada:	89 1b       	sub	r24, r25
    1adc:	01 c0       	rjmp	.+2      	; 0x1ae0 <qtm_avr_da_ptc_handler_wcomp+0x56>
    1ade:	80 e0       	ldi	r24, 0x00	; 0
    1ae0:	95 e0       	ldi	r25, 0x05	; 5
    1ae2:	96 9f       	mul	r25, r22
    1ae4:	a0 01       	movw	r20, r0
    1ae6:	97 9f       	mul	r25, r23
    1ae8:	50 0d       	add	r21, r0
    1aea:	11 24       	eor	r1, r1
    1aec:	14 96       	adiw	r26, 0x04	; 4
    1aee:	ed 91       	ld	r30, X+
    1af0:	fc 91       	ld	r31, X
    1af2:	15 97       	sbiw	r26, 0x05	; 5
    1af4:	e4 0f       	add	r30, r20
    1af6:	f5 1f       	adc	r31, r21
    1af8:	02 c0       	rjmp	.+4      	; 0x1afe <qtm_avr_da_ptc_handler_wcomp+0x74>
    1afa:	36 95       	lsr	r19
    1afc:	27 95       	ror	r18
    1afe:	8a 95       	dec	r24
    1b00:	e2 f7       	brpl	.-8      	; 0x1afa <qtm_avr_da_ptc_handler_wcomp+0x70>
    1b02:	21 83       	std	Z+1, r18	; 0x01
    1b04:	32 83       	std	Z+2, r19	; 0x02
    1b06:	82 e0       	ldi	r24, 0x02	; 2
    1b08:	80 93 a1 40 	sts	0x40A1, r24	; 0x8040a1 <touch_seq_lib_state>
    1b0c:	e0 91 9d 40 	lds	r30, 0x409D	; 0x80409d <ptc_wcomp_happened_pointer>
    1b10:	f0 91 9e 40 	lds	r31, 0x409E	; 0x80409e <ptc_wcomp_happened_pointer+0x1>
    1b14:	09 94       	ijmp

00001b16 <qtm_avr_da_ptc_handler_eoc>:
    1b16:	10 92 c0 07 	sts	0x07C0, r1	; 0x8007c0 <__TEXT_REGION_LENGTH__+0x7e07c0>
    1b1a:	80 91 47 40 	lds	r24, 0x4047	; 0x804047 <qtm_which_mode_current>
    1b1e:	81 30       	cpi	r24, 0x01	; 1
    1b20:	09 f0       	breq	.+2      	; 0x1b24 <qtm_avr_da_ptc_handler_eoc+0xe>
    1b22:	4e c0       	rjmp	.+156    	; 0x1bc0 <qtm_avr_da_ptc_handler_eoc+0xaa>
    1b24:	40 91 da 07 	lds	r20, 0x07DA	; 0x8007da <__TEXT_REGION_LENGTH__+0x7e07da>
    1b28:	50 91 db 07 	lds	r21, 0x07DB	; 0x8007db <__TEXT_REGION_LENGTH__+0x7e07db>
    1b2c:	80 91 a2 40 	lds	r24, 0x40A2	; 0x8040a2 <current_measure_channel>
    1b30:	90 91 a3 40 	lds	r25, 0x40A3	; 0x8040a3 <current_measure_channel+0x1>
    1b34:	9c 01       	movw	r18, r24
    1b36:	22 0f       	add	r18, r18
    1b38:	33 1f       	adc	r19, r19
    1b3a:	e0 91 ba 40 	lds	r30, 0x40BA	; 0x8040ba <qtm_raw_data_measurements_ptr>
    1b3e:	f0 91 bb 40 	lds	r31, 0x40BB	; 0x8040bb <qtm_raw_data_measurements_ptr+0x1>
    1b42:	e2 0f       	add	r30, r18
    1b44:	f3 1f       	adc	r31, r19
    1b46:	40 83       	st	Z, r20
    1b48:	51 83       	std	Z+1, r21	; 0x01
    1b4a:	01 96       	adiw	r24, 0x01	; 1
    1b4c:	80 93 a2 40 	sts	0x40A2, r24	; 0x8040a2 <current_measure_channel>
    1b50:	90 93 a3 40 	sts	0x40A3, r25	; 0x8040a3 <current_measure_channel+0x1>
    1b54:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <select_next_channel_to_measure>
    1b58:	81 11       	cpse	r24, r1
    1b5a:	09 c0       	rjmp	.+18     	; 0x1b6e <qtm_avr_da_ptc_handler_eoc+0x58>
    1b5c:	84 e0       	ldi	r24, 0x04	; 4
    1b5e:	80 93 a1 40 	sts	0x40A1, r24	; 0x8040a1 <touch_seq_lib_state>
    1b62:	80 91 a2 40 	lds	r24, 0x40A2	; 0x8040a2 <current_measure_channel>
    1b66:	90 91 a3 40 	lds	r25, 0x40A3	; 0x8040a3 <current_measure_channel+0x1>
    1b6a:	0c 94 1d 08 	jmp	0x103a	; 0x103a <qtm_measure_node>
    1b6e:	10 92 e8 07 	sts	0x07E8, r1	; 0x8007e8 <__TEXT_REGION_LENGTH__+0x7e07e8>
    1b72:	10 92 e9 07 	sts	0x07E9, r1	; 0x8007e9 <__TEXT_REGION_LENGTH__+0x7e07e9>
    1b76:	10 92 ea 07 	sts	0x07EA, r1	; 0x8007ea <__TEXT_REGION_LENGTH__+0x7e07ea>
    1b7a:	10 92 eb 07 	sts	0x07EB, r1	; 0x8007eb <__TEXT_REGION_LENGTH__+0x7e07eb>
    1b7e:	10 92 ec 07 	sts	0x07EC, r1	; 0x8007ec <__TEXT_REGION_LENGTH__+0x7e07ec>
    1b82:	10 92 ed 07 	sts	0x07ED, r1	; 0x8007ed <__TEXT_REGION_LENGTH__+0x7e07ed>
    1b86:	10 92 f0 07 	sts	0x07F0, r1	; 0x8007f0 <__TEXT_REGION_LENGTH__+0x7e07f0>
    1b8a:	10 92 f1 07 	sts	0x07F1, r1	; 0x8007f1 <__TEXT_REGION_LENGTH__+0x7e07f1>
    1b8e:	10 92 f2 07 	sts	0x07F2, r1	; 0x8007f2 <__TEXT_REGION_LENGTH__+0x7e07f2>
    1b92:	10 92 f3 07 	sts	0x07F3, r1	; 0x8007f3 <__TEXT_REGION_LENGTH__+0x7e07f3>
    1b96:	10 92 f4 07 	sts	0x07F4, r1	; 0x8007f4 <__TEXT_REGION_LENGTH__+0x7e07f4>
    1b9a:	10 92 f5 07 	sts	0x07F5, r1	; 0x8007f5 <__TEXT_REGION_LENGTH__+0x7e07f5>
    1b9e:	10 92 f8 07 	sts	0x07F8, r1	; 0x8007f8 <__TEXT_REGION_LENGTH__+0x7e07f8>
    1ba2:	10 92 f9 07 	sts	0x07F9, r1	; 0x8007f9 <__TEXT_REGION_LENGTH__+0x7e07f9>
    1ba6:	10 92 fa 07 	sts	0x07FA, r1	; 0x8007fa <__TEXT_REGION_LENGTH__+0x7e07fa>
    1baa:	10 92 fb 07 	sts	0x07FB, r1	; 0x8007fb <__TEXT_REGION_LENGTH__+0x7e07fb>
    1bae:	10 92 fc 07 	sts	0x07FC, r1	; 0x8007fc <__TEXT_REGION_LENGTH__+0x7e07fc>
    1bb2:	10 92 fd 07 	sts	0x07FD, r1	; 0x8007fd <__TEXT_REGION_LENGTH__+0x7e07fd>
    1bb6:	e0 91 9f 40 	lds	r30, 0x409F	; 0x80409f <ptc_seq_measure_complete_pointer>
    1bba:	f0 91 a0 40 	lds	r31, 0x40A0	; 0x8040a0 <ptc_seq_measure_complete_pointer+0x1>
    1bbe:	09 94       	ijmp
    1bc0:	0c 94 45 0d 	jmp	0x1a8a	; 0x1a8a <qtm_avr_da_ptc_handler_wcomp>

00001bc4 <__ashrdi3>:
    1bc4:	97 fb       	bst	r25, 7
    1bc6:	10 f8       	bld	r1, 0

00001bc8 <__lshrdi3>:
    1bc8:	16 94       	lsr	r1
    1bca:	00 08       	sbc	r0, r0
    1bcc:	0f 93       	push	r16
    1bce:	08 30       	cpi	r16, 0x08	; 8
    1bd0:	98 f0       	brcs	.+38     	; 0x1bf8 <__lshrdi3+0x30>
    1bd2:	08 50       	subi	r16, 0x08	; 8
    1bd4:	23 2f       	mov	r18, r19
    1bd6:	34 2f       	mov	r19, r20
    1bd8:	45 2f       	mov	r20, r21
    1bda:	56 2f       	mov	r21, r22
    1bdc:	67 2f       	mov	r22, r23
    1bde:	78 2f       	mov	r23, r24
    1be0:	89 2f       	mov	r24, r25
    1be2:	90 2d       	mov	r25, r0
    1be4:	f4 cf       	rjmp	.-24     	; 0x1bce <__lshrdi3+0x6>
    1be6:	05 94       	asr	r0
    1be8:	97 95       	ror	r25
    1bea:	87 95       	ror	r24
    1bec:	77 95       	ror	r23
    1bee:	67 95       	ror	r22
    1bf0:	57 95       	ror	r21
    1bf2:	47 95       	ror	r20
    1bf4:	37 95       	ror	r19
    1bf6:	27 95       	ror	r18
    1bf8:	0a 95       	dec	r16
    1bfa:	aa f7       	brpl	.-22     	; 0x1be6 <__lshrdi3+0x1e>
    1bfc:	0f 91       	pop	r16
    1bfe:	08 95       	ret

00001c00 <__cmpdi2_s8>:
    1c00:	00 24       	eor	r0, r0
    1c02:	a7 fd       	sbrc	r26, 7
    1c04:	00 94       	com	r0
    1c06:	2a 17       	cp	r18, r26
    1c08:	30 05       	cpc	r19, r0
    1c0a:	40 05       	cpc	r20, r0
    1c0c:	50 05       	cpc	r21, r0
    1c0e:	60 05       	cpc	r22, r0
    1c10:	70 05       	cpc	r23, r0
    1c12:	80 05       	cpc	r24, r0
    1c14:	90 05       	cpc	r25, r0
    1c16:	08 95       	ret

00001c18 <_exit>:
    1c18:	f8 94       	cli

00001c1a <__stop_program>:
    1c1a:	ff cf       	rjmp	.-2      	; 0x1c1a <__stop_program>
